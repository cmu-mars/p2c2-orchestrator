[
  {
    "content": "timeout != ros::Duration(0, 0) && time_left <= ros::Duration(0, 0)",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@268:8::268:75"
    ],
    "kind": "guard"
  },
  {
    "content": "isServerConnected()",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@256:6::256:25"
    ],
    "kind": "guard"
  },
  {
    "content": "timeout < ros::Duration(0, 0)",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@248:6::248:35"
    ],
    "kind": "guard"
  },
  {
    "content": "feedback_sub_.getNumPublishers() == 0",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@227:6::227:43"
    ],
    "kind": "guard"
  },
  {
    "content": "goalSubscribers_.find(status_caller_id_) == goalSubscribers_.end()",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@211:6::211:72"
    ],
    "kind": "guard"
  },
  {
    "content": "!status_received_",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@206:6::206:23"
    ],
    "kind": "guard"
  },
  {
    "content": "status_caller_id_ != cur_status_caller_id",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@182:8::182:49"
    ],
    "kind": "guard"
  },
  {
    "content": "status_received_",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@181:6::181:22"
    ],
    "kind": "guard"
  },
  {
    "content": "cancelSubscribers_[pub.getSubscriberName()] == 0",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@154:8::154:56"
    ],
    "kind": "guard"
  },
  {
    "content": "it == cancelSubscribers_.end()",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@146:6::146:36"
    ],
    "kind": "guard"
  },
  {
    "content": "cancelSubscribers_.find(pub.getSubscriberName()) == cancelSubscribers_.end()",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@123:6::123:82"
    ],
    "kind": "guard"
  },
  {
    "content": "goalSubscribers_[pub.getSubscriberName()] == 0",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@96:8::96:54"
    ],
    "kind": "guard"
  },
  {
    "content": "it == goalSubscribers_.end()",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@88:6::88:34"
    ],
    "kind": "guard"
  },
  {
    "content": "goalSubscribers_.find(pub.getSubscriberName()) == goalSubscribers_.end()",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@66:6::66:78"
    ],
    "kind": "guard"
  },
  {
    "content": "load_ref_count_ < 0",
    "locations": [
      "src/class_loader/src/class_loader.cpp@113:15::113:34"
    ],
    "kind": "guard"
  },
  {
    "content": "0 == load_ref_count_",
    "locations": [
      "src/class_loader/src/class_loader.cpp@111:8::111:28"
    ],
    "kind": "guard"
  },
  {
    "content": "plugin_ref_count_ > 0",
    "locations": [
      "src/class_loader/src/class_loader.cpp@102:6::102:27"
    ],
    "kind": "guard"
  },
  {
    "content": "lock_plugin_ref_count",
    "locations": [
      "src/class_loader/src/class_loader.cpp@98:6::98:27"
    ],
    "kind": "guard"
  },
  {
    "content": "!isOnDemandLoadUnloadEnabled()",
    "locations": [
      "src/class_loader/src/class_loader.cpp@59:6::59:36"
    ],
    "kind": "guard"
  },
  {
    "content": "!areThereAnyExistingMetaObjectsForLibrary(library_path)",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@577:12::577:67"
    ],
    "kind": "guard"
  },
  {
    "content": "itr != open_libraries.end()",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@570:8::570:35",
      "src/class_loader/src/class_loader_core.cpp@337:6::337:33"
    ],
    "kind": "guard"
  },
  {
    "content": "hasANonPurePluginLibraryBeenOpened()",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@552:6::552:42"
    ],
    "kind": "guard"
  },
  {
    "content": "0 == num_lib_objs",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@524:6::524:23"
    ],
    "kind": "guard"
  },
  {
    "content": "isLibraryLoadedByAnybody(library_path)",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@479:6::479:44"
    ],
    "kind": "guard"
  },
  {
    "content": "is_address_in_graveyard_same_as_global_factory_map",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@446:12::446:62"
    ],
    "kind": "guard"
  },
  {
    "content": "delete_objs",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@445:10::445:21"
    ],
    "kind": "guard"
  },
  {
    "content": "obj->getAssociatedLibraryPath() == library_path",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@434:8::434:55",
      "src/class_loader/src/class_loader_core.cpp@405:8::405:55"
    ],
    "kind": "guard"
  },
  {
    "content": "std::find(all_libs.begin(), all_libs.end(), lib_path) == all_libs.end()",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@366:8::366:79"
    ],
    "kind": "guard"
  },
  {
    "content": "itr->first == library_path",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@322:8::322:34"
    ],
    "kind": "guard"
  },
  {
    "content": "!meta_obj->isOwnedByAnybody()",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@259:10::259:39"
    ],
    "kind": "guard"
  },
  {
    "content": "meta_obj->getAssociatedLibraryPath() == library_path && meta_obj->isOwnedBy(loader)",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@257:8::257:91"
    ],
    "kind": "guard"
  },
  {
    "content": "to_filter.at(c)->getAssociatedLibraryPath() == library_path",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@212:8::212:67"
    ],
    "kind": "guard"
  },
  {
    "content": "to_filter.at(c)->isOwnedBy(owner)",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@198:8::198:41"
    ],
    "kind": "guard"
  },
  {
    "content": "factoryMapMap.find(base_class_name) == factoryMapMap.end()",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@76:6::76:64"
    ],
    "kind": "guard"
  },
  {
    "content": "itr != v.end()",
    "locations": [
      "src/class_loader/src/meta_object.cpp@107:6::107:20"
    ],
    "kind": "guard"
  },
  {
    "content": "std::find(v.begin(), v.end(), loader) == v.end()",
    "locations": [
      "src/class_loader/src/meta_object.cpp@97:6::97:54"
    ],
    "kind": "guard"
  },
  {
    "content": "0 == (remaining_unloads = loader->unloadLibrary())",
    "locations": [
      "src/class_loader/src/multi_library_class_loader.cpp@107:8::107:58"
    ],
    "kind": "guard"
  },
  {
    "content": "itr != active_class_loaders_.end()",
    "locations": [
      "src/class_loader/src/multi_library_class_loader.cpp@63:6::63:40",
      "src/class_loader/src/multi_library_class_loader.cpp@105:6::105:40"
    ],
    "kind": "guard"
  },
  {
    "content": "!isLibraryAvailable(library_path)",
    "locations": [
      "src/class_loader/src/multi_library_class_loader.cpp@87:6::87:39"
    ],
    "kind": "guard"
  },
  {
    "content": "storage_.empty()",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@104:6::104:22",
      "src/geometry2/tf2/src/cache.cpp@293:6::293:22",
      "src/geometry/tf/src/cache.cpp@293:6::293:22",
      "src/geometry2/tf2/src/cache.cpp@299:6::299:22",
      "src/geometry/tf/src/cache.cpp@287:6::287:22",
      "src/geometry2/tf2/src/cache.cpp@282:6::282:22",
      "src/geometry/tf/src/cache.cpp@276:6::276:22",
      "src/geometry/tf/src/cache.cpp@101:6::101:22"
    ],
    "kind": "guard"
  },
  {
    "content": "storage_it != storage_.end()",
    "locations": [
      "src/geometry/tf/src/cache.cpp@252:13::252:41",
      "src/geometry2/tf2/src/cache.cpp@249:5::249:33"
    ],
    "kind": "guard"
  },
  {
    "content": "storage_.rbegin()->stamp_ > new_data.stamp_ + max_storage_time_",
    "locations": [
      "src/geometry/tf/src/cache.cpp@245:10::245:73"
    ],
    "kind": "guard"
  },
  {
    "content": "storage_.begin() != storage_.end()",
    "locations": [
      "src/geometry/tf/src/cache.cpp@242:6::242:40"
    ],
    "kind": "guard"
  },
  {
    "content": "num_nodes == 0",
    "locations": [
      "src/geometry/tf/src/cache.cpp@198:6::198:20",
      "src/geometry2/tf2/src/cache.cpp@204:6::204:20",
      "src/geometry2/tf2/src/cache.cpp@237:6::237:20",
      "src/geometry/tf/src/cache.cpp@231:6::231:20"
    ],
    "kind": "guard"
  },
  {
    "content": "p_temp_1->frame_id_ == p_temp_2->frame_id_",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@214:7::214:50",
      "src/geometry/tf/src/cache.cpp@208:7::208:50"
    ],
    "kind": "guard"
  },
  {
    "content": "num_nodes == 2",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@212:11::212:25",
      "src/geometry/tf/src/cache.cpp@206:11::206:25"
    ],
    "kind": "guard"
  },
  {
    "content": "num_nodes == 1",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@208:11::208:25",
      "src/geometry/tf/src/cache.cpp@202:11::202:25"
    ],
    "kind": "guard"
  },
  {
    "content": "two.stamp_ == one.stamp_",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@179:5::179:31",
      "src/geometry/tf/src/cache.cpp@173:5::173:31"
    ],
    "kind": "guard"
  },
  {
    "content": "ts.stamp_ == target_time",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@120:8::120:32",
      "src/geometry/tf/src/cache.cpp@118:8::118:32"
    ],
    "kind": "guard"
  },
  {
    "content": "target_time < earliest_time",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@151:11::151:38",
      "src/geometry/tf/src/cache.cpp@149:11::149:38"
    ],
    "kind": "guard"
  },
  {
    "content": "target_time > latest_time",
    "locations": [
      "src/geometry/tf/src/cache.cpp@144:11::144:36",
      "src/geometry2/tf2/src/cache.cpp@146:11::146:36"
    ],
    "kind": "guard"
  },
  {
    "content": "target_time == earliest_time",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@140:11::140:39",
      "src/geometry/tf/src/cache.cpp@138:11::138:39"
    ],
    "kind": "guard"
  },
  {
    "content": "target_time == latest_time",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@135:6::135:32",
      "src/geometry/tf/src/cache.cpp@133:6::133:32"
    ],
    "kind": "guard"
  },
  {
    "content": "++storage_.begin() == storage_.end()",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@117:6::117:42",
      "src/geometry/tf/src/cache.cpp@115:6::115:42"
    ],
    "kind": "guard"
  },
  {
    "content": "target_time.isZero()",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@110:6::110:26",
      "src/geometry/tf/src/cache.cpp@108:6::108:26"
    ],
    "kind": "guard"
  },
  {
    "content": "error_str",
    "locations": [
      "src/geometry/tf/src/cache.cpp@90:6::90:15",
      "src/geometry2/tf2/src/cache.cpp@87:6::87:15",
      "src/geometry/tf/src/cache.cpp@80:6::80:15",
      "src/geometry/tf/src/cache.cpp@70:6::70:15",
      "src/geometry2/tf2/src/cache.cpp@77:6::77:15",
      "src/geometry2/tf2/src/cache.cpp@67:6::67:15",
      "src/geometry/tf/src/cache.cpp@62:6::62:15",
      "src/geometry2/tf2_ros/src/buffer.cpp@188:6::188:15"
    ],
    "kind": "guard"
  },
  {
    "content": "ros::Time() == time",
    "locations": [
      "src/geometry/tf/src/tf.cpp@279:6::279:25"
    ],
    "kind": "guard"
  },
  {
    "content": "frame_name.size() > 0",
    "locations": [
      "src/geometry/tf/src/tf.cpp@197:6::197:27",
      "src/geometry/tf/src/tf.cpp@162:6::162:27"
    ],
    "kind": "guard"
  },
  {
    "content": "prefix[0] == '/'",
    "locations": [
      "src/geometry/tf/src/tf.cpp@169:8::169:24"
    ],
    "kind": "guard"
  },
  {
    "content": "prefix.size() > 0",
    "locations": [
      "src/geometry/tf/src/tf.cpp@167:6::167:23"
    ],
    "kind": "guard"
  },
  {
    "content": "source",
    "locations": [
      "src/geometry/tf/src/tf.cpp@97:8::97:14",
      "src/geometry2/tf2/src/buffer_core.cpp@536:8::536:14"
    ],
    "kind": "guard"
  },
  {
    "content": "!cache->getData(time, st, error_string)",
    "locations": [
      "src/geometry/tf/src/tf.cpp@87:8::87:47",
      "src/geometry2/tf2/src/buffer_core.cpp@526:8::526:47"
    ],
    "kind": "guard"
  },
  {
    "content": "&cloudIn != &cloudOut",
    "locations": [
      "src/geometry/tf/src/transform_listener.cpp@227:6::227:27"
    ],
    "kind": "guard"
  },
  {
    "content": "retval != tf2_msgs::TF2Error::NO_ERROR",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@625:6::625:44",
      "src/geometry2/tf2/src/buffer_core.cpp@1615:6::1615:44",
      "src/geometry2/tf2/src/buffer_core.cpp@1596:6::1596:44",
      "src/geometry2/tf2/src/buffer_core.cpp@333:8::333:46"
    ],
    "kind": "guard"
  },
  {
    "content": "current_time > 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1563:10::1563:26",
      "src/geometry2/tf2/src/buffer_core.cpp@1545:10::1545:26",
      "src/geometry2/tf2/src/buffer_core.cpp@1212:8::1212:26"
    ],
    "kind": "guard"
  },
  {
    "content": "frameIDs_reverse[frame_id_num]==\"NO_PARENT\"",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1559:7::1559:50"
    ],
    "kind": "guard"
  },
  {
    "content": "counter_frame->getData(ros::Time(), temp)",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1553:8::1553:49"
    ],
    "kind": "guard"
  },
  {
    "content": "!counter_frame",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1506:8::1506:22",
      "src/geometry2/tf2/src/buffer_core.cpp@1544:8::1544:22"
    ],
    "kind": "guard"
  },
  {
    "content": "it != frame_authority_.end()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1516:8::1516:36",
      "src/geometry2/tf2/src/buffer_core.cpp@1197:8::1197:36"
    ],
    "kind": "guard"
  },
  {
    "content": "!counter_frame->getData(ros::Time(), temp)",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1509:7::1509:49"
    ],
    "kind": "guard"
  },
  {
    "content": "frames_.size() == 1",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1496:6::1496:25"
    ],
    "kind": "guard"
  },
  {
    "content": "it != transformable_callbacks_.end()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1451:12::1451:48"
    ],
    "kind": "guard"
  },
  {
    "content": "transformable_requests_.size() > 1",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1462:10::1462:44"
    ],
    "kind": "guard"
  },
  {
    "content": "do_cb",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1446:8::1446:13"
    ],
    "kind": "guard"
  },
  {
    "content": "!latest_time.isZero() && req.time + cache_time_ < latest_time",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1435:8::1435:69"
    ],
    "kind": "guard"
  },
  {
    "content": "req.source_id == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1424:8::1424:26",
      "src/geometry2/tf2/src/buffer_core.cpp@1310:6::1310:24"
    ],
    "kind": "guard"
  },
  {
    "content": "req.target_id == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1419:8::1419:26"
    ],
    "kind": "guard"
  },
  {
    "content": "parent_id == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1379:6::1379:20"
    ],
    "kind": "guard"
  },
  {
    "content": "! frame",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1375:6::1375:13"
    ],
    "kind": "guard"
  },
  {
    "content": "it != transformable_requests_.end()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1340:6::1340:41"
    ],
    "kind": "guard"
  },
  {
    "content": "!latest_time.isZero() && time + cache_time_ < latest_time",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1291:8::1291:65"
    ],
    "kind": "guard"
  },
  {
    "content": "req.request_handle == 0 || req.request_handle == 0xffffffffffffffffULL",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1300:6::1300:76"
    ],
    "kind": "guard"
  },
  {
    "content": "req.target_id && req.source_id",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1285:6::1285:36"
    ],
    "kind": "guard"
  },
  {
    "content": "canTransformInternal(req.target_id, req.source_id, time, 0)",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1279:6::1279:65"
    ],
    "kind": "guard"
  },
  {
    "content": "target_frame == source_frame",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@597:6::597:34",
      "src/geometry2/tf2/src/buffer_core.cpp@1269:6::1269:34",
      "src/geometry2/tf2/src/buffer_core.cpp@803:6::803:34"
    ],
    "kind": "guard"
  },
  {
    "content": "!cache->getData(ros::Time(), temp)",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1188:7::1188:41"
    ],
    "kind": "guard"
  },
  {
    "content": "!cache",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1023:8::1023:14",
      "src/geometry2/tf2/src/buffer_core.cpp@1080:8::1080:14",
      "src/geometry2/tf2/src/buffer_core.cpp@353:8::353:14",
      "src/geometry2/tf2/src/buffer_core.cpp@1183:8::1183:14",
      "src/geometry2/tf2/src/buffer_core.cpp@406:8::406:14"
    ],
    "kind": "guard"
  },
  {
    "content": "frames_.size() ==1",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1171:6::1171:24"
    ],
    "kind": "guard"
  },
  {
    "content": "it->second == common_parent",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1148:10::1148:37"
    ],
    "kind": "guard"
  },
  {
    "content": "!it->first.isZero()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1143:10::1143:29"
    ],
    "kind": "guard"
  },
  {
    "content": "error_string",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@445:10::445:22",
      "src/geometry2/tf2/src/buffer_core.cpp@384:10::384:22",
      "src/geometry2/tf2/src/buffer_core.cpp@460:10::460:22",
      "src/geometry2/tf2/src/buffer_core.cpp@1060:10::1060:22",
      "src/geometry2/tf2/src/buffer_core.cpp@414:10::414:22",
      "src/geometry2/tf2/src/buffer_core.cpp@1120:10::1120:22"
    ],
    "kind": "guard"
  },
  {
    "content": "time == ros::TIME_MAX",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1050:10::1050:31",
      "src/geometry2/tf2/src/buffer_core.cpp@1110:10::1110:31"
    ],
    "kind": "guard"
  },
  {
    "content": "depth > MAX_GRAPH_DEPTH",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1058:8::1058:31",
      "src/geometry2/tf2/src/buffer_core.cpp@443:8::443:31",
      "src/geometry2/tf2/src/buffer_core.cpp@382:8::382:31",
      "src/geometry2/tf2/src/buffer_core.cpp@1118:8::1118:31"
    ],
    "kind": "guard"
  },
  {
    "content": "frame == source_id",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1107:8::1107:26",
      "src/geometry2/tf2/src/buffer_core.cpp@425:8::425:26"
    ],
    "kind": "guard"
  },
  {
    "content": "it != lct_cache.end()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1098:8::1098:29"
    ],
    "kind": "guard"
  },
  {
    "content": "!latest.first.isZero()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1037:8::1037:30",
      "src/geometry2/tf2/src/buffer_core.cpp@1092:8::1092:30"
    ],
    "kind": "guard"
  },
  {
    "content": "latest.second == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1087:8::1087:26",
      "src/geometry2/tf2/src/buffer_core.cpp@1031:8::1031:26"
    ],
    "kind": "guard"
  },
  {
    "content": "frame == target_id",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@370:8::370:26",
      "src/geometry2/tf2/src/buffer_core.cpp@1047:8::1047:26"
    ],
    "kind": "guard"
  },
  {
    "content": "cache",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1004:8::1004:13",
      "src/geometry2/tf2/src/buffer_core.cpp@607:10::607:15"
    ],
    "kind": "guard"
  },
  {
    "content": "common_time == ros::TIME_MAX",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1155:6::1155:34"
    ],
    "kind": "guard"
  },
  {
    "content": "common_parent == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1131:6::1131:24"
    ],
    "kind": "guard"
  },
  {
    "content": "source_id == target_id",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1000:6::1000:28",
      "src/geometry2/tf2/src/buffer_core.cpp@323:6::323:28"
    ],
    "kind": "guard"
  },
  {
    "content": "source_id == 0 || target_id == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@998:6::998:38"
    ],
    "kind": "guard"
  },
  {
    "content": "frame_ptr->getData(ros::Time(), temp)",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@969:7::969:46"
    ],
    "kind": "guard"
  },
  {
    "content": "frame_ptr == NULL",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@966:8::966:25"
    ],
    "kind": "guard"
  },
  {
    "content": "!out",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@939:6::939:10"
    ],
    "kind": "guard"
  },
  {
    "content": "frame_id_num >= frameIDs_reverse.size()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@927:8::927:47"
    ],
    "kind": "guard"
  },
  {
    "content": "map_it == frameIDs_.end()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@912:6::912:31",
      "src/geometry2/tf2/src/buffer_core.cpp@899:6::899:31"
    ],
    "kind": "guard"
  },
  {
    "content": "frame_id >= frames_.size()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@887:6::887:32"
    ],
    "kind": "guard"
  },
  {
    "content": "target_id == 0 || source_id == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@816:6::816:38",
      "src/geometry2/tf2/src/buffer_core.cpp@872:14::872:46",
      "src/geometry2/tf2/src/buffer_core.cpp@758:6::758:38"
    ],
    "kind": "guard"
  },
  {
    "content": "target_id == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@768:14::768:28",
      "src/geometry2/tf2/src/buffer_core.cpp@864:14::864:28",
      "src/geometry2/tf2/src/buffer_core.cpp@826:14::826:28",
      "src/geometry2/tf2/src/buffer_core.cpp@858:12::858:26",
      "src/geometry2/tf2/src/buffer_core.cpp@762:12::762:26",
      "src/geometry2/tf2/src/buffer_core.cpp@820:12::820:26"
    ],
    "kind": "guard"
  },
  {
    "content": "source_id == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@766:12::766:26",
      "src/geometry2/tf2/src/buffer_core.cpp@862:12::862:26",
      "src/geometry2/tf2/src/buffer_core.cpp@824:12::824:26",
      "src/geometry2/tf2/src/buffer_core.cpp@870:12::870:26"
    ],
    "kind": "guard"
  },
  {
    "content": "error_msg",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@760:8::760:17",
      "src/geometry2/tf2/src/buffer_core.cpp@818:8::818:17",
      "src/geometry2/tf2/src/buffer_core.cpp@856:8::856:17"
    ],
    "kind": "guard"
  },
  {
    "content": "target_id == 0 || source_id == 0 || fixed_id == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@854:6::854:55"
    ],
    "kind": "guard"
  },
  {
    "content": "warnFrameId(\"canTransform argument fixed_frame\", fixed_frame)",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@846:6::846:67"
    ],
    "kind": "guard"
  },
  {
    "content": "warnFrameId(\"canTransform argument source_frame\", source_frame)",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@844:6::844:69",
      "src/geometry2/tf2/src/buffer_core.cpp@808:6::808:69"
    ],
    "kind": "guard"
  },
  {
    "content": "warnFrameId(\"canTransform argument target_frame\", target_frame)",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@806:6::806:69",
      "src/geometry2/tf2/src/buffer_core.cpp@842:6::842:69"
    ],
    "kind": "guard"
  },
  {
    "content": "walkToTopParent(accum, time, target_id, source_id, error_msg) == tf2_msgs::TF2Error::NO_ERROR",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@784:6::784:99"
    ],
    "kind": "guard"
  },
  {
    "content": "time == ros::Time()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@330:6::330:25",
      "src/geometry2/tf2/src/buffer_core.cpp@603:8::603:27"
    ],
    "kind": "guard"
  },
  {
    "content": "(*frame_chain)[n] != reverse_frame_chain[m]",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@487:10::487:53"
    ],
    "kind": "guard"
  },
  {
    "content": "m < reverse_frame_chain.size()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@498:8::498:38"
    ],
    "kind": "guard"
  },
  {
    "content": "n > 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@493:8::493:13"
    ],
    "kind": "guard"
  },
  {
    "content": "extrapolation_might_have_occurred",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@458:8::458:41"
    ],
    "kind": "guard"
  },
  {
    "content": "frame_chain",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@474:11::474:22",
      "src/geometry2/tf2/src/buffer_core.cpp@319:6::319:17",
      "src/geometry2/tf2/src/buffer_core.cpp@350:8::350:19",
      "src/geometry2/tf2/src/buffer_core.cpp@480:6::480:17",
      "src/geometry2/tf2/src/buffer_core.cpp@403:8::403:19",
      "src/geometry2/tf2/src/buffer_core.cpp@428:10::428:21"
    ],
    "kind": "guard"
  },
  {
    "content": "parent == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@361:8::361:19",
      "src/geometry2/tf2/src/buffer_core.cpp@412:8::412:19"
    ],
    "kind": "guard"
  },
  {
    "content": "frame != top_parent",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@456:6::456:25"
    ],
    "kind": "guard"
  },
  {
    "content": "is_static",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@290:6::290:15"
    ],
    "kind": "guard"
  },
  {
    "content": "frame->insertData(TransformStorage(stripped, lookupOrInsertFrameNumber(stripped.header.frame_id), frame_number))",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@271:8::271:120"
    ],
    "kind": "guard"
  },
  {
    "content": "frame == NULL",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@268:8::268:21"
    ],
    "kind": "guard"
  },
  {
    "content": "error_exists",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@261:6::261:18"
    ],
    "kind": "guard"
  },
  {
    "content": "!valid",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@253:6::253:12"
    ],
    "kind": "guard"
  },
  {
    "content": "stripped.header.frame_id == \"\"",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@231:6::231:36"
    ],
    "kind": "guard"
  },
  {
    "content": "stripped.child_frame_id == stripped.header.frame_id",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@219:6::219:57"
    ],
    "kind": "guard"
  },
  {
    "content": "*cache_it",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@194:10::194:19"
    ],
    "kind": "guard"
  },
  {
    "content": "frames_.size() > 1",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@190:6::190:26"
    ],
    "kind": "guard"
  },
  {
    "content": "id == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@158:6::158:13"
    ],
    "kind": "guard"
  },
  {
    "content": "startsWithSlash(frame_id)",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@130:6::130:31",
      "src/geometry2/tf2/src/buffer_core.cpp@150:6::150:31"
    ],
    "kind": "guard"
  },
  {
    "content": "frame_id.empty()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@143:6::143:22"
    ],
    "kind": "guard"
  },
  {
    "content": "frame_id.size() == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@122:6::122:26"
    ],
    "kind": "guard"
  },
  {
    "content": "startsWithSlash(in)",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@114:6::114:25"
    ],
    "kind": "guard"
  },
  {
    "content": "frame_id.size() > 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@105:6::105:25"
    ],
    "kind": "guard"
  },
  {
    "content": "storage_it->stamp_ <= new_data.stamp_",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@260:8::260:45"
    ],
    "kind": "guard"
  },
  {
    "content": "storage_it->stamp_ > new_data.stamp_ + max_storage_time_",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@251:8::251:64"
    ],
    "kind": "guard"
  },
  {
    "content": "isUsingDedicatedThread()",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer.cpp@183:6::183:30"
    ],
    "kind": "guard"
  },
  {
    "content": "!checkAndErrorDedicatedThreadPresent(errstr)",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer.cpp@155:6::155:50",
      "src/geometry2/tf2_ros/src/buffer.cpp@126:6::126:50"
    ],
    "kind": "guard"
  },
  {
    "content": "errstr",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_client.cpp@142:9::142:15",
      "src/geometry2/tf2_ros/src/buffer.cpp@150:6::150:12",
      "src/geometry2/tf2_ros/src/buffer_client.cpp@162:9::162:15",
      "src/geometry2/tf2_ros/src/buffer.cpp@107:6::107:12",
      "src/geometry2/tf2_ros/src/buffer.cpp@121:6::121:12"
    ],
    "kind": "guard"
  },
  {
    "content": "debug && !ros::service::exists(\"~tf2_frames\", false)",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer.cpp@44:5::44:57"
    ],
    "kind": "guard"
  },
  {
    "content": "result.error.error == result.error.TIMEOUT_ERROR",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_client.cpp@123:9::123:57"
    ],
    "kind": "guard"
  },
  {
    "content": "result.error.error == result.error.INVALID_ARGUMENT_ERROR",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_client.cpp@120:9::120:66"
    ],
    "kind": "guard"
  },
  {
    "content": "result.error.error == result.error.EXTRAPOLATION_ERROR",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_client.cpp@117:9::117:63"
    ],
    "kind": "guard"
  },
  {
    "content": "result.error.error == result.error.CONNECTIVITY_ERROR",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_client.cpp@114:9::114:62"
    ],
    "kind": "guard"
  },
  {
    "content": "result.error.error == result.error.LOOKUP_ERROR",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_client.cpp@111:9::111:56"
    ],
    "kind": "guard"
  },
  {
    "content": "result.error.error != result.error.NO_ERROR",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_client.cpp@109:7::109:50"
    ],
    "kind": "guard"
  },
  {
    "content": "client_.getState() != actionlib::SimpleClientGoalState::SUCCEEDED",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_client.cpp@99:7::99:72"
    ],
    "kind": "guard"
  },
  {
    "content": "timed_out",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_client.cpp@92:7::92:16"
    ],
    "kind": "guard"
  },
  {
    "content": "!goal->advanced",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_server.cpp@198:7::198:22",
      "src/geometry2/tf2_ros/src/buffer_server.cpp@210:7::210:22"
    ],
    "kind": "guard"
  },
  {
    "content": "canTransform(gh) || goal_info.end_time <= ros::Time::now()",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_server.cpp@147:7::147:65"
    ],
    "kind": "guard"
  },
  {
    "content": "info.handle == gh",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_server.cpp@123:9::123:26"
    ],
    "kind": "guard"
  },
  {
    "content": "canTransform(info.handle) || info.end_time < ros::Time::now()",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_server.cpp@63:9::63:70"
    ],
    "kind": "guard"
  },
  {
    "content": "it_in->child_frame_id == it_msg->child_frame_id",
    "locations": [
      "src/geometry2/tf2_ros/src/static_transform_broadcaster.cpp@60:10::60:57"
    ],
    "kind": "guard"
  },
  {
    "content": "! match_found",
    "locations": [
      "src/geometry2/tf2_ros/src/static_transform_broadcaster.cpp@67:8::67:21"
    ],
    "kind": "guard"
  },
  {
    "content": "now < last_update_",
    "locations": [
      "src/geometry2/tf2_ros/src/transform_listener.cpp@105:5::105:23"
    ],
    "kind": "guard"
  },
  {
    "content": "dedicated_listener_thread_",
    "locations": [
      "src/geometry2/tf2_ros/src/transform_listener.cpp@63:6::63:32"
    ],
    "kind": "guard"
  },
  {
    "content": "spin_thread",
    "locations": [
      "src/geometry2/tf2_ros/src/transform_listener.cpp@53:6::53:17",
      "src/geometry2/tf2_ros/src/transform_listener.cpp@41:6::41:17"
    ],
    "kind": "guard"
  },
  {
    "content": "!scan_in.ranges.empty()",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@661:7::661:30",
      "src/laser_geometry/src/laser_geometry.cpp@696:7::696:30",
      "src/laser_geometry/src/laser_geometry.cpp@215:7::215:30"
    ],
    "kind": "guard"
  },
  {
    "content": "(i % cloud_out.point_step) < index_offset || (i % cloud_out.point_step) >= (index_offset + 4)",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@640:11::640:104"
    ],
    "kind": "guard"
  },
  {
    "content": "cloud_out.fields[i].name != \"index\"",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@614:11::614:46"
    ],
    "kind": "guard"
  },
  {
    "content": "has_viewpoint",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@583:9::583:22"
    ],
    "kind": "guard"
  },
  {
    "content": "cloud_out.fields[i].name == \"vp_x\"",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@537:9::537:43"
    ],
    "kind": "guard"
  },
  {
    "content": "cloud_out.fields[i].name == \"index\"",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@529:9::529:44"
    ],
    "kind": "guard"
  },
  {
    "content": "!requested_index",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@597:7::597:23",
      "src/laser_geometry/src/laser_geometry.cpp@272:7::272:23"
    ],
    "kind": "guard"
  },
  {
    "content": "(channel_options & channel_option::Index)",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@508:8::508:49"
    ],
    "kind": "guard"
  },
  {
    "content": "idx_vpx != -1 && idx_vpy != -1 && idx_vpz != -1",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@447:11::447:58"
    ],
    "kind": "guard"
  },
  {
    "content": "idx_timestamp != -1",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@138:11::138:31",
      "src/laser_geometry/src/laser_geometry.cpp@443:11::443:30"
    ],
    "kind": "guard"
  },
  {
    "content": "idx_distance != -1",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@439:11::439:29",
      "src/laser_geometry/src/laser_geometry.cpp@127:12::127:30"
    ],
    "kind": "guard"
  },
  {
    "content": "idx_index != -1",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@123:12::123:27",
      "src/laser_geometry/src/laser_geometry.cpp@435:11::435:26"
    ],
    "kind": "guard"
  },
  {
    "content": "idx_intensity != -1",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@431:11::431:30",
      "src/laser_geometry/src/laser_geometry.cpp@133:14::133:33"
    ],
    "kind": "guard"
  },
  {
    "content": "range < range_cutoff && range >= scan_in.range_min",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@421:10::421:60"
    ],
    "kind": "guard"
  },
  {
    "content": "range_cutoff < 0",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@103:8::103:24",
      "src/laser_geometry/src/laser_geometry.cpp@413:8::413:24"
    ],
    "kind": "guard"
  },
  {
    "content": "(channel_options & channel_option::Viewpoint)",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@380:8::380:53"
    ],
    "kind": "guard"
  },
  {
    "content": "(channel_options & channel_option::Timestamp)",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@368:8::368:53"
    ],
    "kind": "guard"
  },
  {
    "content": "(channel_options & channel_option::Distance)",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@356:8::356:52"
    ],
    "kind": "guard"
  },
  {
    "content": "(channel_options & channel_option::Intensity) && scan_in.intensities.size() > 0",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@332:8::332:87"
    ],
    "kind": "guard"
  },
  {
    "content": "co_sine_map_.rows () != (int)n_pts || angle_min_ != scan_in.angle_min || angle_max_ != scan_in.angle_max",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@293:8::293:113"
    ],
    "kind": "guard"
  },
  {
    "content": "cloud_out.channels[i].name == \"index\"",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@228:9::228:46"
    ],
    "kind": "guard"
  },
  {
    "content": "(mask & channel_option::Index)",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@199:8::199:38"
    ],
    "kind": "guard"
  },
  {
    "content": "it != unit_vector_map_.end()",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@161:8::161:36"
    ],
    "kind": "guard"
  },
  {
    "content": "scan_in.intensities.size() >= index",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@131:12::131:47"
    ],
    "kind": "guard"
  },
  {
    "content": "preservative || ((range < range_cutoff) && (range >= scan_in.range_min))",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@110:10::110:82"
    ],
    "kind": "guard"
  },
  {
    "content": "mask & channel_option::Timestamp",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@94:8::94:40"
    ],
    "kind": "guard"
  },
  {
    "content": "mask & channel_option::Distance",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@85:8::85:39"
    ],
    "kind": "guard"
  },
  {
    "content": "(mask & channel_option::Intensity) && scan_in.intensities.size() > 0",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@65:8::65:76"
    ],
    "kind": "guard"
  },
  {
    "content": "d < ncell->occ_dist",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@224:14::224:33"
    ],
    "kind": "guard"
  },
  {
    "content": "!MAP_VALID(map, i + ni, j + nj)",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@218:14::218:45"
    ],
    "kind": "guard"
  },
  {
    "content": "cell->occ_state != +1",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@208:10::208:31"
    ],
    "kind": "guard"
  },
  {
    "content": "(int)current_cell.i_ < map->size_x - 1",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@163:7::163:45"
    ],
    "kind": "guard"
  },
  {
    "content": "current_cell.j_ > 0",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@159:7::159:26"
    ],
    "kind": "guard"
  },
  {
    "content": "current_cell.i_ > 0",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@155:7::155:26"
    ],
    "kind": "guard"
  },
  {
    "content": "map->cells[MAP_INDEX(map, i, j)].occ_state == +1",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@140:9::140:57"
    ],
    "kind": "guard"
  },
  {
    "content": "distance > cdm->cell_radius_",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@102:5::102:33"
    ],
    "kind": "guard"
  },
  {
    "content": "marked[MAP_INDEX(map, i, j)]",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@95:5::95:33"
    ],
    "kind": "guard"
  },
  {
    "content": "cdm",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@81:7::81:10"
    ],
    "kind": "guard"
  },
  {
    "content": "!cdm || (cdm->scale_ != scale) || (cdm->max_dist_ != max_dist)",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@79:5::79:67"
    ],
    "kind": "guard"
  },
  {
    "content": "distances_",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@55:9::55:19"
    ],
    "kind": "guard"
  },
  {
    "content": "temp_obs",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@495:5::495:13",
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@56:5::56:13"
    ],
    "kind": "guard"
  },
  {
    "content": "error || obs_mask[beam_ind]",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@478:6::478:33"
    ],
    "kind": "guard"
  },
  {
    "content": "(obs_count[beam_ind] / static_cast<double>(set->sample_count)) > beam_skip_threshold",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@450:9::450:93"
    ],
    "kind": "guard"
  },
  {
    "content": "skipped_beam_count >= (beam_ind * self->beam_skip_error_threshold)",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@465:7::465:73"
    ],
    "kind": "guard"
  },
  {
    "content": "z < beam_skip_distance",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@417:4::417:26"
    ],
    "kind": "guard"
  },
  {
    "content": "!do_beamskip",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@434:9::434:21",
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@441:7::441:19"
    ],
    "kind": "guard"
  },
  {
    "content": "!MAP_VALID(self->map, mi, mj)",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@276:9::276:38",
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@412:9::412:38"
    ],
    "kind": "guard"
  },
  {
    "content": "obs_range != obs_range",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@394:9::394:31",
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@260:9::260:31"
    ],
    "kind": "guard"
  },
  {
    "content": "obs_range >= data->range_max",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@256:9::256:37",
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@389:9::389:37"
    ],
    "kind": "guard"
  },
  {
    "content": "realloc",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@364:7::364:14"
    ],
    "kind": "guard"
  },
  {
    "content": "self->max_obs < self->max_beams",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@356:7::356:38"
    ],
    "kind": "guard"
  },
  {
    "content": "do_beamskip",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@355:5::355:16",
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@447:5::447:16"
    ],
    "kind": "guard"
  },
  {
    "content": "do_beamskip && !set->converged",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@340:5::340:35"
    ],
    "kind": "guard"
  },
  {
    "content": "step < 1",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@247:7::247:15",
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@322:5::322:13"
    ],
    "kind": "guard"
  },
  {
    "content": "obs_range < data->range_max",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@193:9::193:36"
    ],
    "kind": "guard"
  },
  {
    "content": "obs_range == data->range_max",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@189:9::189:37"
    ],
    "kind": "guard"
  },
  {
    "content": "z < 0",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@185:9::185:14"
    ],
    "kind": "guard"
  },
  {
    "content": "this->model_type == LASER_MODEL_LIKELIHOOD_FIELD_PROB",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@131:10::131:63"
    ],
    "kind": "guard"
  },
  {
    "content": "this->model_type == LASER_MODEL_LIKELIHOOD_FIELD",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@129:10::129:58"
    ],
    "kind": "guard"
  },
  {
    "content": "this->model_type == LASER_MODEL_BEAM",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@127:5::127:41"
    ],
    "kind": "guard"
  },
  {
    "content": "this->max_beams < 2",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@123:6::123:25"
    ],
    "kind": "guard"
  },
  {
    "content": "sqrt(ndata->delta.v[1]*ndata->delta.v[1] + \n            ndata->delta.v[0]*ndata->delta.v[0]) < 0.01",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_odom.cpp@265:7::266:55",
      "src/navigation/amcl/src/amcl/sensors/amcl_odom.cpp@174:7::175:55"
    ],
    "kind": "guard"
  },
  {
    "content": "fabs(d1) < fabs(d2)",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_odom.cpp@54:5::54:24",
      "src/navigation/amcl/src/amcl_node.cpp@102:5::102:24"
    ],
    "kind": "guard"
  },
  {
    "content": "d1 > 0",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@100:5::100:11",
      "src/navigation/amcl/src/amcl/sensors/amcl_odom.cpp@52:5::52:11"
    ],
    "kind": "guard"
  },
  {
    "content": "initial_pose_hyp_ != NULL && map_ != NULL",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1515:5::1515:48"
    ],
    "kind": "guard"
  },
  {
    "content": "sent_first_transform_",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1467:7::1467:28"
    ],
    "kind": "guard"
  },
  {
    "content": "tf_->resolve(msg.header.frame_id) != tf_->resolve(global_frame_id_)",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1439:10::1439:77"
    ],
    "kind": "guard"
  },
  {
    "content": "msg.header.frame_id == \"\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1433:5::1433:30"
    ],
    "kind": "guard"
  },
  {
    "content": "(save_pose_period.toSec() > 0.0) &&\n       (now - save_pose_last_time) >= save_pose_period",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1405:7::1406:54"
    ],
    "kind": "guard"
  },
  {
    "content": "tf_broadcast_ == true",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1371:10::1371:31",
      "src/navigation/amcl/src/amcl_node.cpp@1391:8::1391:29"
    ],
    "kind": "guard"
  },
  {
    "content": "hyps[hyp_count].weight > max_weight",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1282:9::1282:44"
    ],
    "kind": "guard"
  },
  {
    "content": "!pf_get_cluster_stats(pf_, hyp_count, &weight, &pose_mean, &pose_cov)",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1272:10::1272:79"
    ],
    "kind": "guard"
  },
  {
    "content": "max_weight > 0.0",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1289:7::1289:23"
    ],
    "kind": "guard"
  },
  {
    "content": "laser_scan->ranges[i] <= range_min",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1216:9::1216:43"
    ],
    "kind": "guard"
  },
  {
    "content": "!m_force_update",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1243:8::1243:23"
    ],
    "kind": "guard"
  },
  {
    "content": "!(++resample_count_ % resample_interval_)",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1232:7::1232:48"
    ],
    "kind": "guard"
  },
  {
    "content": "laser_min_range_ > 0.0",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1205:7::1205:29"
    ],
    "kind": "guard"
  },
  {
    "content": "laser_max_range_ > 0.0",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1200:7::1200:29"
    ],
    "kind": "guard"
  },
  {
    "content": "update",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1118:7::1118:13"
    ],
    "kind": "guard"
  },
  {
    "content": "latest_tf_valid_",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1389:10::1389:26"
    ],
    "kind": "guard"
  },
  {
    "content": "resampled || force_publication",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1259:5::1259:35"
    ],
    "kind": "guard"
  },
  {
    "content": "lasers_update_[laser_index]",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1162:5::1162:32"
    ],
    "kind": "guard"
  },
  {
    "content": "pf_init_ && lasers_update_[laser_index]",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1141:10::1141:49"
    ],
    "kind": "guard"
  },
  {
    "content": "!pf_init_",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1124:5::1124:14"
    ],
    "kind": "guard"
  },
  {
    "content": "pf_init_",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1102:5::1102:13"
    ],
    "kind": "guard"
  },
  {
    "content": "!getOdomPose(latest_odom_pose_, pose.v[0], pose.v[1], pose.v[2],\n                  laser_scan->header.stamp, base_frame_id_)",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1092:5::1093:59"
    ],
    "kind": "guard"
  },
  {
    "content": "frame_to_laser_.find(laser_scan->header.frame_id) == frame_to_laser_.end()",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1049:5::1049:79"
    ],
    "kind": "guard"
  },
  {
    "content": "map_ == NULL",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1042:5::1042:19",
      "src/navigation/amcl/src/amcl_node.cpp@1006:5::1006:19"
    ],
    "kind": "guard"
  },
  {
    "content": "MAP_VALID(map,i,j) && (map->cells[MAP_INDEX(map,i,j)].occ_state == -1)",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@995:7::995:77"
    ],
    "kind": "guard"
  },
  {
    "content": "map_msg.data[i] == 100",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@918:12::918:34"
    ],
    "kind": "guard"
  },
  {
    "content": "map_msg.data[i] == 0",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@916:7::916:27"
    ],
    "kind": "guard"
  },
  {
    "content": "map_ != NULL",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@882:5::882:19"
    ],
    "kind": "guard"
  },
  {
    "content": "laser_model_type_ == LASER_MODEL_LIKELIHOOD_FIELD_PROB",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@857:10::857:64",
      "src/navigation/amcl/src/amcl_node.cpp@571:10::571:64"
    ],
    "kind": "guard"
  },
  {
    "content": "laser_model_type_ == LASER_MODEL_BEAM",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@568:5::568:42",
      "src/navigation/amcl/src/amcl_node.cpp@854:5::854:42"
    ],
    "kind": "guard"
  },
  {
    "content": "map_->cells[MAP_INDEX(map_,i,j)].occ_state == -1",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@820:9::820:57"
    ],
    "kind": "guard"
  },
  {
    "content": "first_map_only_ && first_map_received_",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@787:5::787:45"
    ],
    "kind": "guard"
  },
  {
    "content": "d > laser_check_interval_",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@758:5::758:30"
    ],
    "kind": "guard"
  },
  {
    "content": "!std::isnan(tmp_pos)",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@733:5::733:25",
      "src/navigation/amcl/src/amcl_node.cpp@728:5::728:25",
      "src/navigation/amcl/src/amcl_node.cpp@743:5::743:25",
      "src/navigation/amcl/src/amcl_node.cpp@723:5::723:25",
      "src/navigation/amcl/src/amcl_node.cpp@748:5::748:25",
      "src/navigation/amcl/src/amcl_node.cpp@738:5::738:25"
    ],
    "kind": "guard"
  },
  {
    "content": "bag_scan_period_ > ros::WallDuration(0)",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@662:10::662:49"
    ],
    "kind": "guard"
  },
  {
    "content": "base_scan != NULL",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@658:8::658:25"
    ],
    "kind": "guard"
  },
  {
    "content": "tf_msg != NULL",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@647:8::647:22"
    ],
    "kind": "guard"
  },
  {
    "content": "!ros::ok()",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@638:8::638:18"
    ],
    "kind": "guard"
  },
  {
    "content": "map_",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@626:10::626:14"
    ],
    "kind": "guard"
  },
  {
    "content": "laser_model_type_ == LASER_MODEL_LIKELIHOOD_FIELD",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@579:10::579:59"
    ],
    "kind": "guard"
  },
  {
    "content": "config.min_particles > config.max_particles",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@521:5::521:48"
    ],
    "kind": "guard"
  },
  {
    "content": "config.odom_model_type == \"omni-corrected\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@518:10::518:52"
    ],
    "kind": "guard"
  },
  {
    "content": "config.odom_model_type == \"diff-corrected\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@516:10::516:52"
    ],
    "kind": "guard"
  },
  {
    "content": "config.odom_model_type == \"omni\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@514:10::514:42"
    ],
    "kind": "guard"
  },
  {
    "content": "config.odom_model_type == \"diff\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@512:5::512:37"
    ],
    "kind": "guard"
  },
  {
    "content": "config.laser_model_type == \"likelihood_field_prob\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@509:10::509:60"
    ],
    "kind": "guard"
  },
  {
    "content": "config.laser_model_type == \"likelihood_field\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@507:10::507:55"
    ],
    "kind": "guard"
  },
  {
    "content": "config.laser_model_type == \"beam\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@505:5::505:38"
    ],
    "kind": "guard"
  },
  {
    "content": "config.restore_defaults",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@471:5::471:28",
      "src/navigation/move_base/src/move_base.cpp@217:7::217:30"
    ],
    "kind": "guard"
  },
  {
    "content": "first_reconfigure_call_",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@464:5::464:28"
    ],
    "kind": "guard"
  },
  {
    "content": "use_map_topic_",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@440:5::440:19"
    ],
    "kind": "guard"
  },
  {
    "content": "tmp_model_type == \"omni-corrected\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@387:10::387:44"
    ],
    "kind": "guard"
  },
  {
    "content": "tmp_model_type == \"diff-corrected\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@385:10::385:44"
    ],
    "kind": "guard"
  },
  {
    "content": "tmp_model_type == \"omni\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@383:10::383:34"
    ],
    "kind": "guard"
  },
  {
    "content": "tmp_model_type == \"diff\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@381:5::381:29"
    ],
    "kind": "guard"
  },
  {
    "content": "tmp_model_type == \"likelihood_field_prob\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@370:10::370:51"
    ],
    "kind": "guard"
  },
  {
    "content": "tmp_model_type == \"likelihood_field\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@368:10::368:46"
    ],
    "kind": "guard"
  },
  {
    "content": "tmp_model_type == \"beam\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@366:5::366:29"
    ],
    "kind": "guard"
  },
  {
    "content": "(argc == 3) && (std::string(argv[1]) == \"--run-from-bag\")",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@302:11::302:68"
    ],
    "kind": "guard"
  },
  {
    "content": "argc == 1",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@297:6::297:15"
    ],
    "kind": "guard"
  },
  {
    "content": "cost == LETHAL_OBSTACLE || cost == NO_INFORMATION",
    "locations": [
      "src/navigation/base_local_planner/src/costmap_model.cpp@134:7::134:56"
    ],
    "kind": "guard"
  },
  {
    "content": "line_cost < point_cost",
    "locations": [
      "src/navigation/base_local_planner/src/costmap_model.cpp@123:9::123:31",
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@156:9::156:31",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@461:10::461:32"
    ],
    "kind": "guard"
  },
  {
    "content": "point_cost < 0",
    "locations": [
      "src/navigation/base_local_planner/src/costmap_model.cpp@120:9::120:23",
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@153:9::153:23",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@457:10::457:24"
    ],
    "kind": "guard"
  },
  {
    "content": "line_cost < 0",
    "locations": [
      "src/navigation/base_local_planner/src/costmap_model.cpp@85:9::85:22",
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@71:9::71:22",
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@86:7::86:20",
      "src/navigation/base_local_planner/src/costmap_model.cpp@101:7::101:20"
    ],
    "kind": "guard"
  },
  {
    "content": "!costmap_.worldToMap(footprint[i + 1].x, footprint[i + 1].y, x1, y1)",
    "locations": [
      "src/navigation/base_local_planner/src/costmap_model.cpp@78:9::78:77"
    ],
    "kind": "guard"
  },
  {
    "content": "!costmap_.worldToMap(footprint[i].x, footprint[i].y, x0, y0)",
    "locations": [
      "src/navigation/base_local_planner/src/costmap_model.cpp@74:9::74:69"
    ],
    "kind": "guard"
  },
  {
    "content": "cost == LETHAL_OBSTACLE || cost == INSCRIBED_INFLATED_OBSTACLE || cost == NO_INFORMATION",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@481:7::481:95",
      "src/navigation/base_local_planner/src/costmap_model.cpp@61:9::61:97"
    ],
    "kind": "guard"
  },
  {
    "content": "!costmap_.worldToMap(footprint.front().x, footprint.front().y, x1, y1)",
    "locations": [
      "src/navigation/base_local_planner/src/costmap_model.cpp@95:7::95:77"
    ],
    "kind": "guard"
  },
  {
    "content": "!costmap_.worldToMap(footprint.back().x, footprint.back().y, x0, y0)",
    "locations": [
      "src/navigation/base_local_planner/src/costmap_model.cpp@91:7::91:75"
    ],
    "kind": "guard"
  },
  {
    "content": "footprint.size() < 3",
    "locations": [
      "src/navigation/base_local_planner/src/costmap_model.cpp@58:7::58:27",
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@51:7::51:27"
    ],
    "kind": "guard"
  },
  {
    "content": "!costmap_.worldToMap(position.x, position.y, cell_x, cell_y)",
    "locations": [
      "src/navigation/base_local_planner/src/costmap_model.cpp@54:7::54:67"
    ],
    "kind": "guard"
  },
  {
    "content": "!costmap.worldToMap(new_x, new_y, x1, y1)",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@220:8::220:49",
      "src/navigation/base_local_planner/src/footprint_helper.cpp@235:5::235:46"
    ],
    "kind": "guard"
  },
  {
    "content": "!costmap.worldToMap(new_x, new_y, x0, y0)",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@213:7::213:48",
      "src/navigation/base_local_planner/src/footprint_helper.cpp@230:6::230:47"
    ],
    "kind": "guard"
  },
  {
    "content": "costmap.worldToMap(x_i, y_i, mx, my)",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@193:8::193:44"
    ],
    "kind": "guard"
  },
  {
    "content": "fill",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@241:5::241:9"
    ],
    "kind": "guard"
  },
  {
    "content": "footprint_spec.size() <= 1",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@191:6::191:32"
    ],
    "kind": "guard"
  },
  {
    "content": "footprint[i].y < min_pt.y",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@160:9::160:34"
    ],
    "kind": "guard"
  },
  {
    "content": "i >= footprint.size() - 1",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@147:8::147:33"
    ],
    "kind": "guard"
  },
  {
    "content": "i > 0",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@132:9::132:14",
      "src/navigation/costmap_2d/src/costmap_2d.cpp@375:10::375:15"
    ],
    "kind": "guard"
  },
  {
    "content": "footprint[i].x > footprint[i + 1].x",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@128:8::128:43"
    ],
    "kind": "guard"
  },
  {
    "content": "num >= den",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@111:8::111:18",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@466:10::466:20",
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@160:10::160:20"
    ],
    "kind": "guard"
  },
  {
    "content": "deltax >= deltay",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@85:6::85:22",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@437:8::437:24",
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@130:8::130:24"
    ],
    "kind": "guard"
  },
  {
    "content": "y1 >= y0",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@426:8::426:16",
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@119:8::119:16",
      "src/navigation/base_local_planner/src/footprint_helper.cpp@74:6::74:14"
    ],
    "kind": "guard"
  },
  {
    "content": "x1 >= x0",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@63:6::63:14",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@415:8::415:16",
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@108:8::108:16"
    ],
    "kind": "guard"
  },
  {
    "content": "stopped(base_odom, rot_stopped_vel, trans_stopped_vel)",
    "locations": [
      "src/navigation/base_local_planner/src/goal_functions.cpp@241:11::241:65"
    ],
    "kind": "guard"
  },
  {
    "content": "fabs(getGoalOrientationAngleDifference(global_pose, goal_th)) <= yaw_goal_tolerance",
    "locations": [
      "src/navigation/base_local_planner/src/goal_functions.cpp@239:9::239:92"
    ],
    "kind": "guard"
  },
  {
    "content": "getGoalPositionDistance(global_pose, goal_x, goal_y) <= xy_goal_tolerance",
    "locations": [
      "src/navigation/base_local_planner/src/goal_functions.cpp@237:7::237:80"
    ],
    "kind": "guard"
  },
  {
    "content": "global_plan.size() > 0",
    "locations": [
      "src/navigation/base_local_planner/src/goal_functions.cpp@211:10::211:32"
    ],
    "kind": "guard"
  },
  {
    "content": "global_plan.empty()",
    "locations": [
      "src/navigation/base_local_planner/src/goal_functions.cpp@179:8::179:27",
      "src/navigation/base_local_planner/src/goal_functions.cpp@97:8::97:27"
    ],
    "kind": "guard"
  },
  {
    "content": "!global_plan.empty()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@457:21::457:41",
      "src/navigation/base_local_planner/src/goal_functions.cpp@167:10::167:30"
    ],
    "kind": "guard"
  },
  {
    "content": "sq_dist <= sq_dist_threshold",
    "locations": [
      "src/navigation/base_local_planner/src/goal_functions.cpp@130:12::130:40"
    ],
    "kind": "guard"
  },
  {
    "content": "distance_sq < 1",
    "locations": [
      "src/navigation/base_local_planner/src/goal_functions.cpp@79:9::79:24"
    ],
    "kind": "guard"
  },
  {
    "content": "path.empty()",
    "locations": [
      "src/navigation/base_local_planner/src/goal_functions.cpp@52:7::52:19"
    ],
    "kind": "guard"
  },
  {
    "content": "! rotateToGoal(\n          global_pose,\n          robot_vel,\n          goal_th,\n          cmd_vel,\n          acc_lim,\n          sim_period,\n          limits,\n          obstacle_check)",
    "locations": [
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@255:10::263:25"
    ],
    "kind": "guard"
  },
  {
    "content": "! stopWithAccLimits(\n          global_pose,\n          robot_vel,\n          cmd_vel,\n          acc_lim,\n          sim_period,\n          obstacle_check)",
    "locations": [
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@239:10::245:25"
    ],
    "kind": "guard"
  },
  {
    "content": "! rotating_to_goal_ && !base_local_planner::stopped(base_odom, limits.rot_stopped_vel, limits.trans_stopped_vel)",
    "locations": [
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@238:8::238:121"
    ],
    "kind": "guard"
  },
  {
    "content": "fabs(angle) <= limits.yaw_goal_tolerance",
    "locations": [
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@98:8::98:48",
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@224:6::224:46"
    ],
    "kind": "guard"
  },
  {
    "content": "latch_xy_goal_tolerance_ && ! xy_tolerance_latch_",
    "locations": [
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@91:8::91:57",
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@217:6::217:56"
    ],
    "kind": "guard"
  },
  {
    "content": "! planner_util->getGoal(goal_pose)",
    "locations": [
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@43:6::43:41",
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@77:6::77:41",
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@208:6::208:41"
    ],
    "kind": "guard"
  },
  {
    "content": "valid_cmd",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@305:7::305:16",
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@186:6::186:15",
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@132:5::132:14",
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@352:7::352:16"
    ],
    "kind": "guard"
  },
  {
    "content": "ang_diff < 0",
    "locations": [
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@177:6::177:18"
    ],
    "kind": "guard"
  },
  {
    "content": "base_local_planner::stopped(base_odom, rot_stopped_vel, trans_stopped_vel)",
    "locations": [
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@100:10::100:84"
    ],
    "kind": "guard"
  },
  {
    "content": "(latch_xy_goal_tolerance_ && xy_tolerance_latch_) ||\n      base_local_planner::getGoalPositionDistance(global_pose, goal_x, goal_y) <= xy_goal_tolerance",
    "locations": [
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@87:6::88:99",
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@51:6::52:99"
    ],
    "kind": "guard"
  },
  {
    "content": "limits_.prune_plan",
    "locations": [
      "src/navigation/base_local_planner/src/local_planner_util.cpp@119:5::119:23"
    ],
    "kind": "guard"
  },
  {
    "content": "!base_local_planner::transformGlobalPlan(\n      *tf_,\n      global_plan_,\n      global_pose,\n      *costmap_,\n      global_frame_,\n      transformed_plan)",
    "locations": [
      "src/navigation/base_local_planner/src/local_planner_util.cpp@107:5::113:23"
    ],
    "kind": "guard"
  },
  {
    "content": "!initialized_",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@97:7::97:20",
      "src/navigation/navfn/src/navfn_ros.cpp@124:7::124:20",
      "src/navigation/navfn/src/navfn_ros.cpp@60:7::60:20",
      "src/navigation/base_local_planner/src/local_planner_util.cpp@92:5::92:18",
      "src/navigation/clear_costmap_recovery/src/clear_costmap_recovery.cpp@81:5::81:18",
      "src/navigation/navfn/src/navfn_ros.cpp@138:7::138:20",
      "src/navigation/navfn/src/navfn_ros.cpp@383:7::383:20",
      "src/navigation/clear_costmap_recovery/src/clear_costmap_recovery.cpp@52:5::52:18",
      "src/navigation/navfn/src/navfn_ros.cpp@359:7::359:20",
      "src/navigation/base_local_planner/src/local_planner_util.cpp@48:5::48:18",
      "src/navigation/navfn/src/navfn_ros.cpp@200:7::200:20",
      "src/navigation/navfn/src/navfn_ros.cpp@168:7::168:20"
    ],
    "kind": "guard"
  },
  {
    "content": "!setup_",
    "locations": [
      "src/navigation/base_local_planner/src/local_planner_util.cpp@65:5::65:12",
      "src/navigation/move_base/src/move_base.cpp@209:7::209:14"
    ],
    "kind": "guard"
  },
  {
    "content": "setup_ && restore_defaults",
    "locations": [
      "src/navigation/base_local_planner/src/local_planner_util.cpp@61:5::61:31"
    ],
    "kind": "guard"
  },
  {
    "content": "updatePathCell(current_cell, check_cell, costmap)",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@292:13::292:62",
      "src/navigation/base_local_planner/src/map_grid.cpp@282:13::282:62",
      "src/navigation/base_local_planner/src/map_grid.cpp@272:13::272:62",
      "src/navigation/base_local_planner/src/map_grid.cpp@302:13::302:62"
    ],
    "kind": "guard"
  },
  {
    "content": "!check_cell->target_mark",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@290:11::290:35",
      "src/navigation/base_local_planner/src/map_grid.cpp@269:11::269:35",
      "src/navigation/base_local_planner/src/map_grid.cpp@280:11::280:35",
      "src/navigation/base_local_planner/src/map_grid.cpp@300:11::300:35"
    ],
    "kind": "guard"
  },
  {
    "content": "current_cell->cy > 0",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@288:9::288:29"
    ],
    "kind": "guard"
  },
  {
    "content": "current_cell->cx > 0",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@267:9::267:29"
    ],
    "kind": "guard"
  },
  {
    "content": "started_path",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@232:12::232:24"
    ],
    "kind": "guard"
  },
  {
    "content": "costmap.worldToMap(g_x, g_y, map_x, map_y) && costmap.getCost(map_x, map_y) != costmap_2d::NO_INFORMATION",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@227:10::227:115",
      "src/navigation/base_local_planner/src/map_grid.cpp@191:10::191:115"
    ],
    "kind": "guard"
  },
  {
    "content": "local_goal_x >= 0 && local_goal_y >= 0",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@243:8::243:46"
    ],
    "kind": "guard"
  },
  {
    "content": "!started_path",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@237:8::237:21",
      "src/navigation/base_local_planner/src/map_grid.cpp@201:8::201:21"
    ],
    "kind": "guard"
  },
  {
    "content": "adjusted_global_plan.size() != global_plan.size()",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@182:8::182:57"
    ],
    "kind": "guard"
  },
  {
    "content": "sqdist > min_sq_resolution",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@149:10::149:36"
    ],
    "kind": "guard"
  },
  {
    "content": "global_plan_in.size() == 0",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@135:8::135:34"
    ],
    "kind": "guard"
  },
  {
    "content": "new_target_dist < check_cell->target_dist",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@117:8::117:49"
    ],
    "kind": "guard"
  },
  {
    "content": "! getCell(check_cell->cx, check_cell->cy).within_robot &&\n        (cost == costmap_2d::LETHAL_OBSTACLE ||\n         cost == costmap_2d::INSCRIBED_INFLATED_OBSTACLE ||\n         cost == costmap_2d::NO_INFORMATION)",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@108:7::111:44"
    ],
    "kind": "guard"
  },
  {
    "content": "map_.size() != size_x * size_y",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@85:7::85:37"
    ],
    "kind": "guard"
  },
  {
    "content": "cost > 0",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid_cost_function.cpp@122:10::122:18"
    ],
    "kind": "guard"
  },
  {
    "content": "grid_dist == map_.obstacleCosts()",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid_cost_function.cpp@107:10::107:43"
    ],
    "kind": "guard"
  },
  {
    "content": "stop_on_failure_",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid_cost_function.cpp@106:8::106:24"
    ],
    "kind": "guard"
  },
  {
    "content": "! costmap_->worldToMap(px, py, cell_x, cell_y)",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid_cost_function.cpp@99:8::99:55"
    ],
    "kind": "guard"
  },
  {
    "content": "yshift_ != 0.0",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid_cost_function.cpp@93:8::93:22"
    ],
    "kind": "guard"
  },
  {
    "content": "xshift_ != 0.0",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid_cost_function.cpp@88:8::88:22"
    ],
    "kind": "guard"
  },
  {
    "content": "aggregationType_ == Product",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid_cost_function.cpp@77:6::77:33"
    ],
    "kind": "guard"
  },
  {
    "content": "is_local_goal_function_",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid_cost_function.cpp@62:6::62:29"
    ],
    "kind": "guard"
  },
  {
    "content": "cost_function_(cx, cy, path_cost, goal_cost, occ_cost, total_cost)",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid_visualizer.cpp@69:12::69:78"
    ],
    "kind": "guard"
  },
  {
    "content": "! costmap->worldToMap(x, y, cell_x, cell_y)",
    "locations": [
      "src/navigation/base_local_planner/src/obstacle_cost_function.cpp@135:6::135:50"
    ],
    "kind": "guard"
  },
  {
    "content": "footprint_cost < 0",
    "locations": [
      "src/navigation/base_local_planner/src/obstacle_cost_function.cpp@129:6::129:24",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@280:9::280:27"
    ],
    "kind": "guard"
  },
  {
    "content": "vmag > scaling_speed",
    "locations": [
      "src/navigation/base_local_planner/src/obstacle_cost_function.cpp@108:6::108:26"
    ],
    "kind": "guard"
  },
  {
    "content": "sum_scores_",
    "locations": [
      "src/navigation/base_local_planner/src/obstacle_cost_function.cpp@94:7::94:18"
    ],
    "kind": "guard"
  },
  {
    "content": "f_cost < 0",
    "locations": [
      "src/navigation/base_local_planner/src/obstacle_cost_function.cpp@90:7::90:17"
    ],
    "kind": "guard"
  },
  {
    "content": "footprint_spec_.size() == 0",
    "locations": [
      "src/navigation/base_local_planner/src/obstacle_cost_function.cpp@78:6::78:33"
    ],
    "kind": "guard"
  },
  {
    "content": "world_model_ != NULL",
    "locations": [
      "src/navigation/base_local_planner/src/obstacle_cost_function.cpp@53:6::53:26",
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@286:7::286:27"
    ],
    "kind": "guard"
  },
  {
    "content": "costmap != NULL",
    "locations": [
      "src/navigation/base_local_planner/src/obstacle_cost_function.cpp@47:6::47:21"
    ],
    "kind": "guard"
  },
  {
    "content": "odom_topic_ != \"\"",
    "locations": [
      "src/navigation/base_local_planner/src/odometry_helper_ros.cpp@86:7::86:26"
    ],
    "kind": "guard"
  },
  {
    "content": "odom_topic != odom_topic_",
    "locations": [
      "src/navigation/base_local_planner/src/odometry_helper_ros.cpp@82:5::82:32"
    ],
    "kind": "guard"
  },
  {
    "content": "(forward_pos_only_ && traj.xv_ < 0.0) ||\n      (forward_neg_only_ && traj.xv_ > 0.0) ||\n      (strafe_pos_only_  && traj.yv_ < 0.0) ||\n      (strafe_neg_only_  && traj.yv_ > 0.0) ||\n      (rot_pos_only_     && traj.thetav_ < 0.0) ||\n      (rot_neg_only_     && traj.thetav_ > 0.0)",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@167:6::172:47"
    ],
    "kind": "guard"
  },
  {
    "content": "rotating_neg_",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@155:10::155:23"
    ],
    "kind": "guard"
  },
  {
    "content": "rotating_pos_",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@145:10::145:23"
    ],
    "kind": "guard"
  },
  {
    "content": "strafing_neg_",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@135:10::135:23"
    ],
    "kind": "guard"
  },
  {
    "content": "strafing_pos_",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@125:10::125:23"
    ],
    "kind": "guard"
  },
  {
    "content": "t->thetav_ > 0",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@154:8::154:22"
    ],
    "kind": "guard"
  },
  {
    "content": "t->thetav_ < 0",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@144:8::144:22"
    ],
    "kind": "guard"
  },
  {
    "content": "t->yv_ > 0",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@134:8::134:18"
    ],
    "kind": "guard"
  },
  {
    "content": "t->yv_ < 0",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@124:8::124:18"
    ],
    "kind": "guard"
  },
  {
    "content": "forward_neg_",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@113:8::113:20"
    ],
    "kind": "guard"
  },
  {
    "content": "forward_pos_",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@105:8::105:20"
    ],
    "kind": "guard"
  },
  {
    "content": "fabs(t->xv_) <= min_vel_trans",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@122:6::122:35"
    ],
    "kind": "guard"
  },
  {
    "content": "t->xv_ < 0.0",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@104:6::104:18"
    ],
    "kind": "guard"
  },
  {
    "content": "sq_dist > oscillation_reset_dist_ * oscillation_reset_dist_ ||\n      fabs(th_diff) > oscillation_reset_angle_",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@78:6::79:46"
    ],
    "kind": "guard"
  },
  {
    "content": "forward_pos_only_ || forward_neg_only_\n        || strafe_pos_only_ || strafe_neg_only_\n        || rot_pos_only_ || rot_neg_only_",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@62:7::64:41"
    ],
    "kind": "guard"
  },
  {
    "content": "setOscillationFlags(traj, min_vel_trans)",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@58:8::58:48"
    ],
    "kind": "guard"
  },
  {
    "content": "traj->cost_ >= 0",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@57:6::57:22"
    ],
    "kind": "guard"
  },
  {
    "content": "legal >= 0.0",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@676:5::676:17"
    ],
    "kind": "guard"
  },
  {
    "content": "det == 0",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@546:7::546:15"
    ],
    "kind": "guard"
  },
  {
    "content": "ptInPolygon(pt, poly)",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@521:13::521:34"
    ],
    "kind": "guard"
  },
  {
    "content": "cell_points != NULL",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@515:9::515:28",
      "src/navigation/base_local_planner/src/point_grid.cpp@120:9::120:28",
      "src/navigation/base_local_planner/src/point_grid.cpp@419:9::419:28"
    ],
    "kind": "guard"
  },
  {
    "content": "points_.empty()",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@103:7::103:22",
      "src/navigation/base_local_planner/src/point_grid.cpp@509:7::509:22",
      "src/navigation/base_local_planner/src/point_grid.cpp@413:7::413:22"
    ],
    "kind": "guard"
  },
  {
    "content": "poly.size() == 0",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@488:7::488:23"
    ],
    "kind": "guard"
  },
  {
    "content": "index >= laser_scan.cloud.points.size() - 1",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@463:9::463:52"
    ],
    "kind": "guard"
  },
  {
    "content": "vector_angle < 0 || vector_angle >= total_rads",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@456:9::456:55"
    ],
    "kind": "guard"
  },
  {
    "content": "vector_angle < 0",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@450:9::450:25"
    ],
    "kind": "guard"
  },
  {
    "content": "!laser_scan.cloud.points.empty()",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@436:7::436:39"
    ],
    "kind": "guard"
  },
  {
    "content": "ptInScan(pt, laser_scan)",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@425:13::425:37"
    ],
    "kind": "guard"
  },
  {
    "content": "laser_scan.cloud.points.size() == 0",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@393:7::393:42",
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@216:7::216:42"
    ],
    "kind": "guard"
  },
  {
    "content": "sq_dist >= sq_obstacle_range_",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@380:11::380:40",
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@203:11::203:40"
    ],
    "kind": "guard"
  },
  {
    "content": "cloud[i].z > max_z_",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@372:11::372:30",
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@195:11::195:30"
    ],
    "kind": "guard"
  },
  {
    "content": "laser_scans.empty()",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@361:7::361:26"
    ],
    "kind": "guard"
  },
  {
    "content": "sq_dist < sq_min_separation_",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@339:9::339:37",
      "src/navigation/base_local_planner/src/point_grid.cpp@303:9::303:37",
      "src/navigation/base_local_planner/src/point_grid.cpp@312:9::312:37",
      "src/navigation/base_local_planner/src/point_grid.cpp@294:9::294:37",
      "src/navigation/base_local_planner/src/point_grid.cpp@285:9::285:37",
      "src/navigation/base_local_planner/src/point_grid.cpp@330:9::330:37",
      "src/navigation/base_local_planner/src/point_grid.cpp@321:9::321:37",
      "src/navigation/base_local_planner/src/point_grid.cpp@348:9::348:37"
    ],
    "kind": "guard"
  },
  {
    "content": "gx > 0 && gy > 0",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@344:7::344:23"
    ],
    "kind": "guard"
  },
  {
    "content": "gy > 0",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@335:7::335:13"
    ],
    "kind": "guard"
  },
  {
    "content": "gx < width_ - 1 && gy < height_ - 1",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@308:7::308:42"
    ],
    "kind": "guard"
  },
  {
    "content": "gx > 0 && gy < height_ - 1",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@290:7::290:33"
    ],
    "kind": "guard"
  },
  {
    "content": "gx > 0",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@281:7::281:13"
    ],
    "kind": "guard"
  },
  {
    "content": "nearestNeighborDistance(pt) < sq_min_separation_",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@243:7::243:55"
    ],
    "kind": "guard"
  },
  {
    "content": "!gridCoords(pt, gx, gy)",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@239:7::239:30"
    ],
    "kind": "guard"
  },
  {
    "content": "j < x_steps - 1",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@227:11::227:26"
    ],
    "kind": "guard"
  },
  {
    "content": "!cell.empty()",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@224:11::224:24"
    ],
    "kind": "guard"
  },
  {
    "content": "!gridCoords(upper_left, gx, gy)",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@201:7::201:38"
    ],
    "kind": "guard"
  },
  {
    "content": "!gridCoords(lower_right, gx, gy)",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@197:7::197:39"
    ],
    "kind": "guard"
  },
  {
    "content": "!gridCoords(lower_left, gx, gy)",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@192:7::192:38"
    ],
    "kind": "guard"
  },
  {
    "content": "all_left",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@160:11::160:19",
      "src/navigation/base_local_planner/src/point_grid.cpp@171:9::171:17"
    ],
    "kind": "guard"
  },
  {
    "content": "all_right",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@154:11::154:20",
      "src/navigation/base_local_planner/src/point_grid.cpp@167:9::167:18"
    ],
    "kind": "guard"
  },
  {
    "content": "orient(poly[i], poly[i + 1], pt) > 0",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@153:9::153:45"
    ],
    "kind": "guard"
  },
  {
    "content": "orient(poly[poly.size() - 1], poly[0], pt) > 0",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@166:7::166:53"
    ],
    "kind": "guard"
  },
  {
    "content": "poly.size() < 3",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@143:7::143:22"
    ],
    "kind": "guard"
  },
  {
    "content": "pt.x > i_lower_left.x && pt.x < i_upper_right.x && pt.y > i_lower_left.y && pt.y < i_upper_right.y",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@127:15::127:113"
    ],
    "kind": "guard"
  },
  {
    "content": "pt.x > c_lower_left.x && pt.x < c_upper_right.x && pt.y > c_lower_left.y && pt.y < c_upper_right.y",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@125:13::125:111"
    ],
    "kind": "guard"
  },
  {
    "content": "poly.size() < 2",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@62:5::62:20"
    ],
    "kind": "guard"
  },
  {
    "content": "best_traj_cost < 0 || loop_traj_cost < best_traj_cost",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@113:14::113:67"
    ],
    "kind": "guard"
  },
  {
    "content": "max_samples_ > 0 && count >= max_samples_",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@119:12::119:53"
    ],
    "kind": "guard"
  },
  {
    "content": "loop_traj_cost >= 0",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@111:12::111:31"
    ],
    "kind": "guard"
  },
  {
    "content": "all_explored != NULL",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@106:12::106:32"
    ],
    "kind": "guard"
  },
  {
    "content": "gen_success == false",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@101:12::101:32"
    ],
    "kind": "guard"
  },
  {
    "content": "best_traj_cost >= 0",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@136:10::136:29",
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@123:10::123:29"
    ],
    "kind": "guard"
  },
  {
    "content": "loop_critic_p->prepare() == false",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@89:10::89:43"
    ],
    "kind": "guard"
  },
  {
    "content": "traj_cost > best_traj_cost",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@70:12::70:38"
    ],
    "kind": "guard"
  },
  {
    "content": "best_traj_cost > 0",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@68:10::68:28"
    ],
    "kind": "guard"
  },
  {
    "content": "cost != 0",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@64:10::64:19"
    ],
    "kind": "guard"
  },
  {
    "content": "cost < 0",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@59:10::59:18"
    ],
    "kind": "guard"
  },
  {
    "content": "score_function_p->getScale() == 0",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@55:10::55:43"
    ],
    "kind": "guard"
  },
  {
    "content": "vel[i] < sample_target_vel[i]",
    "locations": [
      "src/navigation/base_local_planner/src/simple_trajectory_generator.cpp@269:8::269:37"
    ],
    "kind": "guard"
  },
  {
    "content": "continued_acceleration_",
    "locations": [
      "src/navigation/base_local_planner/src/simple_trajectory_generator.cpp@219:6::219:29",
      "src/navigation/base_local_planner/src/simple_trajectory_generator.cpp@239:8::239:31"
    ],
    "kind": "guard"
  },
  {
    "content": "limits_->max_trans_vel >=0 && vmag - eps > limits_->max_trans_vel",
    "locations": [
      "src/navigation/base_local_planner/src/simple_trajectory_generator.cpp@198:6::198:71"
    ],
    "kind": "guard"
  },
  {
    "content": "(limits_->min_trans_vel >= 0 && vmag + eps < limits_->min_trans_vel) &&\n      (limits_->min_rot_vel >= 0 && fabs(sample_target_vel[2]) + eps < limits_->min_rot_vel)",
    "locations": [
      "src/navigation/base_local_planner/src/simple_trajectory_generator.cpp@193:6::194:92"
    ],
    "kind": "guard"
  },
  {
    "content": "generateTrajectory(\n        pos_,\n        vel_,\n        sample_params_[next_sample_index_],\n        comp_traj)",
    "locations": [
      "src/navigation/base_local_planner/src/simple_trajectory_generator.cpp@164:8::168:18"
    ],
    "kind": "guard"
  },
  {
    "content": "hasMoreTrajectories()",
    "locations": [
      "src/navigation/base_local_planner/src/simple_trajectory_generator.cpp@163:6::163:27"
    ],
    "kind": "guard"
  },
  {
    "content": "! use_dwa_",
    "locations": [
      "src/navigation/base_local_planner/src/simple_trajectory_generator.cpp@91:8::91:19"
    ],
    "kind": "guard"
  },
  {
    "content": "vsamples[0] * vsamples[1] * vsamples[2] > 0",
    "locations": [
      "src/navigation/base_local_planner/src/simple_trajectory_generator.cpp@86:6::86:49"
    ],
    "kind": "guard"
  },
  {
    "content": "obstacle_grid_.getVoxel(i, j, k)",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@273:13::273:45"
    ],
    "kind": "guard"
  },
  {
    "content": "worldToMap3D(wpx, wpy, wpz, point_x, point_y, point_z)",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@263:9::263:63"
    ],
    "kind": "guard"
  },
  {
    "content": "wpz < 0.0",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@251:14::251:23"
    ],
    "kind": "guard"
  },
  {
    "content": "wpz >= max_z_",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@240:9::240:22"
    ],
    "kind": "guard"
  },
  {
    "content": "!worldToMap3D(ox, oy, oz, sensor_x, sensor_y, sensor_z)",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@224:7::224:62"
    ],
    "kind": "guard"
  },
  {
    "content": "obstacle_grid_.getVoxelColumn(x, y)",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@175:7::175:42"
    ],
    "kind": "guard"
  },
  {
    "content": "!worldToMap2D(footprint[i + 1].x, footprint[i + 1].y, x1, y1)",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@65:9::65:70"
    ],
    "kind": "guard"
  },
  {
    "content": "!worldToMap2D(footprint[i].x, footprint[i].y, x0, y0)",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@61:9::61:62"
    ],
    "kind": "guard"
  },
  {
    "content": "!worldToMap2D(footprint.front().x, footprint.front().y, x1, y1)",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@81:7::81:70"
    ],
    "kind": "guard"
  },
  {
    "content": "!worldToMap2D(footprint.back().x, footprint.back().y, x0, y0)",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@77:7::77:68"
    ],
    "kind": "guard"
  },
  {
    "content": "grid[index]!=NO_INFORMATION",
    "locations": [
      "src/navigation/clear_costmap_recovery/src/clear_costmap_recovery.cpp@146:9::146:36"
    ],
    "kind": "guard"
  },
  {
    "content": "xrange && y>start_y && y<end_y",
    "locations": [
      "src/navigation/clear_costmap_recovery/src/clear_costmap_recovery.cpp@143:9::143:39"
    ],
    "kind": "guard"
  },
  {
    "content": "slash != std::string::npos",
    "locations": [
      "src/navigation/clear_costmap_recovery/src/clear_costmap_recovery.cpp@112:7::112:35"
    ],
    "kind": "guard"
  },
  {
    "content": "!costmap->getRobotPose(pose)",
    "locations": [
      "src/navigation/clear_costmap_recovery/src/clear_costmap_recovery.cpp@100:5::100:33"
    ],
    "kind": "guard"
  },
  {
    "content": "global_costmap_ == NULL || local_costmap_ == NULL",
    "locations": [
      "src/navigation/clear_costmap_recovery/src/clear_costmap_recovery.cpp@86:5::86:54"
    ],
    "kind": "guard"
  },
  {
    "content": "weight_ != cost_scaling_factor || inflation_radius_ != inflation_radius",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@367:6::367:77"
    ],
    "kind": "guard"
  },
  {
    "content": "cached_costs_[i]",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@357:10::357:26"
    ],
    "kind": "guard"
  },
  {
    "content": "cached_distances_[i]",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@345:10::345:30"
    ],
    "kind": "guard"
  },
  {
    "content": "cached_distances_",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@348:8::348:25"
    ],
    "kind": "guard"
  },
  {
    "content": "cached_costs_ != NULL",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@353:6::353:27"
    ],
    "kind": "guard"
  },
  {
    "content": "cached_distances_ != NULL",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@341:6::341:31"
    ],
    "kind": "guard"
  },
  {
    "content": "cell_inflation_radius_ != cached_cell_inflation_radius_",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@310:6::310:61"
    ],
    "kind": "guard"
  },
  {
    "content": "cell_inflation_radius_ == 0",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@306:6::306:33"
    ],
    "kind": "guard"
  },
  {
    "content": "distance > cell_inflation_radius_",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@296:8::296:41"
    ],
    "kind": "guard"
  },
  {
    "content": "!seen_[index]",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@290:6::290:19"
    ],
    "kind": "guard"
  },
  {
    "content": "my < size_y - 1",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@270:10::270:25"
    ],
    "kind": "guard"
  },
  {
    "content": "mx < size_x - 1",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@268:10::268:25"
    ],
    "kind": "guard"
  },
  {
    "content": "my > 0",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@266:10::266:16"
    ],
    "kind": "guard"
  },
  {
    "content": "mx > 0",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@264:10::264:16"
    ],
    "kind": "guard"
  },
  {
    "content": "old_cost == NO_INFORMATION && cost >= INSCRIBED_INFLATED_OBSTACLE",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@258:10::258:75"
    ],
    "kind": "guard"
  },
  {
    "content": "seen_[index]",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@243:10::243:22"
    ],
    "kind": "guard"
  },
  {
    "content": "cost == LETHAL_OBSTACLE",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@223:10::223:33"
    ],
    "kind": "guard"
  },
  {
    "content": "seen_size_ != size_x * size_y",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@189:11::189:40"
    ],
    "kind": "guard"
  },
  {
    "content": "seen_ == NULL",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@184:6::184:19"
    ],
    "kind": "guard"
  },
  {
    "content": "!enabled_ || (cell_inflation_radius_ == 0)",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@175:6::175:48"
    ],
    "kind": "guard"
  },
  {
    "content": "need_reinflation_",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@128:6::128:23"
    ],
    "kind": "guard"
  },
  {
    "content": "seen_",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@119:6::119:11",
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@77:8::77:13"
    ],
    "kind": "guard"
  },
  {
    "content": "enabled_ != config.enabled",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@104:6::104:32"
    ],
    "kind": "guard"
  },
  {
    "content": "dsrv_ != NULL",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@86:8::86:21"
    ],
    "kind": "guard"
  },
  {
    "content": "observation_subscribers_[i] != NULL",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@597:8::597:43",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@583:8::583:43"
    ],
    "kind": "guard"
  },
  {
    "content": "observation_buffers_[i]",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@589:8::589:31"
    ],
    "kind": "guard"
  },
  {
    "content": "!worldToMap(wx, wy, x1, y1)",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@566:8::566:35"
    ],
    "kind": "guard"
  },
  {
    "content": "wy > map_end_y",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@555:8::555:22"
    ],
    "kind": "guard"
  },
  {
    "content": "wx > map_end_x",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@549:8::549:22"
    ],
    "kind": "guard"
  },
  {
    "content": "wy < origin_y",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@541:8::541:21"
    ],
    "kind": "guard"
  },
  {
    "content": "wx < origin_x",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@535:8::535:21"
    ],
    "kind": "guard"
  },
  {
    "content": "!worldToMap(ox, oy, x0, y0)",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@507:6::507:33"
    ],
    "kind": "guard"
  },
  {
    "content": "clearing",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@148:8::148:16",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@454:6::454:14",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@462:6::462:14"
    ],
    "kind": "guard"
  },
  {
    "content": "marking",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@460:6::460:13",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@144:8::144:15",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@452:6::452:13"
    ],
    "kind": "guard"
  },
  {
    "content": "footprint_clearing_enabled_",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@432:6::432:33"
    ],
    "kind": "guard"
  },
  {
    "content": "!enabled_",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@296:6::296:15",
      "src/navigation/costmap_2d/src/costmap_layer.cpp@93:6::93:15",
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@121:6::121:15",
      "src/navigation/costmap_2d/src/costmap_layer.cpp@112:6::112:15",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@345:6::345:15",
      "src/navigation/costmap_2d/src/costmap_layer.cpp@48:6::48:15",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@429:6::429:15",
      "src/navigation/costmap_2d/src/costmap_layer.cpp@75:6::75:15"
    ],
    "kind": "guard"
  },
  {
    "content": "!footprint_clearing_enabled_",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@418:8::418:36"
    ],
    "kind": "guard"
  },
  {
    "content": "!worldToMap(px, py, mx, my)",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@400:10::400:37"
    ],
    "kind": "guard"
  },
  {
    "content": "sq_dist >= sq_obstacle_range",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@392:10::392:38",
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@164:10::164:38"
    ],
    "kind": "guard"
  },
  {
    "content": "pz > max_obstacle_height_",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@381:10::381:35"
    ],
    "kind": "guard"
  },
  {
    "content": "rolling_window_",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@343:6::343:21",
      "src/navigation/costmap_2d/src/layered_costmap.cpp@86:6::86:21",
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@119:6::119:21"
    ],
    "kind": "guard"
  },
  {
    "content": "!sensor_msgs::convertPointCloudToPointCloud2(*message, cloud2)",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@319:6::319:68"
    ],
    "kind": "guard"
  },
  {
    "content": "!std::isfinite(range) && range > 0",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@286:8::286:42"
    ],
    "kind": "guard"
  },
  {
    "content": "dsrv_",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@241:8::241:13",
      "src/navigation/costmap_2d/plugins/static_layer.cpp@56:6::56:11"
    ],
    "kind": "guard"
  },
  {
    "content": "inf_is_valid",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@204:10::204:22",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@165:10::165:22",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@186:10::186:22"
    ],
    "kind": "guard"
  },
  {
    "content": "sensor_frame != \"\"",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@218:8::218:26"
    ],
    "kind": "guard"
  },
  {
    "content": "data_type == \"PointCloud\"",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@181:13::181:38"
    ],
    "kind": "guard"
  },
  {
    "content": "data_type == \"LaserScan\"",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@157:8::157:32"
    ],
    "kind": "guard"
  },
  {
    "content": "source_node.searchParam(\"raytrace_range\", raytrace_range_param_name)",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@128:8::128:76"
    ],
    "kind": "guard"
  },
  {
    "content": "source_node.searchParam(\"obstacle_range\", obstacle_range_param_name)",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@121:8::121:76"
    ],
    "kind": "guard"
  },
  {
    "content": "!(data_type == \"PointCloud2\" || data_type == \"PointCloud\" || data_type == \"LaserScan\")",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@111:8::111:94"
    ],
    "kind": "guard"
  },
  {
    "content": "!sensor_frame.empty()",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@106:8::106:29"
    ],
    "kind": "guard"
  },
  {
    "content": "track_unknown_space",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@61:6::61:25"
    ],
    "kind": "guard"
  },
  {
    "content": "!use_maximum_",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@336:14::336:27",
      "src/navigation/costmap_2d/plugins/static_layer.cpp@302:8::302:21"
    ],
    "kind": "guard"
  },
  {
    "content": "worldToMap(p.x(), p.y(), mx, my)",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@334:12::334:44"
    ],
    "kind": "guard"
  },
  {
    "content": "!layered_costmap_->isRolling()",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@299:6::299:36",
      "src/navigation/costmap_2d/plugins/static_layer.cpp@271:5::271:37",
      "src/navigation/costmap_2d/plugins/static_layer.cpp@140:6::140:36"
    ],
    "kind": "guard"
  },
  {
    "content": "!map_received_",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@293:6::293:20"
    ],
    "kind": "guard"
  },
  {
    "content": "!map_received_ || !(has_updated_data_ || has_extra_bounds_)",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@272:8::272:67"
    ],
    "kind": "guard"
  },
  {
    "content": "first_map_only_",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@217:6::217:21",
      "src/navigation/costmap_2d/plugins/static_layer.cpp@257:6::257:21"
    ],
    "kind": "guard"
  },
  {
    "content": "subscribe_to_updates_",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@251:6::251:27",
      "src/navigation/costmap_2d/plugins/static_layer.cpp@101:8::101:29"
    ],
    "kind": "guard"
  },
  {
    "content": "size_x_ != size_x || size_y_ != size_y ||\n           resolution_ != new_map->info.resolution ||\n           origin_x_ != new_map->info.origin.position.x ||\n           origin_y_ != new_map->info.origin.position.y",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@184:11::187:55"
    ],
    "kind": "guard"
  },
  {
    "content": "!layered_costmap_->isRolling() && (master->getSizeInCellsX() != size_x ||\n      master->getSizeInCellsY() != size_y ||\n      master->getResolution() != new_map->info.resolution ||\n      master->getOriginX() != new_map->info.origin.position.x ||\n      master->getOriginY() != new_map->info.origin.position.y ||\n      !layered_costmap_->isSizeLocked())",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@172:6::177:40"
    ],
    "kind": "guard"
  },
  {
    "content": "trinary_costmap_",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@157:11::157:27"
    ],
    "kind": "guard"
  },
  {
    "content": "value >= lethal_threshold_",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@155:11::155:37"
    ],
    "kind": "guard"
  },
  {
    "content": "!track_unknown_space_ && value == unknown_cost_value_",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@153:11::153:64"
    ],
    "kind": "guard"
  },
  {
    "content": "track_unknown_space_ && value == unknown_cost_value_",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@151:6::151:58"
    ],
    "kind": "guard"
  },
  {
    "content": "config.enabled != enabled_",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@126:6::126:32"
    ],
    "kind": "guard"
  },
  {
    "content": "map_sub_.getTopic() != ros::names::resolve(map_topic)",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@84:6::84:59"
    ],
    "kind": "guard"
  },
  {
    "content": "publish_clearing_points",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@287:6::287:29",
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@364:10::364:33",
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@375:6::375:29"
    ],
    "kind": "guard"
  },
  {
    "content": "worldToMap3DFloat(wpx, wpy, wpz, point_x, point_y, point_z)",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@353:8::353:67"
    ],
    "kind": "guard"
  },
  {
    "content": "wpy > map_end_y",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@343:8::343:23"
    ],
    "kind": "guard"
  },
  {
    "content": "wpx > map_end_x",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@339:8::339:23"
    ],
    "kind": "guard"
  },
  {
    "content": "wpy < origin_y_",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@333:8::333:23"
    ],
    "kind": "guard"
  },
  {
    "content": "wpx < origin_x_",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@329:8::329:23"
    ],
    "kind": "guard"
  },
  {
    "content": "wpz < origin_z_",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@322:13::322:28"
    ],
    "kind": "guard"
  },
  {
    "content": "wpz > max_obstacle_height_",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@316:8::316:34"
    ],
    "kind": "guard"
  },
  {
    "content": "!worldToMap3DFloat(ox, oy, oz, sensor_x, sensor_y, sensor_z)",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@277:6::277:66"
    ],
    "kind": "guard"
  },
  {
    "content": "clearing_observation.cloud_->points.size() == 0",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@269:6::269:53"
    ],
    "kind": "guard"
  },
  {
    "content": "clear_no_info || *current != NO_INFORMATION",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@252:12::252:55"
    ],
    "kind": "guard"
  },
  {
    "content": "*current != LETHAL_OBSTACLE",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@250:10::250:37"
    ],
    "kind": "guard"
  },
  {
    "content": "!worldToMap(start_x, start_y, map_sx, map_sy) || !worldToMap(end_x, end_y, map_ex, map_ey)",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@239:6::239:96"
    ],
    "kind": "guard"
  },
  {
    "content": "!worldToMap(wx, wy, mx, my)",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@219:6::219:33"
    ],
    "kind": "guard"
  },
  {
    "content": "!worldToMap3D(cloud.points[i].x, cloud.points[i].y, origin_z_, mx, my, mz)",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@171:12::171:86"
    ],
    "kind": "guard"
  },
  {
    "content": "voxel_grid_.markVoxelInMap(mx, my, mz, mark_threshold_)",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@180:10::180:65"
    ],
    "kind": "guard"
  },
  {
    "content": "cloud.points[i].z < origin_z_",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@169:10::169:39"
    ],
    "kind": "guard"
  },
  {
    "content": "cloud.points[i].z > max_obstacle_height_",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@155:10::155:50"
    ],
    "kind": "guard"
  },
  {
    "content": "publish_voxel_",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@61:6::61:20",
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@190:6::190:20"
    ],
    "kind": "guard"
  },
  {
    "content": "voxel_dsrv_",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@77:6::77:17"
    ],
    "kind": "guard"
  },
  {
    "content": "!fp",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@465:6::465:9",
      "src/navigation/navfn/src/navfn.cpp@1084:10::1084:13",
      "src/navigation/navfn/src/navfn.cpp@1072:10::1072:13"
    ],
    "kind": "guard"
  },
  {
    "content": "polygon_cells[i].y > max_pt.y",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@410:15::410:44"
    ],
    "kind": "guard"
  },
  {
    "content": "polygon_cells[i].y < min_pt.y",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@408:10::408:39"
    ],
    "kind": "guard"
  },
  {
    "content": "i >= polygon_cells.size() - 1",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@391:8::391:37"
    ],
    "kind": "guard"
  },
  {
    "content": "polygon_cells[i].x > polygon_cells[i + 1].x",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@369:8::369:51"
    ],
    "kind": "guard"
  },
  {
    "content": "polygon.size() < 3",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@358:6::358:24"
    ],
    "kind": "guard"
  },
  {
    "content": "!polygon.empty()",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@347:6::347:22"
    ],
    "kind": "guard"
  },
  {
    "content": "!worldToMap(polygon[i].x, polygon[i].y, loc.x, loc.y)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@318:8::318:61"
    ],
    "kind": "guard"
  },
  {
    "content": "wy > resolution_ * size_y_ + origin_y_",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@250:11::250:49"
    ],
    "kind": "guard"
  },
  {
    "content": "wy < origin_y_",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@246:6::246:20"
    ],
    "kind": "guard"
  },
  {
    "content": "wx > resolution_ * size_x_ + origin_x_",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@237:11::237:49"
    ],
    "kind": "guard"
  },
  {
    "content": "wx < origin_x_",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@233:6::233:20"
    ],
    "kind": "guard"
  },
  {
    "content": "mx < size_x_ && my < size_y_",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@216:6::216:34"
    ],
    "kind": "guard"
  },
  {
    "content": "wx < origin_x_ || wy < origin_y_",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@210:6::210:38"
    ],
    "kind": "guard"
  },
  {
    "content": "this == &map",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@140:6::140:18",
      "src/navigation/costmap_2d/src/costmap_2d.cpp@105:6::105:18"
    ],
    "kind": "guard"
  },
  {
    "content": "!map.worldToMap(win_origin_x, win_origin_y, lower_left_x, lower_left_y)\n      || !map.worldToMap(win_origin_x + win_size_x, win_origin_y + win_size_y, upper_right_x, upper_right_y)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@116:6::117:108"
    ],
    "kind": "guard"
  },
  {
    "content": "always_send_full_costmap_ || grid_.info.resolution != resolution ||\n      grid_.info.width != costmap_->getSizeInCellsX() ||\n      grid_.info.height != costmap_->getSizeInCellsY() ||\n      saved_origin_x_ != costmap_->getOriginX() ||\n      saved_origin_y_ != costmap_->getOriginY()",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_publisher.cpp@130:6::134:47"
    ],
    "kind": "guard"
  },
  {
    "content": "costmap_pub_.getNumSubscribers() == 0",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_publisher.cpp@122:6::122:43"
    ],
    "kind": "guard"
  },
  {
    "content": "cost_translation_table_ == NULL",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_publisher.cpp@56:6::56:37"
    ],
    "kind": "guard"
  },
  {
    "content": "!getRobotPose(global_pose)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@551:6::551:32"
    ],
    "kind": "guard"
  },
  {
    "content": "current_time.toSec() - global_pose.stamp_.toSec() > transform_tolerance_",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@537:6::537:78"
    ],
    "kind": "guard"
  },
  {
    "content": "stopped_",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@446:6::446:14"
    ],
    "kind": "guard"
  },
  {
    "content": "getRobotPose (pose)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@423:8::423:27"
    ],
    "kind": "guard"
  },
  {
    "content": "!stop_updates_",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@419:6::419:20"
    ],
    "kind": "guard"
  },
  {
    "content": "last_publish_ + publish_cycle < now",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@403:10::403:45"
    ],
    "kind": "guard"
  },
  {
    "content": "r.cycleTime() > ros::Duration(1 / frequency)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@411:8::411:52"
    ],
    "kind": "guard"
  },
  {
    "content": "publish_cycle.toSec() > 0 && layered_costmap_->isInitialized()",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@396:8::396:70"
    ],
    "kind": "guard"
  },
  {
    "content": "frequency == 0.0",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@378:6::378:22"
    ],
    "kind": "guard"
  },
  {
    "content": "fabs((old_pose_.getOrigin() - new_pose.getOrigin()).length()) < 1e-3\n      && fabs(old_pose_.getRotation().angle(new_pose.getRotation())) < 1e-3",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@362:11::363:75"
    ],
    "kind": "guard"
  },
  {
    "content": "!getRobotPose(new_pose)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@356:6::356:29"
    ],
    "kind": "guard"
  },
  {
    "content": "makeFootprintFromString(new_config.footprint, new_footprint)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@324:8::324:68"
    ],
    "kind": "guard"
  },
  {
    "content": "new_config.footprint == old_config.footprint &&\n      new_config.robot_radius == old_config.robot_radius",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@315:6::316:56"
    ],
    "kind": "guard"
  },
  {
    "content": "footprint_padding_ != config.footprint_padding",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@295:6::295:52"
    ],
    "kind": "guard"
  },
  {
    "content": "!layered_costmap_->isSizeLocked()",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@287:6::287:39"
    ],
    "kind": "guard"
  },
  {
    "content": "map_publish_frequency > 0",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@277:6::277:31"
    ],
    "kind": "guard"
  },
  {
    "content": "map_update_thread_ != NULL",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@267:6::267:32",
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@179:6::179:32"
    ],
    "kind": "guard"
  },
  {
    "content": "nh.getParam(\"map_type\", s) && s == \"voxel\"",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@217:6::217:48"
    ],
    "kind": "guard"
  },
  {
    "content": "nh.getParam(\"static_map\", flag) && flag",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@202:6::202:45"
    ],
    "kind": "guard"
  },
  {
    "content": "publisher_ != NULL",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@184:6::184:24"
    ],
    "kind": "guard"
  },
  {
    "content": "last_error + ros::Duration(5.0) < ros::Time::now()",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@90:8::90:58"
    ],
    "kind": "guard"
  },
  {
    "content": "!private_nh.searchParam(\"published_footprint_topic\", topic_param)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@140:6::140:71"
    ],
    "kind": "guard"
  },
  {
    "content": "!private_nh.searchParam(\"footprint_topic\", topic_param)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@132:6::132:61"
    ],
    "kind": "guard"
  },
  {
    "content": "private_nh.hasParam(\"plugins\")",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@114:6::114:36"
    ],
    "kind": "guard"
  },
  {
    "content": "!private_nh.hasParam(\"plugins\")",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@109:6::109:37"
    ],
    "kind": "guard"
  },
  {
    "content": "should_delete",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@59:6::59:19"
    ],
    "kind": "guard"
  },
  {
    "content": "!old_h.hasParam(name)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@53:6::53:27"
    ],
    "kind": "guard"
  },
  {
    "content": "sum >= costmap_2d::INSCRIBED_INFLATED_OBSTACLE",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_layer.cpp@133:12::133:58"
    ],
    "kind": "guard"
  },
  {
    "content": "old_cost == NO_INFORMATION",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_layer.cpp@128:10::128:36"
    ],
    "kind": "guard"
  },
  {
    "content": "costmap_[it] == NO_INFORMATION",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_layer.cpp@122:10::122:40",
      "src/navigation/costmap_2d/src/costmap_layer.cpp@59:10::59:40"
    ],
    "kind": "guard"
  },
  {
    "content": "costmap_[it] != NO_INFORMATION",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_layer.cpp@103:10::103:40"
    ],
    "kind": "guard"
  },
  {
    "content": "old_cost == NO_INFORMATION || old_cost < costmap_[it]",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_layer.cpp@65:10::65:63"
    ],
    "kind": "guard"
  },
  {
    "content": "!has_extra_bounds_",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_layer.cpp@32:8::32:26"
    ],
    "kind": "guard"
  },
  {
    "content": "intersects(polygon2, polygon1[i].x, polygon1[i].y)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_math.cpp@81:8::81:58"
    ],
    "kind": "guard"
  },
  {
    "content": "((yi > testy) != (yj > testy)) && (testx < (xj - xi) * (testy - yi) / (yj - yi) + xi)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_math.cpp@72:8::72:93"
    ],
    "kind": "guard"
  },
  {
    "content": "param > 1",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_math.cpp@50:11::50:20"
    ],
    "kind": "guard"
  },
  {
    "content": "param < 0",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_math.cpp@45:6::45:15"
    ],
    "kind": "guard"
  },
  {
    "content": "point.getType() != XmlRpc::XmlRpcValue::TypeArray ||\n        point.size() != 2",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@303:8::304:25"
    ],
    "kind": "guard"
  },
  {
    "content": "footprint_xmlrpc.getType() != XmlRpc::XmlRpcValue::TypeArray ||\n      footprint_xmlrpc.size() < 3",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@287:6::288:33"
    ],
    "kind": "guard"
  },
  {
    "content": "value.getType() != XmlRpc::XmlRpcValue::TypeInt &&\n      value.getType() != XmlRpc::XmlRpcValue::TypeDouble",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@272:6::273:56"
    ],
    "kind": "guard"
  },
  {
    "content": "first",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@255:8::255:13"
    ],
    "kind": "guard"
  },
  {
    "content": "makeFootprintFromString(std::string(footprint_xmlrpc), points)",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@224:10::224:72"
    ],
    "kind": "guard"
  },
  {
    "content": "footprint_xmlrpc.getType() == XmlRpc::XmlRpcValue::TypeString",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@222:8::222:69"
    ],
    "kind": "guard"
  },
  {
    "content": "nh.searchParam(\"robot_radius\", full_radius_param_name)",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@235:11::235:65"
    ],
    "kind": "guard"
  },
  {
    "content": "nh.searchParam(\"footprint\", full_param_name)",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@218:6::218:50"
    ],
    "kind": "guard"
  },
  {
    "content": "vvf[ i ].size() == 2",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@191:8::191:28"
    ],
    "kind": "guard"
  },
  {
    "content": "vvf.size() < 3",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@183:6::183:20"
    ],
    "kind": "guard"
  },
  {
    "content": "error != \"\"",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@175:6::175:17"
    ],
    "kind": "guard"
  },
  {
    "content": "footprint.size() <= 2",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@46:6::46:27"
    ],
    "kind": "guard"
  },
  {
    "content": "minx_ > prev_minx || miny_ > prev_miny || maxx_ < prev_maxx || maxy_ < prev_maxy",
    "locations": [
      "src/navigation/costmap_2d/src/layered_costmap.cpp@107:8::107:88"
    ],
    "kind": "guard"
  },
  {
    "content": "xn < x0 || yn < y0",
    "locations": [
      "src/navigation/costmap_2d/src/layered_costmap.cpp@128:6::128:24"
    ],
    "kind": "guard"
  },
  {
    "content": "plugins_.size() == 0",
    "locations": [
      "src/navigation/costmap_2d/src/layered_costmap.cpp@93:6::93:26"
    ],
    "kind": "guard"
  },
  {
    "content": "track_unknown",
    "locations": [
      "src/navigation/costmap_2d/src/layered_costmap.cpp@53:6::53:19"
    ],
    "kind": "guard"
  },
  {
    "content": "!current",
    "locations": [
      "src/navigation/costmap_2d/src/observation_buffer.cpp@244:6::244:14"
    ],
    "kind": "guard"
  },
  {
    "content": "expected_update_rate_ == ros::Duration(0.0)",
    "locations": [
      "src/navigation/costmap_2d/src/observation_buffer.cpp@240:6::240:49"
    ],
    "kind": "guard"
  },
  {
    "content": "(last_updated_ - pcl_conversions::fromPCL(obs.cloud_->header).stamp) > observation_keep_time_",
    "locations": [
      "src/navigation/costmap_2d/src/observation_buffer.cpp@229:10::229:103"
    ],
    "kind": "guard"
  },
  {
    "content": "observation_keep_time_ == ros::Duration(0.0)",
    "locations": [
      "src/navigation/costmap_2d/src/observation_buffer.cpp@217:8::217:52"
    ],
    "kind": "guard"
  },
  {
    "content": "!observation_list_.empty()",
    "locations": [
      "src/navigation/costmap_2d/src/observation_buffer.cpp@213:6::213:32"
    ],
    "kind": "guard"
  },
  {
    "content": "global_frame_cloud.points[i].z <= max_obstacle_height_\n          && global_frame_cloud.points[i].z >= min_obstacle_height_",
    "locations": [
      "src/navigation/costmap_2d/src/observation_buffer.cpp@169:10::170:67"
    ],
    "kind": "guard"
  },
  {
    "content": "!tf_.waitForTransform(new_global_frame, global_frame_, transform_time, ros::Duration(tf_tolerance_),\n                            ros::Duration(0.01), &tf_error)",
    "locations": [
      "src/navigation/costmap_2d/src/observation_buffer.cpp@71:6::72:59"
    ],
    "kind": "guard"
  },
  {
    "content": "t->cost_<0",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@333:15::333:25"
    ],
    "kind": "guard"
  },
  {
    "content": "result_traj_.cost_ < 0",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@360:8::360:30"
    ],
    "kind": "guard"
  },
  {
    "content": "publish_cost_grid_pc_",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@351:8::351:29"
    ],
    "kind": "guard"
  },
  {
    "content": "publish_traj_pc_",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@321:7::321:23"
    ],
    "kind": "guard"
  },
  {
    "content": "sq_dist > forward_point_distance_ * forward_point_distance_ * cheat_factor_",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@277:8::277:83"
    ],
    "kind": "guard"
  },
  {
    "content": "cost >= 0",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@230:7::230:16",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@522:7::522:16"
    ],
    "kind": "guard"
  },
  {
    "content": "path_cost == path_costs_.obstacleCosts() ||\n        path_cost == path_costs_.unreachableCellCosts() ||\n        occ_cost >= costmap_2d::INSCRIBED_INFLATED_OBSTACLE",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@190:8::192:59"
    ],
    "kind": "guard"
  },
  {
    "content": "controller_frequency > 0",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@138:9::138:33",
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@156:11::156:35"
    ],
    "kind": "guard"
  },
  {
    "content": "!private_nh.searchParam(\"controller_frequency\", controller_frequency_param_name)",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@150:9::150:89",
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@133:7::133:87"
    ],
    "kind": "guard"
  },
  {
    "content": "vth_samp <= 0",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@103:8::103:21"
    ],
    "kind": "guard"
  },
  {
    "content": "vy_samp <= 0",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@97:8::97:20"
    ],
    "kind": "guard"
  },
  {
    "content": "vx_samp <= 0",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@91:8::91:20"
    ],
    "kind": "guard"
  },
  {
    "content": "isOk",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@291:10::291:14"
    ],
    "kind": "guard"
  },
  {
    "content": "latchedStopRotateController_.isPositionReached(&planner_util_, current_pose_)",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@274:8::274:85"
    ],
    "kind": "guard"
  },
  {
    "content": "transformed_plan.empty()",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@265:7::265:31",
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@415:7::415:31"
    ],
    "kind": "guard"
  },
  {
    "content": "! planner_util_.getLocalPlan(current_pose_, transformed_plan)",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@259:8::259:70"
    ],
    "kind": "guard"
  },
  {
    "content": "! costmap_ros_->getRobotPose(current_pose_)",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@254:8::254:52",
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@148:8::148:52"
    ],
    "kind": "guard"
  },
  {
    "content": "path.cost_ < 0",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@216:7::216:21",
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@502:8::502:22"
    ],
    "kind": "guard"
  },
  {
    "content": "! isInitialized()",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@363:8::363:25",
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@380:8::380:25",
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@88:8::88:25",
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@598:8::598:25",
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@144:8::144:25",
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@179:7::179:24",
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@98:8::98:25",
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@132:8::132:25"
    ],
    "kind": "guard"
  },
  {
    "content": "latchedStopRotateController_.isGoalReached(&planner_util_, odom_helper_, current_pose_)",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@153:7::153:94"
    ],
    "kind": "guard"
  },
  {
    "content": "private_nh.getParam( \"odom_topic\", odom_topic_ )",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@115:9::115:58"
    ],
    "kind": "guard"
  },
  {
    "content": "setup_ && config.restore_defaults",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@61:10::61:43",
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@55:10::55:43"
    ],
    "kind": "guard"
  },
  {
    "content": "mode==TRINARY || alpha < 1.0",
    "locations": [
      "src/navigation/map_server/src/image_loader.cpp@148:14::148:42"
    ],
    "kind": "guard"
  },
  {
    "content": "occ < free_th",
    "locations": [
      "src/navigation/map_server/src/image_loader.cpp@146:14::146:27"
    ],
    "kind": "guard"
  },
  {
    "content": "occ > occ_th",
    "locations": [
      "src/navigation/map_server/src/image_loader.cpp@144:9::144:21"
    ],
    "kind": "guard"
  },
  {
    "content": "mode==RAW",
    "locations": [
      "src/navigation/map_server/src/image_loader.cpp@130:9::130:18"
    ],
    "kind": "guard"
  },
  {
    "content": "negate",
    "locations": [
      "src/navigation/map_server/src/image_loader.cpp@127:9::127:15"
    ],
    "kind": "guard"
  },
  {
    "content": "n_channels == 1",
    "locations": [
      "src/navigation/map_server/src/image_loader.cpp@122:10::122:25"
    ],
    "kind": "guard"
  },
  {
    "content": "mode==TRINARY || !img->format->Amask",
    "locations": [
      "src/navigation/map_server/src/image_loader.cpp@104:6::104:42"
    ],
    "kind": "guard"
  },
  {
    "content": "!(img = IMG_Load(fname))",
    "locations": [
      "src/navigation/map_server/src/image_loader.cpp@74:5::74:29"
    ],
    "kind": "guard"
  },
  {
    "content": "argc != 3 && argc != 2",
    "locations": [
      "src/navigation/map_server/src/main.cpp@227:5::227:27"
    ],
    "kind": "guard"
  },
  {
    "content": "mapfname.size() == 0",
    "locations": [
      "src/navigation/map_server/src/main.cpp@143:13::143:33"
    ],
    "kind": "guard"
  },
  {
    "content": "modeS==\"raw\"",
    "locations": [
      "src/navigation/map_server/src/main.cpp@122:18::122:30"
    ],
    "kind": "guard"
  },
  {
    "content": "modeS==\"scale\"",
    "locations": [
      "src/navigation/map_server/src/main.cpp@120:18::120:32"
    ],
    "kind": "guard"
  },
  {
    "content": "modeS==\"trinary\"",
    "locations": [
      "src/navigation/map_server/src/main.cpp@118:13::118:29"
    ],
    "kind": "guard"
  },
  {
    "content": "fin.fail()",
    "locations": [
      "src/navigation/map_server/src/main.cpp@78:12::78:22"
    ],
    "kind": "guard"
  },
  {
    "content": "!deprecated",
    "locations": [
      "src/navigation/map_server/src/main.cpp@74:10::74:21"
    ],
    "kind": "guard"
  },
  {
    "content": "shutdown_costmaps_",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@714:7::714:25",
      "src/navigation/move_base/src/move_base.cpp@179:7::179:25",
      "src/navigation/move_base/src/move_base.cpp@1188:7::1188:25"
    ],
    "kind": "guard"
  },
  {
    "content": "clearing_rotation_allowed_",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1165:9::1165:35",
      "src/navigation/move_base/src/move_base.cpp@1154:9::1154:35"
    ],
    "kind": "guard"
  },
  {
    "content": "behavior_list[i][\"type\"] == recovery_loader_.getName(classes[i])",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1095:19::1095:83"
    ],
    "kind": "guard"
  },
  {
    "content": "behavior.get() == NULL",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1108:15::1108:37"
    ],
    "kind": "guard"
  },
  {
    "content": "!recovery_loader_.isClassAvailable(behavior_list[i][\"type\"])",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1092:15::1092:75"
    ],
    "kind": "guard"
  },
  {
    "content": "name_i == name_j",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1067:23::1067:39"
    ],
    "kind": "guard"
  },
  {
    "content": "behavior_list[j].hasMember(\"name\") && behavior_list[j].hasMember(\"type\")",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1064:21::1064:93"
    ],
    "kind": "guard"
  },
  {
    "content": "behavior_list[j].getType() == XmlRpc::XmlRpcValue::TypeStruct",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1063:19::1063:80"
    ],
    "kind": "guard"
  },
  {
    "content": "behavior_list[i].hasMember(\"name\") && behavior_list[i].hasMember(\"type\")",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1060:15::1060:87"
    ],
    "kind": "guard"
  },
  {
    "content": "behavior_list[i].getType() == XmlRpc::XmlRpcValue::TypeStruct",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1059:13::1059:74"
    ],
    "kind": "guard"
  },
  {
    "content": "behavior_list.getType() == XmlRpc::XmlRpcValue::TypeArray",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1057:9::1057:66"
    ],
    "kind": "guard"
  },
  {
    "content": "node.getParam(\"recovery_behaviors\", behavior_list)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1056:7::1056:57"
    ],
    "kind": "guard"
  },
  {
    "content": "recovery_trigger_ == OSCILLATION_R",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@868:9::868:43",
      "src/navigation/move_base/src/move_base.cpp@1031:18::1031:52"
    ],
    "kind": "guard"
  },
  {
    "content": "recovery_trigger_ == PLANNING_R",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1027:18::1027:49",
      "src/navigation/move_base/src/move_base.cpp@910:9::910:40"
    ],
    "kind": "guard"
  },
  {
    "content": "recovery_trigger_ == CONTROLLING_R",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@962:13::962:47",
      "src/navigation/move_base/src/move_base.cpp@1023:13::1023:47"
    ],
    "kind": "guard"
  },
  {
    "content": "ros::Time::now() > attempt_end",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@970:13::970:43"
    ],
    "kind": "guard"
  },
  {
    "content": "tc_->computeVelocityCommands(cmd_vel)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@956:11::956:48"
    ],
    "kind": "guard"
  },
  {
    "content": "recovery_behavior_enabled_ && recovery_index_ < recovery_behaviors_.size()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@998:11::998:85"
    ],
    "kind": "guard"
  },
  {
    "content": "oscillation_timeout_ > 0.0 &&\n            last_oscillation_reset_ + ros::Duration(oscillation_timeout_) < ros::Time::now()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@945:11::946:92"
    ],
    "kind": "guard"
  },
  {
    "content": "tc_->isGoalReached()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@931:11::931:31"
    ],
    "kind": "guard"
  },
  {
    "content": "!tc_->setPlan(*controller_plan_)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@895:9::895:41"
    ],
    "kind": "guard"
  },
  {
    "content": "new_global_plan_",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@880:7::880:23"
    ],
    "kind": "guard"
  },
  {
    "content": "!controller_costmap_ros_->isCurrent()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@873:7::873:44"
    ],
    "kind": "guard"
  },
  {
    "content": "distance(current_position, oscillation_pose_) >= oscillation_distance_",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@862:7::862:77"
    ],
    "kind": "guard"
  },
  {
    "content": "!isQuaternionValid(new_goal.target_pose.pose.orientation)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@741:13::741:70"
    ],
    "kind": "guard"
  },
  {
    "content": "as_->isNewGoalAvailable()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@737:11::737:36"
    ],
    "kind": "guard"
  },
  {
    "content": "r.cycleTime() > ros::Duration(1 / controller_frequency_) && state_ == CONTROLLING",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@825:9::825:90"
    ],
    "kind": "guard"
  },
  {
    "content": "done",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@815:9::815:13"
    ],
    "kind": "guard"
  },
  {
    "content": "goal.header.frame_id != planner_costmap_ros_->getGlobalFrameID()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@783:9::783:73"
    ],
    "kind": "guard"
  },
  {
    "content": "as_->isPreemptRequested()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@736:9::736:34"
    ],
    "kind": "guard"
  },
  {
    "content": "c_freq_change_",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@729:9::729:23"
    ],
    "kind": "guard"
  },
  {
    "content": "!isQuaternionValid(move_base_goal->target_pose.pose.orientation)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@696:7::696:71"
    ],
    "kind": "guard"
  },
  {
    "content": "sleep_time > ros::Duration(0.0)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@686:12::686:43"
    ],
    "kind": "guard"
  },
  {
    "content": "runPlanner_ &&\n           (ros::Time::now() > attempt_end || planning_retries_ > uint32_t(max_planning_retries_))",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@668:11::669:98"
    ],
    "kind": "guard"
  },
  {
    "content": "planner_frequency_ <= 0",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@654:11::654:34"
    ],
    "kind": "guard"
  },
  {
    "content": "runPlanner_",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@652:11::652:22"
    ],
    "kind": "guard"
  },
  {
    "content": "planner_frequency_ > 0",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@684:9::684:31"
    ],
    "kind": "guard"
  },
  {
    "content": "state_==PLANNING",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@659:14::659:30"
    ],
    "kind": "guard"
  },
  {
    "content": "gotPlan",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@637:9::637:16"
    ],
    "kind": "guard"
  },
  {
    "content": "fabs(dot - 1) > 1e-3",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@575:7::575:27"
    ],
    "kind": "guard"
  },
  {
    "content": "!std::isfinite(q.x) || !std::isfinite(q.y) || !std::isfinite(q.z) || !std::isfinite(q.w)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@555:7::555:95"
    ],
    "kind": "guard"
  },
  {
    "content": "!planner_->makePlan(start, goal, plan) || plan.empty()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@537:7::537:61"
    ],
    "kind": "guard"
  },
  {
    "content": "!planner_costmap_ros_->getRobotPose(global_pose)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@528:7::528:55",
      "src/navigation/move_base/src/move_base.cpp@410:11::410:59"
    ],
    "kind": "guard"
  },
  {
    "content": "planner_costmap_ros_ == NULL",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@521:7::521:35",
      "src/navigation/move_base/src/move_base.cpp@400:7::400:35"
    ],
    "kind": "guard"
  },
  {
    "content": "controller_costmap_ros_ != NULL",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@498:7::498:38"
    ],
    "kind": "guard"
  },
  {
    "content": "planner_costmap_ros_ != NULL",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@495:7::495:35"
    ],
    "kind": "guard"
  },
  {
    "content": "as_ != NULL",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@492:7::492:18"
    ],
    "kind": "guard"
  },
  {
    "content": "planner_->makePlan(start, p, global_plan)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@456:19::456:60"
    ],
    "kind": "guard"
  },
  {
    "content": "x_offset < 1e-9 && x_mult < -1.0 + 1e-9",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@451:19::451:58"
    ],
    "kind": "guard"
  },
  {
    "content": "y_offset < 1e-9 && y_mult < -1.0 + 1e-9",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@448:17::448:56"
    ],
    "kind": "guard"
  },
  {
    "content": "x_offset < max_offset-1e-9 && y_offset < max_offset-1e-9",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@442:15::442:71"
    ],
    "kind": "guard"
  },
  {
    "content": "req.tolerance > 0.0 && req.tolerance < search_increment",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@436:9::436:64"
    ],
    "kind": "guard"
  },
  {
    "content": "!planner_->makePlan(start, req.goal, global_plan) || global_plan.empty()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@426:7::426:79"
    ],
    "kind": "guard"
  },
  {
    "content": "req.start.header.frame_id.empty()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@407:7::407:40"
    ],
    "kind": "guard"
  },
  {
    "content": "as_->isActive()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@395:7::395:22"
    ],
    "kind": "guard"
  },
  {
    "content": "config.base_local_planner == blp_loader_.getName(classes[i])",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@295:15::295:75"
    ],
    "kind": "guard"
  },
  {
    "content": "!blp_loader_.isClassAvailable(config.base_local_planner)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@292:11::292:67"
    ],
    "kind": "guard"
  },
  {
    "content": "config.base_global_planner == bgp_loader_.getName(classes[i])",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@255:15::255:76"
    ],
    "kind": "guard"
  },
  {
    "content": "!bgp_loader_.isClassAvailable(config.base_global_planner)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@252:11::252:68"
    ],
    "kind": "guard"
  },
  {
    "content": "config.base_global_planner != last_config_.base_global_planner",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@246:7::246:69"
    ],
    "kind": "guard"
  },
  {
    "content": "controller_frequency_ != config.controller_frequency",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@229:7::229:59"
    ],
    "kind": "guard"
  },
  {
    "content": "planner_frequency_ != config.planner_frequency",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@223:7::223:53"
    ],
    "kind": "guard"
  },
  {
    "content": "local_planner == blp_loader_.getName(classes[i])",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@149:13::149:61"
    ],
    "kind": "guard"
  },
  {
    "content": "!blp_loader_.isClassAvailable(local_planner)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@146:9::146:53"
    ],
    "kind": "guard"
  },
  {
    "content": "global_planner == bgp_loader_.getName(classes[i])",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@121:13::121:62"
    ],
    "kind": "guard"
  },
  {
    "content": "!bgp_loader_.isClassAvailable(global_planner)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@118:9::118:54"
    ],
    "kind": "guard"
  },
  {
    "content": "!loadRecoveryBehaviors(private_nh)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@186:7::186:41"
    ],
    "kind": "guard"
  },
  {
    "content": "!costarr",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@1081:10::1081:18"
    ],
    "kind": "guard"
  },
  {
    "content": "potarr[n+nx] < POT_HIGH",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@1029:12::1029:35",
      "src/navigation/navfn/src/navfn.cpp@1014:17::1014:40"
    ],
    "kind": "guard"
  },
  {
    "content": "potarr[n-nx] < POT_HIGH",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@1027:12::1027:35",
      "src/navigation/navfn/src/navfn.cpp@1012:12::1012:35"
    ],
    "kind": "guard"
  },
  {
    "content": "potarr[n+1] < POT_HIGH",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@1009:17::1009:39",
      "src/navigation/navfn/src/navfn.cpp@1023:12::1023:34"
    ],
    "kind": "guard"
  },
  {
    "content": "potarr[n-1] < POT_HIGH",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@1007:12::1007:34",
      "src/navigation/navfn/src/navfn.cpp@1021:12::1021:34"
    ],
    "kind": "guard"
  },
  {
    "content": "norm > 0",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@1035:10::1035:18"
    ],
    "kind": "guard"
  },
  {
    "content": "cv >= POT_HIGH",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@1005:10::1005:24"
    ],
    "kind": "guard"
  },
  {
    "content": "n < nx || n > ns-nx",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@997:10::997:29"
    ],
    "kind": "guard"
  },
  {
    "content": "gradx[n]+grady[n] > 0.0",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@994:10::994:33"
    ],
    "kind": "guard"
  },
  {
    "content": "dy > 1.0",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@969:14::969:22"
    ],
    "kind": "guard"
  },
  {
    "content": "dx > 1.0",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@967:14::967:22"
    ],
    "kind": "guard"
  },
  {
    "content": "x == 0.0 && y == 0.0",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@955:14::955:34"
    ],
    "kind": "guard"
  },
  {
    "content": "potarr[stc] >= POT_HIGH",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@921:14::921:37"
    ],
    "kind": "guard"
  },
  {
    "content": "potarr[st] < minp",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@901:14::901:31",
      "src/navigation/navfn/src/navfn.cpp@911:14::911:31",
      "src/navigation/navfn/src/navfn.cpp@903:14::903:31",
      "src/navigation/navfn/src/navfn.cpp@899:14::899:31",
      "src/navigation/navfn/src/navfn.cpp@909:14::909:31",
      "src/navigation/navfn/src/navfn.cpp@905:14::905:31",
      "src/navigation/navfn/src/navfn.cpp@913:14::913:31",
      "src/navigation/navfn/src/navfn.cpp@907:14::907:31"
    ],
    "kind": "guard"
  },
  {
    "content": "potarr[stc] >= POT_HIGH ||\n            potarr[stc+1] >= POT_HIGH ||\n            potarr[stc-1] >= POT_HIGH ||\n            potarr[stcnx] >= POT_HIGH ||\n            potarr[stcnx+1] >= POT_HIGH ||\n            potarr[stcnx-1] >= POT_HIGH ||\n            potarr[stcpx] >= POT_HIGH ||\n            potarr[stcpx+1] >= POT_HIGH ||\n            potarr[stcpx-1] >= POT_HIGH ||\n            oscillation_detected",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@883:12::892:32"
    ],
    "kind": "guard"
  },
  {
    "content": "npath > 2 &&\n            pathx[npath-1] == pathx[npath-3] &&\n            pathy[npath-1] == pathy[npath-3]",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@871:11::873:45"
    ],
    "kind": "guard"
  },
  {
    "content": "stc < nx || stc > ns-nx",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@859:12::859:35"
    ],
    "kind": "guard"
  },
  {
    "content": "potarr[nearest_point] < COST_NEUTRAL",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@852:12::852:48"
    ],
    "kind": "guard"
  },
  {
    "content": "pathy",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@157:7::157:12",
      "src/navigation/navfn/src/navfn.cpp@831:12::831:17"
    ],
    "kind": "guard"
  },
  {
    "content": "pathx",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@155:7::155:12",
      "src/navigation/navfn/src/navfn.cpp@830:12::830:17"
    ],
    "kind": "guard"
  },
  {
    "content": "st == NULL",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@839:10::839:20"
    ],
    "kind": "guard"
  },
  {
    "content": "npathbuf < n",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@828:10::828:22"
    ],
    "kind": "guard"
  },
  {
    "content": "potarr[startCell] < POT_HIGH",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@788:12::788:40",
      "src/navigation/navfn/src/navfn.cpp@707:14::707:42",
      "src/navigation/navfn/src/navfn.cpp@799:10::799:38"
    ],
    "kind": "guard"
  },
  {
    "content": "curPe == 0",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@777:12::777:22",
      "src/navigation/navfn/src/navfn.cpp@695:12::695:22"
    ],
    "kind": "guard"
  },
  {
    "content": "displayInt > 0 &&  (cycle % displayInt) == 0",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@766:12::766:56",
      "src/navigation/navfn/src/navfn.cpp@684:12::684:56"
    ],
    "kind": "guard"
  },
  {
    "content": "curPe > nwv",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@669:12::669:23",
      "src/navigation/navfn/src/navfn.cpp@751:12::751:23"
    ],
    "kind": "guard"
  },
  {
    "content": "curPe == 0 && nextPe == 0",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@746:12::746:37",
      "src/navigation/navfn/src/navfn.cpp@664:12::664:37"
    ],
    "kind": "guard"
  },
  {
    "content": "atStart",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@706:12::706:19"
    ],
    "kind": "guard"
  },
  {
    "content": "cycle < cycles",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@714:10::714:24"
    ],
    "kind": "guard"
  },
  {
    "content": "d > pot+de",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@626:16::626:26",
      "src/navigation/navfn/src/navfn.cpp@633:16::633:26",
      "src/navigation/navfn/src/navfn.cpp@534:16::534:26",
      "src/navigation/navfn/src/navfn.cpp@541:16::541:26"
    ],
    "kind": "guard"
  },
  {
    "content": "u > pot+ue",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@625:16::625:26",
      "src/navigation/navfn/src/navfn.cpp@540:16::540:26",
      "src/navigation/navfn/src/navfn.cpp@632:16::632:26",
      "src/navigation/navfn/src/navfn.cpp@533:16::533:26"
    ],
    "kind": "guard"
  },
  {
    "content": "r > pot+re",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@539:16::539:26",
      "src/navigation/navfn/src/navfn.cpp@532:16::532:26",
      "src/navigation/navfn/src/navfn.cpp@631:16::631:26",
      "src/navigation/navfn/src/navfn.cpp@624:16::624:26"
    ],
    "kind": "guard"
  },
  {
    "content": "l > pot+le",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@538:16::538:26",
      "src/navigation/navfn/src/navfn.cpp@630:16::630:26",
      "src/navigation/navfn/src/navfn.cpp@531:16::531:26",
      "src/navigation/navfn/src/navfn.cpp@623:16::623:26"
    ],
    "kind": "guard"
  },
  {
    "content": "pot < curT",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@621:14::621:24",
      "src/navigation/navfn/src/navfn.cpp@529:14::529:24"
    ],
    "kind": "guard"
  },
  {
    "content": "pot < potarr[n]",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@607:12::607:27",
      "src/navigation/navfn/src/navfn.cpp@522:12::522:27"
    ],
    "kind": "guard"
  },
  {
    "content": "dc >= hf",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@507:12::507:20",
      "src/navigation/navfn/src/navfn.cpp@592:12::592:20"
    ],
    "kind": "guard"
  },
  {
    "content": "dc < 0",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@499:12::499:18",
      "src/navigation/navfn/src/navfn.cpp@584:12::584:18"
    ],
    "kind": "guard"
  },
  {
    "content": "costarr[n] < COST_OBS",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@495:10::495:31",
      "src/navigation/navfn/src/navfn.cpp@580:10::580:31"
    ],
    "kind": "guard"
  },
  {
    "content": "u<d",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@577:10::577:13",
      "src/navigation/navfn/src/navfn.cpp@492:10::492:13"
    ],
    "kind": "guard"
  },
  {
    "content": "l<r",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@491:10::491:13",
      "src/navigation/navfn/src/navfn.cpp@576:10::576:13"
    ],
    "kind": "guard"
  },
  {
    "content": "*pc >= COST_OBS",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@446:12::446:27"
    ],
    "kind": "guard"
  },
  {
    "content": "!keepit",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@408:12::408:19"
    ],
    "kind": "guard"
  },
  {
    "content": "n>=0 && n<ns && !pending[n] && \\\n    costarr[n]<COST_OBS && overPe<PRIORITYBUFSIZE",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@394:27::395:49"
    ],
    "kind": "guard"
  },
  {
    "content": "n>=0 && n<ns && !pending[n] && \\\n    costarr[n]<COST_OBS && nextPe<PRIORITYBUFSIZE",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@391:27::392:49"
    ],
    "kind": "guard"
  },
  {
    "content": "n>=0 && n<ns && !pending[n] && \\\n    costarr[n]<COST_OBS && curPe<PRIORITYBUFSIZE",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@388:27::389:48"
    ],
    "kind": "guard"
  },
  {
    "content": "len > 0",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@335:10::335:17",
      "src/navigation/navfn/src/navfn.cpp@86:10::86:17",
      "src/navigation/navfn/src/navfn.cpp@306:10::306:17",
      "src/navigation/navfn/src/navfn.cpp@91:10::91:17"
    ],
    "kind": "guard"
  },
  {
    "content": "v >= COST_OBS",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@247:18::247:31",
      "src/navigation/navfn/src/navfn.cpp@274:18::274:31"
    ],
    "kind": "guard"
  },
  {
    "content": "v == COST_UNKNOWN_ROS",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@278:20::278:41"
    ],
    "kind": "guard"
  },
  {
    "content": "i<7 || i > ny-8 || j<7 || j > nx-8",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@268:16::268:50"
    ],
    "kind": "guard"
  },
  {
    "content": "v == COST_UNKNOWN_ROS && allow_unknown",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@251:20::251:58"
    ],
    "kind": "guard"
  },
  {
    "content": "v < COST_OBS_ROS",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@244:16::244:32"
    ],
    "kind": "guard"
  },
  {
    "content": "isROS",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@231:10::231:15"
    ],
    "kind": "guard"
  },
  {
    "content": "grady",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@210:9::210:14",
      "src/navigation/navfn/src/navfn.cpp@153:7::153:12"
    ],
    "kind": "guard"
  },
  {
    "content": "gradx",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@208:9::208:14",
      "src/navigation/navfn/src/navfn.cpp@151:7::151:12"
    ],
    "kind": "guard"
  },
  {
    "content": "pending",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@205:9::205:16",
      "src/navigation/navfn/src/navfn.cpp@149:7::149:14"
    ],
    "kind": "guard"
  },
  {
    "content": "potarr",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@147:7::147:13",
      "src/navigation/navfn/src/navfn.cpp@203:9::203:15"
    ],
    "kind": "guard"
  },
  {
    "content": "costarr",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@201:9::201:16",
      "src/navigation/navfn/src/navfn.cpp@145:7::145:14"
    ],
    "kind": "guard"
  },
  {
    "content": "pb3",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@163:7::163:10"
    ],
    "kind": "guard"
  },
  {
    "content": "pb2",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@161:7::161:10"
    ],
    "kind": "guard"
  },
  {
    "content": "pb1",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@159:7::159:10"
    ],
    "kind": "guard"
  },
  {
    "content": "nav->nx != nx || nav->ny != ny",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@67:10::67:40"
    ],
    "kind": "guard"
  },
  {
    "content": "nav == NULL",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@64:10::64:21"
    ],
    "kind": "guard"
  },
  {
    "content": "!costmap->worldToMap(wx, wy, mx, my)",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@406:7::406:43",
      "src/navigation/navfn/src/navfn_ros.cpp@229:7::229:43",
      "src/navigation/navfn/src/navfn_ros.cpp@268:7::268:43"
    ],
    "kind": "guard"
  },
  {
    "content": "tf::resolve(tf_prefix_, goal.header.frame_id) != tf::resolve(tf_prefix_, global_frame)",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@213:7::213:93",
      "src/navigation/navfn/src/navfn_ros.cpp@395:7::395:93"
    ],
    "kind": "guard"
  },
  {
    "content": "!path.empty()",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@368:7::368:20"
    ],
    "kind": "guard"
  },
  {
    "content": "pp[i] < 10e7",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@339:12::339:24"
    ],
    "kind": "guard"
  },
  {
    "content": "getPlanFromPotential(best_pose, plan)",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@313:9::313:46"
    ],
    "kind": "guard"
  },
  {
    "content": "potential < POT_HIGH && sdist < best_sdist",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@301:11::301:53"
    ],
    "kind": "guard"
  },
  {
    "content": "tolerance <= 0.0",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@269:9::269:25"
    ],
    "kind": "guard"
  },
  {
    "content": "visualize_potential_",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@72:9::72:29",
      "src/navigation/navfn/src/navfn_ros.cpp@324:8::324:28"
    ],
    "kind": "guard"
  },
  {
    "content": "found_legal",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@311:7::311:18"
    ],
    "kind": "guard"
  },
  {
    "content": "!costmap->worldToMap(world_point.x, world_point.y, mx, my)",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@150:7::150:65"
    ],
    "kind": "guard"
  },
  {
    "content": "!costmap_ros_->getCostmap()->worldToMap(world_point.x, world_point.y, mx, my)",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@130:7::130:84"
    ],
    "kind": "guard"
  },
  {
    "content": "potential < POT_HIGH",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@112:11::112:31"
    ],
    "kind": "guard"
  },
  {
    "content": "!bitsBelowThreshold(unknown_bits, unknown_threshold)",
    "locations": [
      "src/navigation/voxel_grid/src/voxel_grid.cpp@182:7::182:59"
    ],
    "kind": "guard"
  },
  {
    "content": "!bitsBelowThreshold(marked_bits, marked_threshold)",
    "locations": [
      "src/navigation/voxel_grid/src/voxel_grid.cpp@177:7::177:57"
    ],
    "kind": "guard"
  },
  {
    "content": "x >= size_x_ || y >= size_y_",
    "locations": [
      "src/navigation/voxel_grid/src/voxel_grid.cpp@166:7::166:35"
    ],
    "kind": "guard"
  },
  {
    "content": "bits < 1",
    "locations": [
      "src/navigation/voxel_grid/src/voxel_grid.cpp@155:9::155:17"
    ],
    "kind": "guard"
  },
  {
    "content": "bits < 2",
    "locations": [
      "src/navigation/voxel_grid/src/voxel_grid.cpp@154:7::154:15"
    ],
    "kind": "guard"
  },
  {
    "content": "x >= size_x_ || y >= size_y_ || z >= size_z_",
    "locations": [
      "src/navigation/voxel_grid/src/voxel_grid.cpp@145:7::145:51"
    ],
    "kind": "guard"
  },
  {
    "content": "x0 >= size_x_ || y0 >= size_y_ || z0 >= size_z_ || x1>=size_x_ || y1>=size_y_ || z1>=size_z_",
    "locations": [
      "src/navigation/voxel_grid/src/voxel_grid.cpp@133:7::133:99",
      "src/navigation/voxel_grid/src/voxel_grid.cpp@104:7::104:99",
      "src/navigation/voxel_grid/src/voxel_grid.cpp@115:7::115:99"
    ],
    "kind": "guard"
  },
  {
    "content": "map_2d == NULL",
    "locations": [
      "src/navigation/voxel_grid/src/voxel_grid.cpp@128:7::128:21"
    ],
    "kind": "guard"
  },
  {
    "content": "size_z_ > 16",
    "locations": [
      "src/navigation/voxel_grid/src/voxel_grid.cpp@75:7::75:19",
      "src/navigation/voxel_grid/src/voxel_grid.cpp@48:7::48:19"
    ],
    "kind": "guard"
  },
  {
    "content": "size_x == size_x_ && size_y == size_y_ && size_z == size_z_",
    "locations": [
      "src/navigation/voxel_grid/src/voxel_grid.cpp@65:7::65:66"
    ],
    "kind": "guard"
  },
  {
    "content": "chain.getSegment(l).getJoint().getType()!=Joint::None",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chaindynparam.cpp@95:7::95:60"
    ],
    "kind": "guard"
  },
  {
    "content": "chain.getSegment(i).getJoint().getType()!=Joint::None",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_recursive_newton_euler.cpp@77:15::77:68",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_recursive_newton_euler.cpp@44:15::44:68",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainfksolverpos_recursive.cpp@49:19::49:72",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chaindynparam.cpp@59:13::59:66",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chaindynparam.cpp@84:6::84:59"
    ],
    "kind": "guard"
  },
  {
    "content": "i!=0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chaindynparam.cpp@77:6::77:10"
    ],
    "kind": "guard"
  },
  {
    "content": "q.rows()!=nj || H.rows()!=nj || H.columns()!=nj",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chaindynparam.cpp@49:11::49:59"
    ],
    "kind": "guard"
  },
  {
    "content": "segmentNr>chain.getNrOfSegments()",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainfksolverpos_recursive.cpp@44:16::44:49"
    ],
    "kind": "guard"
  },
  {
    "content": "q_in.rows()!=chain.getNrOfJoints()",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainfksolverpos_recursive.cpp@42:11::42:45"
    ],
    "kind": "guard"
  },
  {
    "content": "seg_nr<0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainfksolverpos_recursive.cpp@35:11::35:19"
    ],
    "kind": "guard"
  },
  {
    "content": "i==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_recursive_newton_euler.cpp@61:15::61:19",
      "src/navigation/robot_pose_ekf/src/nonlinearanalyticconditionalgaussianodo.cpp@55:8::55:12"
    ],
    "kind": "guard"
  },
  {
    "content": "q.rows()!=nj || q_dot.rows()!=nj || q_dotdot.rows()!=nj || torques.rows()!=nj || f_ext.size()!=ns",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_recursive_newton_euler.cpp@37:11::37:108"
    ],
    "kind": "guard"
  },
  {
    "content": "chain.getSegment(i - 1).getJoint().getType() != Joint::None",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@235:16::235:75",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@320:12::320:71"
    ],
    "kind": "guard"
  },
  {
    "content": "i == 1",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@288:12::288:18"
    ],
    "kind": "guard"
  },
  {
    "content": "Sm(i) < 1e-14",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@256:12::256:25"
    ],
    "kind": "guard"
  },
  {
    "content": "i != 0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@95:12::95:18",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@201:12::201:18"
    ],
    "kind": "guard"
  },
  {
    "content": "i == (int)ns",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@140:12::140:24"
    ],
    "kind": "guard"
  },
  {
    "content": "segment.getJoint().getType() != Joint::None",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@119:12::119:55",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@78:8::78:51"
    ],
    "kind": "guard"
  },
  {
    "content": "q.rows() != nj || q_dot.rows() != nj || q_dotdot.rows() != nj || torques.rows() != nj || f_ext.size() != ns",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@49:8::49:115"
    ],
    "kind": "guard"
  },
  {
    "content": "delta_pos_norm<eps",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainiksolverpos_lma.cpp@177:5::177:23",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainiksolverpos_lma.cpp@254:7::254:25"
    ],
    "kind": "guard"
  },
  {
    "content": "rho > 0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainiksolverpos_lma.cpp@250:6::250:13"
    ],
    "kind": "guard"
  },
  {
    "content": "grad.transpose()*grad < eps_joints*eps_joints",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainiksolverpos_lma.cpp@231:6::231:52"
    ],
    "kind": "guard"
  },
  {
    "content": "dnorm < eps_joints",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainiksolverpos_lma.cpp@218:6::218:24"
    ],
    "kind": "guard"
  },
  {
    "content": "display_information",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainiksolverpos_lma.cpp@206:6::206:25"
    ],
    "kind": "guard"
  },
  {
    "content": "segment.getJoint().getType()!=Joint::None",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainiksolverpos_lma.cpp@136:6::136:47",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainiksolverpos_lma.cpp@120:6::120:47"
    ],
    "kind": "guard"
  },
  {
    "content": "x*y*data[1] < 0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@368:6::368:22"
    ],
    "kind": "guard"
  },
  {
    "content": "data[7] < 0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@367:6::367:18"
    ],
    "kind": "guard"
  },
  {
    "content": "data[2] < 0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@366:6::366:18"
    ],
    "kind": "guard"
  },
  {
    "content": "ca < -1+t",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@360:5::360:14"
    ],
    "kind": "guard"
  },
  {
    "content": "ca>1-t",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@355:5::355:11"
    ],
    "kind": "guard"
  },
  {
    "content": "data[8]>0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@273:16::273:25"
    ],
    "kind": "guard"
  },
  {
    "content": "fabs(data[8]) > 1-epsilon",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@271:12::271:39"
    ],
    "kind": "guard"
  },
  {
    "content": "fabs(pitch) > (M_PI/2.0-epsilon)",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@247:12::247:46"
    ],
    "kind": "guard"
  },
  {
    "content": "(*this)(0,0) > (*this)(1,1) && (*this)(0,0) > (*this)(2,2)",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@209:16::209:76"
    ],
    "kind": "guard"
  },
  {
    "content": "trace > epsilon",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@202:11::202:28"
    ],
    "kind": "guard"
  },
  {
    "content": "v < eps",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@100:12::100:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@143:12::143:19"
    ],
    "kind": "guard"
  },
  {
    "content": "tmp2 > tmp1",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@130:16::130:27"
    ],
    "kind": "guard"
  },
  {
    "content": "tmp1 == 0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@120:20::120:29"
    ],
    "kind": "guard"
  },
  {
    "content": "tmp1 >= tmp2",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@119:16::119:28",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@117:12::117:24"
    ],
    "kind": "guard"
  },
  {
    "content": "fabs(data[0]) > fabs(data[1])",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@89:12::89:42"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(storage,\"DH\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@263:8::263:31"
    ],
    "kind": "guard"
  },
  {
    "content": "strlen(storage)==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@133:8::133:26",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@255:8::255:26",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@194:8::194:26"
    ],
    "kind": "guard"
  },
  {
    "content": "i<2",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@202:16::202:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@95:12::95:15"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(storage,\"IDENTITY\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@242:8::242:37"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(storage,\"ROT\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@232:8::232:32"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(storage,\"RPY\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@225:8::225:32"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(storage,\"EULERZYZ\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@218:8::218:37"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(storage,\"EULERZYX\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@211:8::211:37"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(storage,\"ZERO\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@144:8::144:33"
    ],
    "kind": "guard"
  },
  {
    "content": "q != q_previous",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/joint.cpp@81:16::81:31"
    ],
    "kind": "guard"
  },
  {
    "content": "type != RotAxis && type != TransAxis",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/joint.cpp@64:10::64:46",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/joint.cpp@50:10::50:46"
    ],
    "kind": "guard"
  },
  {
    "content": "type == RotAxis || type == TransAxis",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/joint.cpp@40:10::40:46",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/joint.cpp@31:10::31:46"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(storage,\"CYCLIC_CLOSED\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path.cpp@152:12::152:46"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(storage,\"COMPOSITE\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path.cpp@139:12::139:42"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(storage,\"ROUNDEDCOMPOSITE\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path.cpp@116:12::116:49"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(storage,\"CIRCLE\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path.cpp@88:12::88:39"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(storage,\"LINE\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path.cpp@75:13::75:38"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(storage,\"POINT\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path.cpp@67:5::67:31"
    ],
    "kind": "guard"
  },
  {
    "content": "aggregate",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/trajectory_segment.cpp@94:8::94:17",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_line.cpp@154:8::154:18",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@190:8::190:17",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_cyclic_closed.cpp@74:8::74:17",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_line.cpp@149:8::149:17",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_circle.cpp@149:8::149:17"
    ],
    "kind": "guard"
  },
  {
    "content": "oalpha*eqradius > dist",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_circle.cpp@80:9::80:31"
    ],
    "kind": "guard"
  },
  {
    "content": "n < epsilon",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_circle.cpp@73:12::73:23"
    ],
    "kind": "guard"
  },
  {
    "content": "radius < epsilon",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_circle.cpp@68:9::68:25"
    ],
    "kind": "guard"
  },
  {
    "content": "it->second",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_composite.cpp@155:6::155:16"
    ],
    "kind": "guard"
  },
  {
    "content": "(s <= dv[i])||(i == (dv.size()-1) )",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_composite.cpp@63:6::63:41"
    ],
    "kind": "guard"
  },
  {
    "content": "(cached_starts <=s) && ( s <= cached_ends)",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_composite.cpp@58:5::58:49"
    ],
    "kind": "guard"
  },
  {
    "content": "alpha != 0 && alpha*eqradius > dist",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_line.cpp@111:6::111:42",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_line.cpp@68:6::68:42"
    ],
    "kind": "guard"
  },
  {
    "content": "nrofpoints >= 1",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@138:5::138:20"
    ],
    "kind": "guard"
  },
  {
    "content": "d >= bcdist",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@104:7::104:18"
    ],
    "kind": "guard"
  },
  {
    "content": "d >= abdist",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@101:7::101:18"
    ],
    "kind": "guard"
  },
  {
    "content": "alpha < eps",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@92:6::92:17"
    ],
    "kind": "guard"
  },
  {
    "content": "(PI - alpha) < eps",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@89:6::89:24"
    ],
    "kind": "guard"
  },
  {
    "content": "bcdist < eps",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@85:6::85:18"
    ],
    "kind": "guard"
  },
  {
    "content": "abdist < eps",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@82:6::82:18"
    ],
    "kind": "guard"
  },
  {
    "content": "nrofpoints == 1",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@73:12::73:27"
    ],
    "kind": "guard"
  },
  {
    "content": "nrofpoints == 0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@71:5::71:20"
    ],
    "kind": "guard"
  },
  {
    "content": "eqradius<=0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@64:6::64:17"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(storage,\"TWOAXIS\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/rotational_interpolation.cpp@72:12::72:40"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(storage,\"THREEAXIS\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/rotational_interpolation.cpp@65:12::65:42"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(storage,\"SINGLEAXIS\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/rotational_interpolation.cpp@59:5::59:36"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(storage,\"SEGMENT\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/trajectory.cpp@63:5::63:33"
    ],
    "kind": "guard"
  },
  {
    "content": "time < vd[i]",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/trajectory_composite.cpp@82:6::82:18",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/trajectory_composite.cpp@63:16::63:28",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/trajectory_composite.cpp@43:16::43:28"
    ],
    "kind": "guard"
  },
  {
    "content": "time < 0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/trajectory_composite.cpp@38:12::38:20",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_rect.cpp@102:8::102:16",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@155:5::155:13",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@142:5::142:13",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@140:5::140:13",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/trajectory_composite.cpp@58:12::58:20",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@153:5::153:13",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@169:5::169:13",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@167:5::167:13",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/trajectory_composite.cpp@77:12::77:20",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_rect.cpp@112:8::112:16"
    ],
    "kind": "guard"
  },
  {
    "content": "jnt.getType() == Joint::RotX || jnt.getType() == Joint::RotY || jnt.getType() == Joint::RotZ || jnt.getType() == Joint::RotAxis",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@151:16::151:143"
    ],
    "kind": "guard"
  },
  {
    "content": "s->first == root_name",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@131:16::131:37",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@126:16::126:37"
    ],
    "kind": "guard"
  },
  {
    "content": "parents_chain_tip.empty() || parents_chain_tip.back()  != root_name",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@133:12::133:79"
    ],
    "kind": "guard"
  },
  {
    "content": "parents_chain_root.empty() || parents_chain_root.back() != root_name",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@128:12::128:80"
    ],
    "kind": "guard"
  },
  {
    "content": "!(this->addTreeRecursive(child, child->first))",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@107:16::107:62"
    ],
    "kind": "guard"
  },
  {
    "content": "this->addSegment(GetTreeElementSegment(child->second), hook_name)",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@105:12::105:77"
    ],
    "kind": "guard"
  },
  {
    "content": "this->addSegment(chain.getSegment(i), parent_name)",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@86:12::86:62"
    ],
    "kind": "guard"
  },
  {
    "content": "!retval.second",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@71:8::71:22"
    ],
    "kind": "guard"
  },
  {
    "content": "parent == segments.end()",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@58:8::58:32"
    ],
    "kind": "guard"
  },
  {
    "content": "it == rootIterator",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/treefksolverpos_recursive.cpp@55:5::55:23"
    ],
    "kind": "guard"
  },
  {
    "content": "it == tree.getSegments().end()",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/treejnttojacsolver.cpp@30:8::30:38",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/treefksolverpos_recursive.cpp@40:16::40:46"
    ],
    "kind": "guard"
  },
  {
    "content": "q_in.rows() != tree.getNrOfJoints()",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/treefksolverpos_recursive.cpp@38:11::38:46"
    ],
    "kind": "guard"
  },
  {
    "content": "GetTreeElementSegment(it->second).getJoint().getType() != Joint::None",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/treejnttojacsolver.cpp@50:12::50:81"
    ],
    "kind": "guard"
  },
  {
    "content": "q_in.rows() != tree.getNrOfJoints() || jac.columns() != tree.getNrOfJoints()",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/treejnttojacsolver.cpp@23:8::23:84"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(storage,\"TRAPEZOIDALHALF\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile.cpp@79:12::79:48"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(storage,\"TRAPEZOIDAL\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile.cpp@70:12::70:44"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(storage,\"CONSTVEL\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile.cpp@64:12::64:41"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(storage,\"DIRACVEL\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile.cpp@60:5::60:34"
    ],
    "kind": "guard"
  },
  {
    "content": "0 < time && time < t",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_dirac.cpp@68:16::68:38"
    ],
    "kind": "guard"
  },
  {
    "content": "t == 0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_dirac.cpp@63:12::63:20",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_dirac.cpp@56:12::56:20"
    ],
    "kind": "guard"
  },
  {
    "content": "time>d",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_rect.cpp@114:15::114:21",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_rect.cpp@104:15::104:21"
    ],
    "kind": "guard"
  },
  {
    "content": "v > maxvel || duration==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_rect.cpp@84:16::84:42"
    ],
    "kind": "guard"
  },
  {
    "content": "diff != 0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_rect.cpp@81:8::81:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_rect.cpp@56:8::56:19"
    ],
    "kind": "guard"
  },
  {
    "content": "duration <= std::numeric_limits<double>::epsilon()",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_spline.cpp@86:6::86:57",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_spline.cpp@59:6::59:57",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_spline.cpp@112:6::112:57"
    ],
    "kind": "guard"
  },
  {
    "content": "time<=duration",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@159:12::159:26",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@173:12::173:26",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@148:12::148:26",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@161:12::161:26",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@146:12::146:26",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@175:12::175:26"
    ],
    "kind": "guard"
  },
  {
    "content": "time<t2",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@146:12::146:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@159:12::159:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@144:12::144:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@157:12::157:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@171:12::171:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@173:12::173:19"
    ],
    "kind": "guard"
  },
  {
    "content": "time<t1",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@144:12::144:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@142:12::142:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@169:12::169:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@171:12::171:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@155:12::155:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@157:12::157:19"
    ],
    "kind": "guard"
  },
  {
    "content": "KDL::epsilon > factor",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@118:5::118:26"
    ],
    "kind": "guard"
  },
  {
    "content": "1.0 < factor",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@117:5::117:17"
    ],
    "kind": "guard"
  },
  {
    "content": "factor > 1",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@98:8::98:18",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@103:8::103:20"
    ],
    "kind": "guard"
  },
  {
    "content": "deltaT > 0.0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@68:5::68:17"
    ],
    "kind": "guard"
  },
  {
    "content": "tmp > duration",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@123:6::123:20",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@111:6::111:20"
    ],
    "kind": "guard"
  },
  {
    "content": "starting",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@110:5::110:13",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@86:5::86:13"
    ],
    "kind": "guard"
  },
  {
    "content": "tokens.size() >= 2",
    "locations": [
      "src/ros/roslib/src/package.cpp@127:8::127:26"
    ],
    "kind": "guard"
  },
  {
    "content": "force_recrawl",
    "locations": [
      "src/ros/roslib/src/package.cpp@112:6::112:19"
    ],
    "kind": "guard"
  },
  {
    "content": "!it->empty()",
    "locations": [
      "src/ros/roslib/src/package.cpp@82:8::82:20"
    ],
    "kind": "guard"
  },
  {
    "content": "!rp.is_quiet()",
    "locations": [
      "src/ros/roslib/src/package.cpp@59:10::59:26",
      "src/ros/roslib/src/package.cpp@65:8::65:24"
    ],
    "kind": "guard"
  },
  {
    "content": "ret == 0",
    "locations": [
      "src/ros/roslib/src/package.cpp@56:7::56:15"
    ],
    "kind": "guard"
  },
  {
    "content": "sec_part < INT_MIN || sec_part > INT_MAX",
    "locations": [
      "src/roscpp_core/rostime/src/duration.cpp@57:8::57:48"
    ],
    "kind": "guard"
  },
  {
    "content": "nsec_part < 0",
    "locations": [
      "src/roscpp_core/rostime/src/duration.cpp@51:8::51:21",
      "src/roscpp_core/rostime/src/time.cpp@491:8::491:21"
    ],
    "kind": "guard"
  },
  {
    "content": "actual_end > expected_end + expected_cycle_time_",
    "locations": [
      "src/roscpp_core/rostime/src/rate.cpp@141:8::141:56",
      "src/roscpp_core/rostime/src/rate.cpp@82:8::82:56"
    ],
    "kind": "guard"
  },
  {
    "content": "sleep_time <= WallDuration(0.0)",
    "locations": [
      "src/roscpp_core/rostime/src/rate.cpp@137:5::137:36"
    ],
    "kind": "guard"
  },
  {
    "content": "actual_end < start_",
    "locations": [
      "src/roscpp_core/rostime/src/rate.cpp@122:6::122:25",
      "src/roscpp_core/rostime/src/rate.cpp@63:6::63:25"
    ],
    "kind": "guard"
  },
  {
    "content": "sleep_time <= Duration(0.0)",
    "locations": [
      "src/roscpp_core/rostime/src/rate.cpp@78:5::78:32"
    ],
    "kind": "guard"
  },
  {
    "content": "sec_part < 0 || sec_part > UINT_MAX",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@497:8::497:43"
    ],
    "kind": "guard"
  },
  {
    "content": "sec + sec_part > UINT_MAX",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@469:8::469:33"
    ],
    "kind": "guard"
  },
  {
    "content": "rhs.sec >= 0 || rhs.nsec == 0",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@448:8::448:37",
      "src/roscpp_core/rostime/src/time.cpp@342:8::342:37"
    ],
    "kind": "guard"
  },
  {
    "content": "Time::now() < start",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@420:16::420:35",
      "src/roscpp_core/rostime/src/time.cpp@371:16::371:35"
    ],
    "kind": "guard"
  },
  {
    "content": "start.isZero()",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@413:16::413:30",
      "src/roscpp_core/rostime/src/time.cpp@402:12::402:26"
    ],
    "kind": "guard"
  },
  {
    "content": "Time::useSystemTime()",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@355:8::355:29",
      "src/roscpp_core/rostime/src/time.cpp@394:8::394:29"
    ],
    "kind": "guard"
  },
  {
    "content": "d > WallDuration(0)",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@384:8::384:27"
    ],
    "kind": "guard"
  },
  {
    "content": "d > Duration(0)",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@358:12::358:27"
    ],
    "kind": "guard"
  },
  {
    "content": "timeout > ros::WallDuration(0, 0) && (ros::WallTime::now() - start > timeout)",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@300:12::300:89"
    ],
    "kind": "guard"
  },
  {
    "content": "g_stopped",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@306:8::306:17"
    ],
    "kind": "guard"
  },
  {
    "content": "g_use_sim_time",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@250:8::250:22"
    ],
    "kind": "guard"
  },
  {
    "content": "!g_initialized",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@245:8::245:22"
    ],
    "kind": "guard"
  },
  {
    "content": "WaitForSingleObject (timer, INFINITE) != WAIT_OBJECT_0",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@193:8::193:62"
    ],
    "kind": "guard"
  },
  {
    "content": "!SetWaitableTimer (timer, &sleepTime, 0, NULL, NULL, 0)",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@188:8::188:63"
    ],
    "kind": "guard"
  },
  {
    "content": "timer == NULL",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@183:8::183:21"
    ],
    "kind": "guard"
  },
  {
    "content": "cpu_freq.QuadPart == 0",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@130:12::130:34"
    ],
    "kind": "guard"
  },
  {
    "content": "( start_sec == 0 ) && ( start_nsec == 0 )",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@127:8::127:51"
    ],
    "kind": "guard"
  },
  {
    "content": "!success",
    "locations": [
      "src/rospack/src/rospack_backcompat.cpp@47:5::47:13",
      "src/image_common/camera_calibration_parsers/src/parse_yml.cpp@235:6::235:14"
    ],
    "kind": "guard"
  },
  {
    "content": "target.size() || top.size() || length_str.size() ||\n       zombie_only || deps_only || lang.size() || attrib.size()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@440:7::441:63",
      "src/rospack/src/rospack_cmdline.cpp@360:7::361:63",
      "src/rospack/src/rospack_cmdline.cpp@535:7::536:63",
      "src/rospack/src/rospack_cmdline.cpp@807:7::808:63",
      "src/rospack/src/rospack_cmdline.cpp@783:7::784:63",
      "src/rospack/src/rospack_cmdline.cpp@486:7::487:63",
      "src/rospack/src/rospack_cmdline.cpp@511:7::512:63",
      "src/rospack/src/rospack_cmdline.cpp@383:7::384:63",
      "src/rospack/src/rospack_cmdline.cpp@228:7::229:63",
      "src/rospack/src/rospack_cmdline.cpp@412:7::413:63"
    ],
    "kind": "guard"
  },
  {
    "content": "!package.size()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@481:7::481:22",
      "src/rospack/src/rospack_cmdline.cpp@355:7::355:22",
      "src/rospack/src/rospack_cmdline.cpp@746:7::746:22",
      "src/rospack/src/rospack_cmdline.cpp@506:7::506:22",
      "src/rospack/src/rospack_cmdline.cpp@602:7::602:22",
      "src/rospack/src/rospack_cmdline.cpp@435:7::435:22",
      "src/rospack/src/rospack_cmdline.cpp@407:7::407:22",
      "src/rospack/src/rospack_cmdline.cpp@223:7::223:22",
      "src/rospack/src/rospack_cmdline.cpp@716:7::716:22",
      "src/rospack/src/rospack_cmdline.cpp@644:7::644:22",
      "src/rospack/src/rospack_cmdline.cpp@378:7::378:22",
      "src/rospack/src/rospack_cmdline.cpp@778:7::778:22",
      "src/rospack/src/rospack_cmdline.cpp@802:7::802:22",
      "src/rospack/src/rospack_cmdline.cpp@530:7::530:22",
      "src/rospack/src/rospack_cmdline.cpp@674:7::674:22"
    ],
    "kind": "guard"
  },
  {
    "content": "it != flags.begin()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@764:9::764:28",
      "src/rospack/src/rospack_cmdline.cpp@662:9::662:28",
      "src/rospack/src/rospack_cmdline.cpp@570:9::570:28",
      "src/rospack/src/rospack_cmdline.cpp@734:9::734:28"
    ],
    "kind": "guard"
  },
  {
    "content": "!rp.cpp_exports(package, \"--libs-only-other\", \"lflags\", deps_only, flags)",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@757:7::757:80"
    ],
    "kind": "guard"
  },
  {
    "content": "target.size() || top.size() || length_str.size() || zombie_only",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@751:7::751:70",
      "src/rospack/src/rospack_cmdline.cpp@721:7::721:70",
      "src/rospack/src/rospack_cmdline.cpp@649:7::649:70",
      "src/rospack/src/rospack_cmdline.cpp@607:7::607:70",
      "src/rospack/src/rospack_cmdline.cpp@679:7::679:70"
    ],
    "kind": "guard"
  },
  {
    "content": "!rp.cpp_exports(package, \"--libs-only-l\", \"lflags\", deps_only, flags)",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@727:7::727:76"
    ],
    "kind": "guard"
  },
  {
    "content": "!combined.empty()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@695:9::695:26",
      "src/rospack/src/rospack_cmdline.cpp@623:9::623:26"
    ],
    "kind": "guard"
  },
  {
    "content": "!dry_result.empty() && !wet_result.empty()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@706:7::706:49",
      "src/rospack/src/rospack_cmdline.cpp@634:7::634:49"
    ],
    "kind": "guard"
  },
  {
    "content": "!rp.cpp_exports(package, \"--libs-only-L\", \"lflags\", deps_only, flags)",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@685:7::685:76"
    ],
    "kind": "guard"
  },
  {
    "content": "!rp.cpp_exports(package, \"--cflags-only-other\", \"cflags\", deps_only, flags)",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@655:7::655:82"
    ],
    "kind": "guard"
  },
  {
    "content": "!rp.cpp_exports(package, \"--cflags-only-I\", \"cflags\", deps_only, flags)",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@613:7::613:78"
    ],
    "kind": "guard"
  },
  {
    "content": "!rp.plugins(package, attrib, top, flags)",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@591:7::591:47"
    ],
    "kind": "guard"
  },
  {
    "content": "!package.size() || !attrib.size()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@580:7::580:40"
    ],
    "kind": "guard"
  },
  {
    "content": "!rp.exports(package, lang, attrib, deps_only, flags)",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@564:7::564:59"
    ],
    "kind": "guard"
  },
  {
    "content": "!package.size() || !lang.size() || !attrib.size()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@553:7::553:56"
    ],
    "kind": "guard"
  },
  {
    "content": "!rp.depsWhy(package, target, why_output)",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@470:7::470:47"
    ],
    "kind": "guard"
  },
  {
    "content": "!package.size() || !target.size()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@458:7::458:40"
    ],
    "kind": "guard"
  },
  {
    "content": "it != gens.begin()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@425:9::425:27"
    ],
    "kind": "guard"
  },
  {
    "content": "it != manifests.begin()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@396:9::396:32"
    ],
    "kind": "guard"
  },
  {
    "content": "it != deps.begin()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@344:9::344:27"
    ],
    "kind": "guard"
  },
  {
    "content": "std::find(disable_langs.begin(), disable_langs.end(), *it) !=\n           disable_langs.end()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@333:11::334:30"
    ],
    "kind": "guard"
  },
  {
    "content": "package_given || target.size() || top.size() || length_str.size() ||\n       zombie_only || deps_only || lang.size() || attrib.size()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@307:7::308:63",
      "src/rospack/src/rospack_cmdline.cpp@262:7::263:63",
      "src/rospack/src/rospack_cmdline.cpp@243:7::244:63",
      "src/rospack/src/rospack_cmdline.cpp@281:7::282:63"
    ],
    "kind": "guard"
  },
  {
    "content": "package_given || target.size() || top.size() ||\n       deps_only || lang.size() || attrib.size()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@201:7::202:48"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"profile\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@185:14::185:34",
      "src/rospack/src/rospack_cmdline.cpp@199:5::199:25"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"libs-only-other\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@183:14::183:42"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"libs-only-l\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@181:14::181:38"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"libs-only-L\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@179:14::179:38"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"cflags-only-other\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@177:14::177:44"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"cflags-only-I\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@175:14::175:40"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"plugins\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@173:14::173:34"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"export\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@171:14::171:33"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"depends-on1\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@169:14::169:38"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"depends-on\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@167:14::167:37"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"vcs0\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@165:14::165:31"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"vcs\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@163:14::163:30"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"rosdep\" || command == \"rosdeps\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@159:14::159:57"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"depends-why\" || command == \"deps-why\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@155:14::155:63"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"depends-manifest\" || command == \"deps-manifest\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@151:14::151:73"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"depends\" || command == \"deps\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@147:14::147:55"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"langs\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@145:14::145:32"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"list-duplicates\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@143:14::143:42",
      "src/rospack/src/rospack_cmdline.cpp@279:10::279:38"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"list-names\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@141:14::141:37",
      "src/rospack/src/rospack_cmdline.cpp@260:10::260:33"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"list\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@139:14::139:31",
      "src/rospack/src/rospack_cmdline.cpp@241:10::241:27"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"find\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@221:5::221:22",
      "src/rospack/src/rospack_cmdline.cpp@137:14::137:31"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"help\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@135:9::135:26",
      "src/rospack/src/rospack_cmdline.cpp@130:10::130:27"
    ],
    "kind": "guard"
  },
  {
    "content": "package_given || (command != \"help\" && vm.count(\"help\"))",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@129:7::129:63"
    ],
    "kind": "guard"
  },
  {
    "content": "zombie_only",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@120:7::120:18"
    ],
    "kind": "guard"
  },
  {
    "content": "rp.getName() == ROSSTACK_NAME && command == \"contents\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@776:10::776:64"
    ],
    "kind": "guard"
  },
  {
    "content": "rp.getName() == ROSPACK_NAME && command == \"libs-only-l\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@714:10::714:66"
    ],
    "kind": "guard"
  },
  {
    "content": "rp.getName() == ROSPACK_NAME && command == \"cflags-only-other\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@642:10::642:72"
    ],
    "kind": "guard"
  },
  {
    "content": "rp.getName() == ROSPACK_NAME && command == \"plugins\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@578:10::578:62"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"depends-on\" || command == \"depends-on1\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@528:10::528:61"
    ],
    "kind": "guard"
  },
  {
    "content": "rp.getName() == ROSPACK_NAME &&\n          (command == \"vcs\" || command == \"vcs0\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@503:10::504:49"
    ],
    "kind": "guard"
  },
  {
    "content": "rp.getName() == ROSPACK_NAME &&\n          (command == \"rosdep\" || command == \"rosdeps\" ||\n           command == \"rosdep0\" || command == \"rosdeps0\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@477:10::479:57"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"depends-indent\" || command == \"deps-indent\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@433:10::433:65"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"depends-manifests\" || command == \"deps-manifests\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@376:10::376:71"
    ],
    "kind": "guard"
  },
  {
    "content": "rp.getName() == ROSPACK_NAME && command == \"langs\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@305:10::305:60"
    ],
    "kind": "guard"
  },
  {
    "content": "!rp.getSearchPathFromEnv(search_path)",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@195:5::195:42"
    ],
    "kind": "guard"
  },
  {
    "content": "command == \"help\" || vm.count(\"help\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@127:5::127:42"
    ],
    "kind": "guard"
  },
  {
    "content": "vm.count(\"length\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@113:5::113:23"
    ],
    "kind": "guard"
  },
  {
    "content": "vm.count(\"zombie-only\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@111:5::111:28"
    ],
    "kind": "guard"
  },
  {
    "content": "vm.count(\"target\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@109:5::109:23"
    ],
    "kind": "guard"
  },
  {
    "content": "vm.count(\"top\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@107:5::107:20"
    ],
    "kind": "guard"
  },
  {
    "content": "vm.count(\"attrib\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@105:5::105:23"
    ],
    "kind": "guard"
  },
  {
    "content": "vm.count(\"lang\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@103:5::103:21"
    ],
    "kind": "guard"
  },
  {
    "content": "vm.count(\"deps-only\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@101:5::101:26"
    ],
    "kind": "guard"
  },
  {
    "content": "(command == \"profile\") ||\n     (command == \"depends-on\") ||\n     (command == \"depends-on1\") ||\n     (command == \"langs\") ||\n     (command == \"list-duplicates\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@84:5::88:35"
    ],
    "kind": "guard"
  },
  {
    "content": "!command.size()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@76:5::76:20"
    ],
    "kind": "guard"
  },
  {
    "content": "vm.count(\"-h\") && command.empty()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@73:5::73:38"
    ],
    "kind": "guard"
  },
  {
    "content": "vm.count(\"command\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@70:5::70:24"
    ],
    "kind": "guard"
  },
  {
    "content": "!parse_args(argc, argv, rp, vm)",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@53:5::53:36"
    ],
    "kind": "guard"
  },
  {
    "content": "!rospack::rospack_run(argc, argv, rp, output)",
    "locations": [
      "src/rospack/src/rospack_main.cpp@36:5::36:50"
    ],
    "kind": "guard"
  },
  {
    "content": "intermediate.size()",
    "locations": [
      "src/rospack/src/utils.cpp@129:11::129:30",
      "src/rospack/src/utils.cpp@114:15::114:34",
      "src/rospack/src/utils.cpp@95:11::95:30",
      "src/rospack/src/utils.cpp@136:9::136:28"
    ],
    "kind": "guard"
  },
  {
    "content": "select",
    "locations": [
      "src/rospack/src/utils.cpp@112:13::112:19",
      "src/rospack/src/utils.cpp@93:9::93:15",
      "src/rospack/src/utils.cpp@127:9::127:15",
      "src/rospack/src/utils.cpp@141:5::141:11"
    ],
    "kind": "guard"
  },
  {
    "content": "it->size() >= token.size() && it->substr(0,token.size()) == token",
    "locations": [
      "src/rospack/src/utils.cpp@106:11::106:76"
    ],
    "kind": "guard"
  },
  {
    "content": "++iit != result_vec.end()",
    "locations": [
      "src/rospack/src/utils.cpp@104:9::104:34"
    ],
    "kind": "guard"
  },
  {
    "content": "it->size() > 2 &&\n            (*it)[0] == '/' &&\n            it->substr(it->size()-2) == \".a\"",
    "locations": [
      "src/rospack/src/utils.cpp@123:12::125:44"
    ],
    "kind": "guard"
  },
  {
    "content": "it->size() > token.size() && it->substr(0,token.size()) == token",
    "locations": [
      "src/rospack/src/utils.cpp@91:7::91:71"
    ],
    "kind": "guard"
  },
  {
    "content": "it == vec_out.begin()",
    "locations": [
      "src/rospack/src/utils.cpp@67:7::67:28"
    ],
    "kind": "guard"
  },
  {
    "content": "set.find(*it) == set.end()",
    "locations": [
      "src/rospack/src/utils.cpp@55:7::55:33"
    ],
    "kind": "guard"
  },
  {
    "content": "last",
    "locations": [
      "src/rospack/src/utils.cpp@61:5::61:9",
      "src/rospack/src/utils.cpp@48:5::48:9"
    ],
    "kind": "guard"
  },
  {
    "content": "instance",
    "locations": [
      "src/urdf/urdf/src/model.cpp@163:7::163:15"
    ],
    "kind": "guard"
  },
  {
    "content": "classes[i].find(\"urdf/ColladaURDFParser\") != std::string::npos",
    "locations": [
      "src/urdf/urdf/src/model.cpp@160:5::160:67"
    ],
    "kind": "guard"
  },
  {
    "content": "!PARSER_PLUGIN_LOADER",
    "locations": [
      "src/urdf/urdf/src/model.cpp@155:10::155:31"
    ],
    "kind": "guard"
  },
  {
    "content": "model",
    "locations": [
      "src/urdf/urdf/src/model.cpp@182:6::182:11"
    ],
    "kind": "guard"
  },
  {
    "content": "IsColladaData(xml_string)",
    "locations": [
      "src/urdf/urdf/src/model.cpp@146:5::146:32"
    ],
    "kind": "guard"
  },
  {
    "content": "!robot_xml",
    "locations": [
      "src/urdf/urdf/src/model.cpp@129:6::129:16"
    ],
    "kind": "guard"
  },
  {
    "content": "!xml_doc",
    "locations": [
      "src/urdf/urdf/src/model.cpp@115:6::115:14"
    ],
    "kind": "guard"
  },
  {
    "content": "!nh.getParam(full_param, xml_string)",
    "locations": [
      "src/urdf/urdf/src/model.cpp@106:6::106:42"
    ],
    "kind": "guard"
  },
  {
    "content": "!nh.searchParam(param, full_param)",
    "locations": [
      "src/urdf/urdf/src/model.cpp@100:6::100:40"
    ],
    "kind": "guard"
  },
  {
    "content": "xml_file.is_open()",
    "locations": [
      "src/urdf/urdf/src/model.cpp@69:6::69:24"
    ],
    "kind": "guard"
  },
  {
    "content": "node != NULL",
    "locations": [
      "src/yujin_ocs/yocs_cmd_vel_mux/src/cmd_vel_mux_nodelet.cpp@139:6::139:20"
    ],
    "kind": "guard"
  },
  {
    "content": "doc[\"publisher\"]",
    "locations": [
      "src/yujin_ocs/yocs_cmd_vel_mux/src/cmd_vel_mux_nodelet.cpp@134:6::134:24"
    ],
    "kind": "guard"
  },
  {
    "content": "ifs.good() == false",
    "locations": [
      "src/yujin_ocs/yocs_cmd_vel_mux/src/cmd_vel_mux_nodelet.cpp@115:6::115:25"
    ],
    "kind": "guard"
  },
  {
    "content": "config.yaml_cfg_file == \"\"",
    "locations": [
      "src/yujin_ocs/yocs_cmd_vel_mux/src/cmd_vel_mux_nodelet.cpp@101:5::101:33"
    ],
    "kind": "guard"
  },
  {
    "content": "cmd_vel_sub.allowed == idx",
    "locations": [
      "src/yujin_ocs/yocs_cmd_vel_mux/src/cmd_vel_mux_nodelet.cpp@60:6::60:32"
    ],
    "kind": "guard"
  },
  {
    "content": "cmd_vel_sub.allowed != idx",
    "locations": [
      "src/yujin_ocs/yocs_cmd_vel_mux/src/cmd_vel_mux_nodelet.cpp@44:8::44:34"
    ],
    "kind": "guard"
  },
  {
    "content": "(cmd_vel_sub.allowed == VACANT) ||\n      (cmd_vel_sub.allowed == idx)    ||\n      (cmd_vel_sub[idx].priority > cmd_vel_sub[cmd_vel_sub.allowed].priority)",
    "locations": [
      "src/yujin_ocs/yocs_cmd_vel_mux/src/cmd_vel_mux_nodelet.cpp@40:6::42:77"
    ],
    "kind": "guard"
  },
  {
    "content": "vel_smoother_->init(ph)",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@319:8::319:31"
    ],
    "kind": "guard"
  },
  {
    "content": "(nh.getParam(\"accel_lim_v\", accel_lim_v) == false) ||\n      (nh.getParam(\"accel_lim_w\", accel_lim_w) == false)",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@270:6::271:56"
    ],
    "kind": "guard"
  },
  {
    "content": "(nh.getParam(\"speed_lim_v\", speed_lim_v) == false) ||\n      (nh.getParam(\"speed_lim_w\", speed_lim_w) == false)",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@263:6::264:56"
    ],
    "kind": "guard"
  },
  {
    "content": "(int(feedback) < NONE) || (int(feedback) > COMMANDS)",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@253:6::253:58"
    ],
    "kind": "guard"
  },
  {
    "content": "std::abs(v_inc) > max_v_inc",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@208:10::208:37"
    ],
    "kind": "guard"
  },
  {
    "content": "theta < 0",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@197:10::197:19"
    ],
    "kind": "guard"
  },
  {
    "content": "(robot_feedback == ODOMETRY) && (current_vel.angular.z*target_vel.angular.z < 0.0)",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@175:10::175:92"
    ],
    "kind": "guard"
  },
  {
    "content": "(robot_feedback == ODOMETRY) && (current_vel.linear.x*target_vel.linear.x < 0.0)",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@164:10::164:90"
    ],
    "kind": "guard"
  },
  {
    "content": "IS_ZERO_VEOCITY(target_vel) == false",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@125:10::125:46"
    ],
    "kind": "guard"
  },
  {
    "content": "input_active == true",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@223:13::223:33"
    ],
    "kind": "guard"
  },
  {
    "content": "(target_vel.linear.x  != last_cmd_vel.linear.x) ||\n        (target_vel.angular.z != last_cmd_vel.angular.z)",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@155:8::156:56"
    ],
    "kind": "guard"
  },
  {
    "content": "(input_active == true) && (cb_avg_time > 0.0) &&\n        ((ros::Time::now() - last_cb_time).toSec() > std::min(3.0*cb_avg_time, 0.5))",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@116:8::117:84"
    ],
    "kind": "guard"
  },
  {
    "content": "robot_feedback == COMMANDS",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@103:6::103:32"
    ],
    "kind": "guard"
  },
  {
    "content": "robot_feedback == ODOMETRY",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@95:6::95:32"
    ],
    "kind": "guard"
  },
  {
    "content": "period_record.size() <= PERIOD_RECORD_SIZE/2",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@73:6::73:50"
    ],
    "kind": "guard"
  },
  {
    "content": "period_record.size() < PERIOD_RECORD_SIZE",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@60:6::60:47"
    ],
    "kind": "guard"
  },
  {
    "content": "best.cost_ < 0",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@978:7::978:21"
    ],
    "kind": "guard"
  },
  {
    "content": "strafe_left",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@732:14::732:25",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@829:13::829:24"
    ],
    "kind": "guard"
  },
  {
    "content": "strafe_right",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@824:13::824:25",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@727:14::727:26"
    ],
    "kind": "guard"
  },
  {
    "content": "rotating_left",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@819:13::819:26",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@722:14::722:27"
    ],
    "kind": "guard"
  },
  {
    "content": "rotating_right",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@717:14::717:28",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@814:14::814:28"
    ],
    "kind": "guard"
  },
  {
    "content": "best_traj->yv_ < 0",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@828:18::828:36"
    ],
    "kind": "guard"
  },
  {
    "content": "best_traj->thetav_ > 0",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@721:19::721:41",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@818:18::818:40"
    ],
    "kind": "guard"
  },
  {
    "content": "best_traj->thetav_ < 0",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@716:12::716:34",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@813:12::813:34"
    ],
    "kind": "guard"
  },
  {
    "content": "dist > escape_reset_dist_ || fabs(angles::shortest_angular_distance(escape_theta_, theta)) > escape_reset_theta_",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@854:9::854:121"
    ],
    "kind": "guard"
  },
  {
    "content": "dist > oscillation_reset_dist_",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@883:8::883:38",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@842:9::842:39",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@744:10::744:40"
    ],
    "kind": "guard"
  },
  {
    "content": "!(best_traj->xv_ > 0)",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@812:10::812:31"
    ],
    "kind": "guard"
  },
  {
    "content": "vy_samp < 0 && !stuck_right_strafe",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@798:22::798:56"
    ],
    "kind": "guard"
  },
  {
    "content": "vy_samp > 0 && !stuck_left_strafe",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@791:18::791:51"
    ],
    "kind": "guard"
  },
  {
    "content": "ahead_gdist < heading_dist",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@690:14::690:40",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@789:16::789:42"
    ],
    "kind": "guard"
  },
  {
    "content": "costmap_.worldToMap(x_r, y_r, cell_x, cell_y)",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@787:13::787:58",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@688:12::688:57"
    ],
    "kind": "guard"
  },
  {
    "content": "comp_traj->cost_ >= 0 && (comp_traj->cost_ <= best_traj->cost_ || best_traj->cost_ < 0)",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@779:11::779:98"
    ],
    "kind": "guard"
  },
  {
    "content": "best_traj->yv_ > 0",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@726:18::726:36"
    ],
    "kind": "guard"
  },
  {
    "content": "dist > escape_reset_dist_ ||\n          fabs(angles::shortest_angular_distance(escape_theta_, theta)) > escape_reset_theta_",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@756:9::757:93"
    ],
    "kind": "guard"
  },
  {
    "content": "! (best_traj->xv_ > 0)",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@715:10::715:33"
    ],
    "kind": "guard"
  },
  {
    "content": "vtheta_samp > 0 && !stuck_right",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@699:20::699:51"
    ],
    "kind": "guard"
  },
  {
    "content": "vtheta_samp < 0 && !stuck_left",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@692:16::692:46"
    ],
    "kind": "guard"
  },
  {
    "content": "comp_traj->cost_ >= 0\n          && (comp_traj->cost_ <= best_traj->cost_ || best_traj->cost_ < 0 || best_traj->yv_ != 0.0)\n          && (vtheta_samp > dvtheta || vtheta_samp < -1 * dvtheta)",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@678:9::680:66"
    ],
    "kind": "guard"
  },
  {
    "content": "comp_traj->cost_ >= 0 && (comp_traj->cost_ < best_traj->cost_ || best_traj->cost_ < 0)",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@619:13::619:99",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@606:11::606:97",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@639:11::639:97",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@652:11::652:97"
    ],
    "kind": "guard"
  },
  {
    "content": "holonomic_robot_",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@630:10::630:26",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@765:8::765:24"
    ],
    "kind": "guard"
  },
  {
    "content": "dist > escape_reset_dist_ ||\n        fabs(angles::shortest_angular_distance(escape_theta_, theta)) > escape_reset_theta_",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@904:8::905:91"
    ],
    "kind": "guard"
  },
  {
    "content": "!escaping_ && best_traj->cost_ > -2.0",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@895:8::895:45"
    ],
    "kind": "guard"
  },
  {
    "content": "best_traj->cost_ >= 0",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@811:8::811:29",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@713:8::713:29"
    ],
    "kind": "guard"
  },
  {
    "content": "!escaping_",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@597:8::597:18"
    ],
    "kind": "guard"
  },
  {
    "content": "dwa_",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@561:8::561:12"
    ],
    "kind": "guard"
  },
  {
    "content": "final_goal_position_valid_",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@555:7::555:35"
    ],
    "kind": "guard"
  },
  {
    "content": "global_plan_.size() > 0",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@494:7::494:32"
    ],
    "kind": "guard"
  },
  {
    "content": "lineCost(cell_x, goal_cell_x, cell_y, goal_cell_y) >= 0",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@380:12::380:67"
    ],
    "kind": "guard"
  },
  {
    "content": "costmap_.worldToMap(global_plan_[i].pose.position.x, global_plan_[i].pose.position.y, goal_cell_x, goal_cell_y)",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@379:10::379:121"
    ],
    "kind": "guard"
  },
  {
    "content": "impossible_cost <= goal_dist || impossible_cost <= path_dist",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@334:13::334:73"
    ],
    "kind": "guard"
  },
  {
    "content": "time >= heading_scoring_timestep_ && time < heading_scoring_timestep_ + dt",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@321:14::321:88"
    ],
    "kind": "guard"
  },
  {
    "content": "update_path_and_goal_distances",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@328:12::328:42"
    ],
    "kind": "guard"
  },
  {
    "content": "heading_scoring_",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@320:12::320:28"
    ],
    "kind": "guard"
  },
  {
    "content": "simple_attractor_",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@309:10::309:27"
    ],
    "kind": "guard"
  },
  {
    "content": "!costmap_.worldToMap(x_i, y_i, cell_x, cell_y)",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@271:9::271:55"
    ],
    "kind": "guard"
  },
  {
    "content": "!heading_scoring_",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@239:7::239:24",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@363:8::363:25"
    ],
    "kind": "guard"
  },
  {
    "content": "num_steps == 0",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@246:7::246:21"
    ],
    "kind": "guard"
  },
  {
    "content": "cell.target_dist == path_map_.obstacleCosts() ||\n        cell.target_dist == path_map_.unreachableCellCosts() ||\n        occ_cost >= costmap_2d::INSCRIBED_INFLATED_OBSTACLE",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@199:8::201:59"
    ],
    "kind": "guard"
  },
  {
    "content": "cell.within_robot",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@195:8::195:25"
    ],
    "kind": "guard"
  },
  {
    "content": "vtheta_samples_ <= 0",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@104:9::104:29"
    ],
    "kind": "guard"
  },
  {
    "content": "vx_samples_ <= 0",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@99:10::99:26"
    ],
    "kind": "guard"
  },
  {
    "content": "meter_scoring_",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@84:10::84:24"
    ],
    "kind": "guard"
  },
  {
    "content": "update_map",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@570:9::570:19",
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@538:9::538:19"
    ],
    "kind": "guard"
  },
  {
    "content": "costmap_ros_->getRobotPose(global_pose)",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@537:7::537:46",
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@569:7::569:46"
    ],
    "kind": "guard"
  },
  {
    "content": "!rotateToGoal(global_pose, robot_vel, goal_th, cmd_vel)",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@468:13::468:68"
    ],
    "kind": "guard"
  },
  {
    "content": "! stopWithAccLimits(global_pose, robot_vel, cmd_vel)",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@460:14::460:67"
    ],
    "kind": "guard"
  },
  {
    "content": "! rotating_to_goal_ && !base_local_planner::stopped(base_odom, rot_stopped_velocity_, trans_stopped_velocity_)",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@459:12::459:123"
    ],
    "kind": "guard"
  },
  {
    "content": "fabs(angle) <= yaw_goal_tolerance_",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@439:10::439:44"
    ],
    "kind": "guard"
  },
  {
    "content": "latch_xy_goal_tolerance_",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@433:10::433:34"
    ],
    "kind": "guard"
  },
  {
    "content": "xy_tolerance_latch_ || (getGoalPositionDistance(global_pose, goal_x, goal_y) <= xy_goal_tolerance_)",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@429:8::429:107"
    ],
    "kind": "guard"
  },
  {
    "content": "prune_plan_",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@399:7::399:18"
    ],
    "kind": "guard"
  },
  {
    "content": "!transformGlobalPlan(*tf_, global_plan_, global_pose, *costmap_, global_frame_, transformed_plan)",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@393:8::393:105"
    ],
    "kind": "guard"
  },
  {
    "content": "!costmap_ros_->getRobotPose(global_pose)",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@387:8::387:48"
    ],
    "kind": "guard"
  },
  {
    "content": "tc_ != NULL",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@283:7::283:18"
    ],
    "kind": "guard"
  },
  {
    "content": "node.getParam(\"y_vels\", y_vel_list)",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@259:7::259:42"
    ],
    "kind": "guard"
  },
  {
    "content": "meter_scoring",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@182:11::182:24"
    ],
    "kind": "guard"
  },
  {
    "content": "backup_vel >= 0.0",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@214:9::214:26"
    ],
    "kind": "guard"
  },
  {
    "content": "private_nh.getParam(\"backup_vel\", backup_vel)",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@208:9::208:54"
    ],
    "kind": "guard"
  },
  {
    "content": "! private_nh.hasParam(\"meter_scoring\")",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@177:10::177:49"
    ],
    "kind": "guard"
  },
  {
    "content": "private_nh.hasParam(\"acc_limit_th\")",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@143:9::143:44"
    ],
    "kind": "guard"
  },
  {
    "content": "private_nh.hasParam(\"acc_limit_y\")",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@140:9::140:43"
    ],
    "kind": "guard"
  },
  {
    "content": "private_nh.hasParam(\"acc_limit_x\")",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@137:9::137:43"
    ],
    "kind": "guard"
  },
  {
    "content": "private_nh.hasParam(\"acc_lim_th\")",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@124:10::124:43"
    ],
    "kind": "guard"
  },
  {
    "content": "!!input_ss",
    "locations": [
      "src/navigation/costmap_2d/src/array_parser.cpp@95:10::95:20"
    ],
    "kind": "guard"
  },
  {
    "content": "depth != 2",
    "locations": [
      "src/navigation/costmap_2d/src/array_parser.cpp@86:10::86:20"
    ],
    "kind": "guard"
  },
  {
    "content": "depth == 1",
    "locations": [
      "src/navigation/costmap_2d/src/array_parser.cpp@75:10::75:20"
    ],
    "kind": "guard"
  },
  {
    "content": "depth < 0",
    "locations": [
      "src/navigation/costmap_2d/src/array_parser.cpp@69:10::69:19"
    ],
    "kind": "guard"
  },
  {
    "content": "depth > 2",
    "locations": [
      "src/navigation/costmap_2d/src/array_parser.cpp@59:10::59:19"
    ],
    "kind": "guard"
  },
  {
    "content": "depth != 0",
    "locations": [
      "src/navigation/costmap_2d/src/array_parser.cpp@103:6::103:16"
    ],
    "kind": "guard"
  },
  {
    "content": "row[jj] < unknown_gray && ii < nrows-7 && ii > 7",
    "locations": [
      "src/navigation/navfn/src/read_pgm_costmap.cpp@121:12::121:60"
    ],
    "kind": "guard"
  },
  {
    "content": "v == 0",
    "locations": [
      "src/navigation/navfn/src/read_pgm_costmap.cpp@112:12::112:18"
    ],
    "kind": "guard"
  },
  {
    "content": "v >= COST_OBS_ROS",
    "locations": [
      "src/navigation/navfn/src/read_pgm_costmap.cpp@110:12::110:29"
    ],
    "kind": "guard"
  },
  {
    "content": "raw",
    "locations": [
      "src/navigation/navfn/src/read_pgm_costmap.cpp@104:8::104:11"
    ],
    "kind": "guard"
  },
  {
    "content": "!raw",
    "locations": [
      "src/navigation/navfn/src/read_pgm_costmap.cpp@94:6::94:10"
    ],
    "kind": "guard"
  },
  {
    "content": "!pgmfile",
    "locations": [
      "src/navigation/navfn/src/read_pgm_costmap.cpp@79:6::79:14"
    ],
    "kind": "guard"
  },
  {
    "content": "!first",
    "locations": [
      "src/image_common/camera_calibration_parsers/src/parse_ini.cpp@233:6::233:12"
    ],
    "kind": "guard"
  },
  {
    "content": "cam_info.D.size() == 8",
    "locations": [
      "src/image_common/camera_calibration_parsers/src/parse_ini.cpp@214:11::214:33"
    ],
    "kind": "guard"
  },
  {
    "content": "cam_info.D.size() == 5",
    "locations": [
      "src/image_common/camera_calibration_parsers/src/parse_ini.cpp@212:6::212:28"
    ],
    "kind": "guard"
  },
  {
    "content": "!dir.empty() && !boost::filesystem::exists(dir) &&\n     !boost::filesystem::create_directories(dir)",
    "locations": [
      "src/image_common/camera_calibration_parsers/src/parse_yml.cpp@145:6::146:48",
      "src/image_common/camera_calibration_parsers/src/parse_ini.cpp@117:6::118:48"
    ],
    "kind": "guard"
  },
  {
    "content": "cam_info.distortion_model != sensor_msgs::distortion_models::PLUMB_BOB ||\n      cam_info.D.size() != 5",
    "locations": [
      "src/image_common/camera_calibration_parsers/src/parse_ini.cpp@85:6::86:28"
    ],
    "kind": "guard"
  },
  {
    "content": "!fin.good()",
    "locations": [
      "src/image_common/camera_calibration_parsers/src/parse_yml.cpp@230:6::230:17"
    ],
    "kind": "guard"
  },
  {
    "content": "const YAML::Node* model_node = doc.FindValue(DMODEL_YML_NAME)",
    "locations": [
      "src/image_common/camera_calibration_parsers/src/parse_yml.cpp@200:8::200:69"
    ],
    "kind": "guard"
  },
  {
    "content": "doc[DMODEL_YML_NAME]",
    "locations": [
      "src/image_common/camera_calibration_parsers/src/parse_yml.cpp@196:8::196:28"
    ],
    "kind": "guard"
  },
  {
    "content": "const YAML::Node* name_node = doc.FindValue(CAM_YML_NAME)",
    "locations": [
      "src/image_common/camera_calibration_parsers/src/parse_yml.cpp@177:8::177:65"
    ],
    "kind": "guard"
  },
  {
    "content": "!parser",
    "locations": [
      "src/image_common/camera_calibration_parsers/src/parse_yml.cpp@170:8::170:15"
    ],
    "kind": "guard"
  },
  {
    "content": "doc[CAM_YML_NAME]",
    "locations": [
      "src/image_common/camera_calibration_parsers/src/parse_yml.cpp@164:8::164:25"
    ],
    "kind": "guard"
  },
  {
    "content": "!isalnum(cname[i]) && cname[i] != '_'",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@606:10::606:47"
    ],
    "kind": "guard"
  },
  {
    "content": "cname.empty()",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@600:6::600:19"
    ],
    "kind": "guard"
  },
  {
    "content": "!rsp.success",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@581:6::581:18"
    ],
    "kind": "guard"
  },
  {
    "content": "!nh_.ok()",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@572:6::572:15"
    ],
    "kind": "guard"
  },
  {
    "content": "rc != 0",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@513:6::513:13",
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@520:14::520:21"
    ],
    "kind": "guard"
  },
  {
    "content": "errno == ENOENT",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@515:10::515:25"
    ],
    "kind": "guard"
  },
  {
    "content": "!S_ISDIR(stat_data.st_mode)",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@535:11::535:38"
    ],
    "kind": "guard"
  },
  {
    "content": "last_slash >= filename.length()",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@501:6::501:37"
    ],
    "kind": "guard"
  },
  {
    "content": "!filename.empty()",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@244:12::244:29",
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@467:12::467:29"
    ],
    "kind": "guard"
  },
  {
    "content": "rest < url.length()-1 && rest > 10",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@426:10::426:44"
    ],
    "kind": "guard"
  },
  {
    "content": "boost::iequals(url.substr(0, 10), \"package://\")",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@421:6::421:53"
    ],
    "kind": "guard"
  },
  {
    "content": "boost::iequals(url.substr(0, 9), \"flash:///\")",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@417:6::417:51"
    ],
    "kind": "guard"
  },
  {
    "content": "boost::iequals(url.substr(0, 8), \"file:///\")",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@413:6::413:50"
    ],
    "kind": "guard"
  },
  {
    "content": "url == \"\"",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@409:6::409:15"
    ],
    "kind": "guard"
  },
  {
    "content": "(ros_home_env = getenv(\"HOME\"))",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@375:19::375:50"
    ],
    "kind": "guard"
  },
  {
    "content": "(ros_home_env = getenv(\"ROS_HOME\"))",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@370:14::370:49"
    ],
    "kind": "guard"
  },
  {
    "content": "url.substr(dollar+1, 10) == \"{ROS_HOME}\"",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@365:15::365:55"
    ],
    "kind": "guard"
  },
  {
    "content": "url.substr(dollar+1, 6) == \"{NAME}\"",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@359:15::359:50"
    ],
    "kind": "guard"
  },
  {
    "content": "url.substr(dollar+1, 1) != \"{\"",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@354:10::354:40"
    ],
    "kind": "guard"
  },
  {
    "content": "dollar >= url.length()",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@344:10::344:32"
    ],
    "kind": "guard"
  },
  {
    "content": "cname != cam_name",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@279:10::279:27"
    ],
    "kind": "guard"
  },
  {
    "content": "readCalibration(filename, cam_name, cam_info)",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@277:6::277:51"
    ],
    "kind": "guard"
  },
  {
    "content": "url_type != URL_empty",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@218:6::218:27"
    ],
    "kind": "guard"
  },
  {
    "content": "loaded_cam_info_",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@114:12::114:28",
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@181:12::181:28"
    ],
    "kind": "guard"
  },
  {
    "content": "pkgPath.empty()",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@152:6::152:21"
    ],
    "kind": "guard"
  },
  {
    "content": "src1.rows()!=src2.rows()",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/jntarray.cpp@115:11::115:35"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(argv[7], argv[8]) == 0",
    "locations": [
      "src/geometry/tf/src/static_transform_publisher.cpp@97:8::97:37"
    ],
    "kind": "guard"
  },
  {
    "content": "strcmp(argv[8], argv[9]) == 0",
    "locations": [
      "src/geometry/tf/src/static_transform_publisher.cpp@74:8::74:37"
    ],
    "kind": "guard"
  },
  {
    "content": "argc == 10",
    "locations": [
      "src/geometry/tf/src/static_transform_publisher.cpp@93:11::93:21"
    ],
    "kind": "guard"
  },
  {
    "content": "argc == 11",
    "locations": [
      "src/geometry/tf/src/static_transform_publisher.cpp@70:5::70:15"
    ],
    "kind": "guard"
  },
  {
    "content": "i >= NumConditionalArgumentsGet()",
    "locations": [
      "src/navigation/robot_pose_ekf/src/nonlinearanalyticconditionalgaussianodo.cpp@67:5::67:38"
    ],
    "kind": "guard"
  },
  {
    "content": "i==j",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@137:5::137:9",
      "src/navigation/robot_pose_ekf/src/nonlinearanalyticconditionalgaussianodo.cpp@34:5::34:9"
    ],
    "kind": "guard"
  },
  {
    "content": "!transformer_.canTransform(output_frame_, base_footprint_frame_, ros::Time())",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@384:8::384:85"
    ],
    "kind": "guard"
  },
  {
    "content": "!transformer_.canTransform(output_frame_, base_footprint_frame_, time)",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@372:8::372:78"
    ],
    "kind": "guard"
  },
  {
    "content": "!transformer_.canTransform(base_footprint_frame_,output_frame_, time)",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@361:8::361:77"
    ],
    "kind": "guard"
  },
  {
    "content": "covar(i+1,i+1) == 0",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@336:10::336:29"
    ],
    "kind": "guard"
  },
  {
    "content": "meas.child_frame_id_ == \"gps\"",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@346:13::346:42"
    ],
    "kind": "guard"
  },
  {
    "content": "meas.child_frame_id_ == \"vo\"",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@345:13::345:41"
    ],
    "kind": "guard"
  },
  {
    "content": "meas.child_frame_id_ == \"imu\"",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@344:13::344:42"
    ],
    "kind": "guard"
  },
  {
    "content": "meas.child_frame_id_ == \"wheelodom\"",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@343:8::343:43"
    ],
    "kind": "guard"
  },
  {
    "content": "diagnostics > 0.3 && dt > 0.01",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@314:10::314:40"
    ],
    "kind": "guard"
  },
  {
    "content": "gps_initialized_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@283:10::283:26"
    ],
    "kind": "guard"
  },
  {
    "content": "!transformer_.canTransform(base_footprint_frame_,\"gps\", filter_time)",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@278:10::278:78"
    ],
    "kind": "guard"
  },
  {
    "content": "vo_initialized_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@257:10::257:25"
    ],
    "kind": "guard"
  },
  {
    "content": "!transformer_.canTransform(base_footprint_frame_,\"vo\", filter_time)",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@252:10::252:77"
    ],
    "kind": "guard"
  },
  {
    "content": "imu_initialized_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@226:10::226:26"
    ],
    "kind": "guard"
  },
  {
    "content": "!transformer_.canTransform(base_footprint_frame_,\"imu\", filter_time)",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@221:10::221:78"
    ],
    "kind": "guard"
  },
  {
    "content": "odom_initialized_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@193:10::193:27"
    ],
    "kind": "guard"
  },
  {
    "content": "!transformer_.canTransform(base_footprint_frame_,\"wheelodom\", filter_time)",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@188:10::188:84"
    ],
    "kind": "guard"
  },
  {
    "content": "odom_active && imu_active",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@312:8::312:33"
    ],
    "kind": "guard"
  },
  {
    "content": "gps_active",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@277:8::277:18"
    ],
    "kind": "guard"
  },
  {
    "content": "vo_active",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@251:8::251:17"
    ],
    "kind": "guard"
  },
  {
    "content": "imu_active",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@220:8::220:18"
    ],
    "kind": "guard"
  },
  {
    "content": "odom_active",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@187:8::187:19"
    ],
    "kind": "guard"
  },
  {
    "content": "dt <  0",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@170:8::170:15"
    ],
    "kind": "guard"
  },
  {
    "content": "dt == 0",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@169:8::169:15"
    ],
    "kind": "guard"
  },
  {
    "content": "!filter_initialized_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@162:8::162:28"
    ],
    "kind": "guard"
  },
  {
    "content": "prior_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@114:8::114:14"
    ],
    "kind": "guard"
  },
  {
    "content": "filter_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@113:8::113:15"
    ],
    "kind": "guard"
  },
  {
    "content": "!my_filter_.isInitialized()",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@490:24::490:51"
    ],
    "kind": "guard"
  },
  {
    "content": "!vo_active_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@307:8::307:19",
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@485:24::485:35"
    ],
    "kind": "guard"
  },
  {
    "content": "!imu_active_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@481:24::481:36",
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@264:8::264:20"
    ],
    "kind": "guard"
  },
  {
    "content": "!odom_active_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@193:8::193:21",
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@477:24::477:37"
    ],
    "kind": "guard"
  },
  {
    "content": "debug_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@322:8::322:14",
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@158:8::158:14",
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@363:8::363:14",
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@279:8::279:14",
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@140:8::140:14",
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@208:8::208:14",
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@436:14::436:20"
    ],
    "kind": "guard"
  },
  {
    "content": "!vo_active_ && !gps_active_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@432:13::432:40"
    ],
    "kind": "guard"
  },
  {
    "content": "self_diagnose_ && !diagnostics",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@447:12::447:42"
    ],
    "kind": "guard"
  },
  {
    "content": "my_filter_.update(odom_active_, imu_active_,gps_active_, vo_active_,  filter_stamp_, diagnostics)",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@422:12::422:109"
    ],
    "kind": "guard"
  },
  {
    "content": "vo_active_ && !gps_used_ && !my_filter_.isInitialized()",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@464:15::464:71"
    ],
    "kind": "guard"
  },
  {
    "content": "imu_active_ && gps_active_ && !my_filter_.isInitialized()",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@453:10::453:67"
    ],
    "kind": "guard"
  },
  {
    "content": "my_filter_.isInitialized()",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@240:15::240:41",
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@420:10::420:38"
    ],
    "kind": "guard"
  },
  {
    "content": "gps_active_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@416:10::416:21"
    ],
    "kind": "guard"
  },
  {
    "content": "vo_active_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@415:10::415:20"
    ],
    "kind": "guard"
  },
  {
    "content": "imu_active_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@238:10::238:21",
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@414:10::414:21"
    ],
    "kind": "guard"
  },
  {
    "content": "odom_active_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@413:10::413:22"
    ],
    "kind": "guard"
  },
  {
    "content": "diff > 1.0",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@379:10::379:20"
    ],
    "kind": "guard"
  },
  {
    "content": "(gps_active_ || gps_initializing_) && \n        (Time::now() - gps_time_).toSec() > timeout_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@402:8::403:52"
    ],
    "kind": "guard"
  },
  {
    "content": "(odom_active_ || odom_initializing_) && \n        (Time::now() - odom_time_).toSec() > timeout_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@386:8::387:53"
    ],
    "kind": "guard"
  },
  {
    "content": "(odom_initializing_ || odom_active_) && (imu_initializing_ || imu_active_)",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@377:8::377:84"
    ],
    "kind": "guard"
  },
  {
    "content": "filter_stamp_ >= gps_init_stamp_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@354:10::354:42"
    ],
    "kind": "guard"
  },
  {
    "content": "!gps_initializing_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@349:10::349:28"
    ],
    "kind": "guard"
  },
  {
    "content": "!gps_active_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@348:8::348:20"
    ],
    "kind": "guard"
  },
  {
    "content": "filter_stamp_ >= vo_init_stamp_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@313:10::313:41"
    ],
    "kind": "guard"
  },
  {
    "content": "!vo_initializing_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@308:10::308:27"
    ],
    "kind": "guard"
  },
  {
    "content": "filter_stamp_ >= imu_init_stamp_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@270:10::270:43"
    ],
    "kind": "guard"
  },
  {
    "content": "!imu_initializing_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@265:10::265:28"
    ],
    "kind": "guard"
  },
  {
    "content": "imu_covariance_(1,1) == 0.0",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@253:8::253:35"
    ],
    "kind": "guard"
  },
  {
    "content": "!robot_state_.waitForTransform(base_footprint_frame_, imu->header.frame_id, imu_stamp_, ros::Duration(0.5))",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@236:8::236:115"
    ],
    "kind": "guard"
  },
  {
    "content": "filter_stamp_ >= odom_init_stamp_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@199:10::199:44"
    ],
    "kind": "guard"
  },
  {
    "content": "!odom_initializing_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@194:10::194:29"
    ],
    "kind": "guard"
  },
  {
    "content": "gps_used_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@130:8::130:17"
    ],
    "kind": "guard"
  },
  {
    "content": "vo_used_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@124:8::124:16"
    ],
    "kind": "guard"
  },
  {
    "content": "imu_used_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@117:8::117:17"
    ],
    "kind": "guard"
  },
  {
    "content": "odom_used_",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@110:8::110:18"
    ],
    "kind": "guard"
  },
  {
    "content": "impl_",
    "locations": [
      "src/image_common/image_transport/src/subscriber.cpp@116:6::116:11",
      "src/image_common/image_transport/src/publisher.cpp@184:6::184:11",
      "src/image_common/image_transport/src/camera_publisher.cpp@107:6::107:11",
      "src/image_common/image_transport/src/publisher.cpp@152:6::152:11",
      "src/image_common/image_transport/src/camera_subscriber.cpp@126:6::126:11",
      "src/image_common/image_transport/src/camera_subscriber.cpp@152:6::152:11",
      "src/image_common/image_transport/src/camera_subscriber.cpp@140:6::140:11",
      "src/image_common/image_transport/src/camera_subscriber.cpp@132:6::132:11",
      "src/image_common/image_transport/src/subscriber.cpp@128:6::128:11",
      "src/image_common/image_transport/src/subscriber.cpp@122:6::122:11",
      "src/image_common/image_transport/src/camera_publisher.cpp@149:6::149:11",
      "src/image_common/image_transport/src/camera_publisher.cpp@101:6::101:11",
      "src/image_common/image_transport/src/subscriber.cpp@134:6::134:11",
      "src/image_common/image_transport/src/camera_subscriber.cpp@146:6::146:11"
    ],
    "kind": "guard"
  },
  {
    "content": "!impl_ || !impl_->isValid()",
    "locations": [
      "src/image_common/image_transport/src/publisher.cpp@171:6::171:33",
      "src/image_common/image_transport/src/camera_publisher.cpp@113:6::113:33",
      "src/image_common/image_transport/src/camera_publisher.cpp@137:6::137:33",
      "src/image_common/image_transport/src/publisher.cpp@158:6::158:33",
      "src/image_common/image_transport/src/camera_publisher.cpp@125:6::125:33"
    ],
    "kind": "guard"
  },
  {
    "content": "impl_ && impl_->isValid()",
    "locations": [
      "src/image_common/image_transport/src/camera_publisher.cpp@94:6::94:31",
      "src/image_common/image_transport/src/publisher.cpp@146:6::146:31"
    ],
    "kind": "guard"
  },
  {
    "content": "!unadvertised_",
    "locations": [
      "src/image_common/image_transport/src/camera_publisher.cpp@59:8::59:22",
      "src/image_common/image_transport/src/publisher.cpp@75:8::75:22"
    ],
    "kind": "guard"
  },
  {
    "content": "image_received_ > threshold || info_received_ > threshold",
    "locations": [
      "src/image_common/image_transport/src/camera_subscriber.cpp@78:8::78:65"
    ],
    "kind": "guard"
  },
  {
    "content": "!unsubscribed_",
    "locations": [
      "src/image_common/image_transport/src/subscriber.cpp@62:8::62:22",
      "src/image_common/image_transport/src/camera_subscriber.cpp@68:8::68:22"
    ],
    "kind": "guard"
  },
  {
    "content": "user_cb",
    "locations": [
      "src/image_common/image_transport/src/publisher.cpp@208:6::208:13"
    ],
    "kind": "guard"
  },
  {
    "content": "ImplPtr impl = impl_wptr.lock()",
    "locations": [
      "src/image_common/image_transport/src/publisher.cpp@199:6::199:37"
    ],
    "kind": "guard"
  },
  {
    "content": "pub->getNumSubscribers() > 0",
    "locations": [
      "src/image_common/image_transport/src/publisher.cpp@177:8::177:36",
      "src/image_common/image_transport/src/publisher.cpp@164:8::164:36"
    ],
    "kind": "guard"
  },
  {
    "content": "blacklist.count(transport_name)",
    "locations": [
      "src/image_common/image_transport/src/publisher.cpp@122:8::122:39"
    ],
    "kind": "guard"
  },
  {
    "content": "impl_->publishers_.empty()",
    "locations": [
      "src/image_common/image_transport/src/publisher.cpp@139:6::139:32"
    ],
    "kind": "guard"
  },
  {
    "content": "data_size > 0",
    "locations": [
      "src/image_common/image_transport/src/raw_publisher.cpp@117:8::117:21"
    ],
    "kind": "guard"
  },
  {
    "content": "std::find(plugins.begin(), plugins.end(), plugin_name) != plugins.end()",
    "locations": [
      "src/image_common/image_transport/src/subscriber.cpp@99:8::99:79"
    ],
    "kind": "guard"
  },
  {
    "content": "found != std::string::npos",
    "locations": [
      "src/image_common/image_transport/src/subscriber.cpp@95:6::95:32"
    ],
    "kind": "guard"
  },
  {
    "content": "subscriber_",
    "locations": [
      "src/image_common/image_transport/src/subscriber.cpp@64:10::64:21"
    ],
    "kind": "guard"
  },
  {
    "content": "DepthTraits<T>::valid(depth)",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/disparity.cpp@176:10::176:38"
    ],
    "kind": "guard"
  },
  {
    "content": "depth_msg->encoding == enc::TYPE_16UC1",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/disparity.cpp@143:6::143:44",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzrgb.cpp@267:6::267:44",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyz.cpp@117:6::117:44"
    ],
    "kind": "guard"
  },
  {
    "content": "!sub_depth_image_.getSubscriber()",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/disparity.cpp@115:11::115:44",
      "src/image_pipeline/depth_image_proc/src/nodelets/register.cpp@127:11::127:44"
    ],
    "kind": "guard"
  },
  {
    "content": "pub_disparity_.getNumSubscribers() == 0",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/disparity.cpp@110:6::110:45"
    ],
    "kind": "guard"
  },
  {
    "content": "!sub_depth_",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyz.cpp@94:11::94:22",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyz_radial.cpp@148:10::148:21"
    ],
    "kind": "guard"
  },
  {
    "content": "pub_point_cloud_.getNumSubscribers() == 0",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi.cpp@120:6::120:47",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyz.cpp@90:6::90:47",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi_radial.cpp@173:5::173:46",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzrgb.cpp@135:6::135:47",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyz_radial.cpp@144:5::144:46"
    ],
    "kind": "guard"
  },
  {
    "content": "!DepthTraits<T>::valid(depth)",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzrgb.cpp@320:10::320:39",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi_radial.cpp@278:6::278:35",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyz_radial.cpp@217:6::217:35",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi.cpp@294:10::294:39"
    ],
    "kind": "guard"
  },
  {
    "content": "info_msg->D != D_ || info_msg->K != K_ || width_ != info_msg->width ||\n\t   height_ != info_msg->height",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi_radial.cpp@215:4::216:31",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyz_radial.cpp@171:4::172:31"
    ],
    "kind": "guard"
  },
  {
    "content": "radial",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi_radial.cpp@130:4::130:10",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyz_radial.cpp@110:4::110:10"
    ],
    "kind": "guard"
  },
  {
    "content": "(intensity_msg->encoding == enc::MONO8) || (intensity_msg->encoding == enc::MONO16)",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi.cpp@190:8::190:91"
    ],
    "kind": "guard"
  },
  {
    "content": "depth_msg->encoding == enc::TYPE_32FC1 &&\n      intensity_msg->encoding == enc::MONO16",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi.cpp@247:11::248:44"
    ],
    "kind": "guard"
  },
  {
    "content": "depth_msg->encoding == enc::TYPE_16UC1 && \n      intensity_msg->encoding == enc::MONO8",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi.cpp@232:6::233:43"
    ],
    "kind": "guard"
  },
  {
    "content": "intensity_msg->encoding != enc::MONO8 || intensity_msg->encoding != enc::MONO16",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi.cpp@202:6::202:85"
    ],
    "kind": "guard"
  },
  {
    "content": "depth_msg->width != intensity_msg->width || depth_msg->height != intensity_msg->height",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi.cpp@160:6::160:92"
    ],
    "kind": "guard"
  },
  {
    "content": "depth_msg->header.frame_id != intensity_msg_in->header.frame_id",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi.cpp@148:6::148:69"
    ],
    "kind": "guard"
  },
  {
    "content": "!sub_depth_.getSubscriber()",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi.cpp@126:11::126:38",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzrgb.cpp@141:11::141:38",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi_radial.cpp@179:10::179:37"
    ],
    "kind": "guard"
  },
  {
    "content": "intensity_msg->encoding == enc::MONO8",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi_radial.cpp@244:9::244:46"
    ],
    "kind": "guard"
  },
  {
    "content": "(rgb_msg->encoding == enc::RGB8) || (rgb_msg->encoding == enc::BGR8) || (rgb_msg->encoding == enc::MONO8)",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzrgb.cpp@205:8::205:113"
    ],
    "kind": "guard"
  },
  {
    "content": "rgb_msg->encoding == enc::MONO8",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzrgb.cpp@232:11::232:42"
    ],
    "kind": "guard"
  },
  {
    "content": "rgb_msg->encoding == enc::RGB8",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzrgb.cpp@218:6::218:36"
    ],
    "kind": "guard"
  },
  {
    "content": "depth_msg->width != rgb_msg->width || depth_msg->height != rgb_msg->height",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzrgb.cpp@175:6::175:80"
    ],
    "kind": "guard"
  },
  {
    "content": "depth_msg->header.frame_id != rgb_msg_in->header.frame_id",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzrgb.cpp@163:6::163:63"
    ],
    "kind": "guard"
  },
  {
    "content": "use_exact_sync",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzrgb.cpp@113:6::113:20"
    ],
    "kind": "guard"
  },
  {
    "content": "!DepthTraits<T>::valid(reg_depth) || reg_depth > new_depth",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/register.cpp@253:10::253:68"
    ],
    "kind": "guard"
  },
  {
    "content": "u_rgb < 0 || u_rgb >= (int)registered_msg->width ||\n          v_rgb < 0 || v_rgb >= (int)registered_msg->height",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/register.cpp@246:10::247:59"
    ],
    "kind": "guard"
  },
  {
    "content": "!DepthTraits<T>::valid(raw_depth)",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/register.cpp@225:10::225:43"
    ],
    "kind": "guard"
  },
  {
    "content": "depth_image_msg->encoding == enc::TYPE_16UC1",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/register.cpp@173:6::173:50"
    ],
    "kind": "guard"
  },
  {
    "content": "pub_registered_.getNumSubscribers() == 0",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/register.cpp@121:6::121:46"
    ],
    "kind": "guard"
  },
  {
    "content": "found",
    "locations": [
      "src/image_pipeline/image_proc/src/libimage_proc/advertisement_checker.cpp@62:8::62:13"
    ],
    "kind": "guard"
  },
  {
    "content": "topics_.empty()",
    "locations": [
      "src/image_pipeline/image_proc/src/libimage_proc/advertisement_checker.cpp@71:6::71:21"
    ],
    "kind": "guard"
  },
  {
    "content": "!ros::master::getTopics(topic_info)",
    "locations": [
      "src/image_pipeline/image_proc/src/libimage_proc/advertisement_checker.cpp@49:6::49:41"
    ],
    "kind": "guard"
  },
  {
    "content": "flags & COLOR_EITHER",
    "locations": [
      "src/image_pipeline/image_proc/src/libimage_proc/processor.cpp@99:8::99:28"
    ],
    "kind": "guard"
  },
  {
    "content": "flags & MONO_EITHER",
    "locations": [
      "src/image_pipeline/image_proc/src/libimage_proc/processor.cpp@85:8::85:27",
      "src/image_pipeline/image_proc/src/libimage_proc/processor.cpp@91:8::91:27"
    ],
    "kind": "guard"
  },
  {
    "content": "raw_encoding == enc::BAYER_GRBG8",
    "locations": [
      "src/image_pipeline/image_proc/src/libimage_proc/processor.cpp@76:13::76:45"
    ],
    "kind": "guard"
  },
  {
    "content": "raw_encoding == enc::BAYER_GBRG8",
    "locations": [
      "src/image_pipeline/image_proc/src/libimage_proc/processor.cpp@74:13::74:45"
    ],
    "kind": "guard"
  },
  {
    "content": "raw_encoding == enc::BAYER_BGGR8",
    "locations": [
      "src/image_pipeline/image_proc/src/libimage_proc/processor.cpp@72:13::72:45"
    ],
    "kind": "guard"
  },
  {
    "content": "raw_encoding == enc::BAYER_RGGB8",
    "locations": [
      "src/image_pipeline/image_proc/src/libimage_proc/processor.cpp@70:8::70:40"
    ],
    "kind": "guard"
  },
  {
    "content": "flags & RECT_COLOR",
    "locations": [
      "src/image_pipeline/image_proc/src/libimage_proc/processor.cpp@124:6::124:24"
    ],
    "kind": "guard"
  },
  {
    "content": "flags & RECT",
    "locations": [
      "src/image_pipeline/image_proc/src/libimage_proc/processor.cpp@122:6::122:18"
    ],
    "kind": "guard"
  },
  {
    "content": "raw_encoding == enc::TYPE_8UC3",
    "locations": [
      "src/image_pipeline/image_proc/src/libimage_proc/processor.cpp@105:11::105:41"
    ],
    "kind": "guard"
  },
  {
    "content": "raw_encoding == enc::MONO8",
    "locations": [
      "src/image_pipeline/image_proc/src/libimage_proc/processor.cpp@97:11::97:37"
    ],
    "kind": "guard"
  },
  {
    "content": "raw_encoding.find(\"bayer\") != std::string::npos",
    "locations": [
      "src/image_pipeline/image_proc/src/libimage_proc/processor.cpp@66:6::66:53"
    ],
    "kind": "guard"
  },
  {
    "content": "raw_encoding == enc::BGR8 || raw_encoding == enc::RGB8",
    "locations": [
      "src/image_pipeline/image_proc/src/libimage_proc/processor.cpp@53:6::53:60"
    ],
    "kind": "guard"
  },
  {
    "content": "!(flags & ALL)",
    "locations": [
      "src/image_pipeline/image_proc/src/libimage_proc/processor.cpp@48:6::48:20"
    ],
    "kind": "guard"
  },
  {
    "content": "config.interpolation == image_proc::CropDecimate_NN",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/crop_decimate.cpp@272:8::272:59"
    ],
    "kind": "guard"
  },
  {
    "content": "image_msg->encoding == sensor_msgs::image_encodings::BAYER_GBRG16",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/crop_decimate.cpp@250:13::250:78"
    ],
    "kind": "guard"
  },
  {
    "content": "image_msg->encoding == sensor_msgs::image_encodings::BAYER_RGGB16",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/crop_decimate.cpp@246:13::246:78"
    ],
    "kind": "guard"
  },
  {
    "content": "image_msg->encoding == sensor_msgs::image_encodings::BAYER_GBRG8",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/crop_decimate.cpp@242:13::242:77"
    ],
    "kind": "guard"
  },
  {
    "content": "image_msg->encoding == sensor_msgs::image_encodings::BAYER_RGGB8",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/crop_decimate.cpp@238:8::238:72"
    ],
    "kind": "guard"
  },
  {
    "content": "decimation_x % 2 != 0 || decimation_y % 2 != 0",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/crop_decimate.cpp@230:8::230:54"
    ],
    "kind": "guard"
  },
  {
    "content": "width != (int)image_msg->width || height != (int)image_msg->height",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/crop_decimate.cpp@333:6::333:72"
    ],
    "kind": "guard"
  },
  {
    "content": "decimation_x > 1 || decimation_y > 1",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/crop_decimate.cpp@268:6::268:42"
    ],
    "kind": "guard"
  },
  {
    "content": "decimation_x == 1               &&\n      decimation_y == 1               &&\n      config.x_offset == 0            &&\n      config.y_offset == 0            &&\n      width  == (int)image_msg->width &&\n      height == (int)image_msg->height",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/crop_decimate.cpp@208:6::213:38"
    ],
    "kind": "guard"
  },
  {
    "content": "width == 0 || width > max_width",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/crop_decimate.cpp@202:6::202:37"
    ],
    "kind": "guard"
  },
  {
    "content": "is_bayer",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/crop_decimate.cpp@188:6::188:14"
    ],
    "kind": "guard"
  },
  {
    "content": "!sub_",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/crop_decimate.cpp@112:11::112:16"
    ],
    "kind": "guard"
  },
  {
    "content": "pub_.getNumSubscribers() == 0",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/crop_decimate.cpp@110:6::110:35",
      "src/image_pipeline/image_proc/src/nodelets/crop_non_zero.cpp@77:6::77:35"
    ],
    "kind": "guard"
  },
  {
    "content": "raw_msg->encoding == enc::TYPE_8UC1",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/crop_non_zero.cpp@110:6::110:41"
    ],
    "kind": "guard"
  },
  {
    "content": "sensor_msgs::image_encodings::numChannels(raw_msg->encoding) != 1",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/crop_non_zero.cpp@102:5::102:70"
    ],
    "kind": "guard"
  },
  {
    "content": "!sub_raw_",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/crop_non_zero.cpp@81:11::81:20"
    ],
    "kind": "guard"
  },
  {
    "content": "algorithm == Debayer_VNG",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/debayer.cpp@230:12::230:36"
    ],
    "kind": "guard"
  },
  {
    "content": "raw_msg->encoding == enc::BAYER_GBRG8 ||\n                 raw_msg->encoding == enc::BAYER_GBRG16",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/debayer.cpp@223:17::224:55"
    ],
    "kind": "guard"
  },
  {
    "content": "raw_msg->encoding == enc::BAYER_RGGB8 ||\n            raw_msg->encoding == enc::BAYER_RGGB16",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/debayer.cpp@217:12::218:50"
    ],
    "kind": "guard"
  },
  {
    "content": "algorithm == Debayer_EdgeAware",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/debayer.cpp@207:14::207:44"
    ],
    "kind": "guard"
  },
  {
    "content": "raw_msg->encoding != enc::BAYER_GRBG8",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/debayer.cpp@199:12::199:49"
    ],
    "kind": "guard"
  },
  {
    "content": "algorithm == Debayer_EdgeAware ||\n          algorithm == Debayer_EdgeAwareWeighted",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/debayer.cpp@195:10::196:48"
    ],
    "kind": "guard"
  },
  {
    "content": "bit_depth == 8",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/debayer.cpp@141:14::141:28"
    ],
    "kind": "guard"
  },
  {
    "content": "(bit_depth != 8) && (bit_depth != 16)",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/debayer.cpp@130:10::130:47"
    ],
    "kind": "guard"
  },
  {
    "content": "enc::isMono(raw_msg->encoding)",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/debayer.cpp@159:6::159:36",
      "src/image_pipeline/image_proc/src/nodelets/debayer.cpp@126:8::126:38"
    ],
    "kind": "guard"
  },
  {
    "content": "raw_msg->encoding == enc::YUV422",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/debayer.cpp@238:11::238:43",
      "src/image_pipeline/image_proc/src/nodelets/debayer.cpp@120:6::120:38"
    ],
    "kind": "guard"
  },
  {
    "content": "enc::isBayer(raw_msg->encoding)",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/debayer.cpp@173:11::173:42"
    ],
    "kind": "guard"
  },
  {
    "content": "enc::isColor(raw_msg->encoding)",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/debayer.cpp@169:11::169:42"
    ],
    "kind": "guard"
  },
  {
    "content": "!pub_color_.getNumSubscribers()",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/debayer.cpp@156:6::156:37"
    ],
    "kind": "guard"
  },
  {
    "content": "pub_mono_.getNumSubscribers()",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/debayer.cpp@124:6::124:35"
    ],
    "kind": "guard"
  },
  {
    "content": "pub_mono_.getNumSubscribers() == 0 && pub_color_.getNumSubscribers() == 0",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/debayer.cpp@107:6::107:79"
    ],
    "kind": "guard"
  },
  {
    "content": "info_msg->D[i] != 0.0",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/rectify.cpp@128:8::128:29"
    ],
    "kind": "guard"
  },
  {
    "content": "zero_distortion",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/rectify.cpp@135:6::135:21"
    ],
    "kind": "guard"
  },
  {
    "content": "info_msg->K[0] == 0.0",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/rectify.cpp@117:6::117:27"
    ],
    "kind": "guard"
  },
  {
    "content": "!sub_camera_",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/rectify.cpp@106:11::106:23"
    ],
    "kind": "guard"
  },
  {
    "content": "pub_rect_.getNumSubscribers() == 0",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/rectify.cpp@104:6::104:40"
    ],
    "kind": "guard"
  },
  {
    "content": "config.use_scale",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/resize.cpp@117:6::117:22",
      "src/image_pipeline/image_proc/src/nodelets/resize.cpp@156:6::156:22"
    ],
    "kind": "guard"
  },
  {
    "content": "boost::recursive_mutex::scoped_lock",
    "locations": [
      "src/class_loader/src/class_loader.cpp@99:22::99:57"
    ],
    "kind": "transformer"
  },
  {
    "content": "meta_objs.at",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@633:35::633:47"
    ],
    "kind": "transformer"
  },
  {
    "content": "open_libraries.erase",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@586:16::586:36"
    ],
    "kind": "transformer"
  },
  {
    "content": "findLoadedLibrary",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@569:34::569:51",
      "src/class_loader/src/class_loader_core.cpp@335:32::335:49"
    ],
    "kind": "transformer"
  },
  {
    "content": "graveyard.erase",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@444:12::444:27"
    ],
    "kind": "transformer"
  },
  {
    "content": "all_meta_objs.at",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@385:40::385:56"
    ],
    "kind": "transformer"
  },
  {
    "content": "allMetaObjectsForLibrary",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@383:35::383:59"
    ],
    "kind": "transformer"
  },
  {
    "content": "allMetaObjectsForClassLoader",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@362:42::362:70"
    ],
    "kind": "transformer"
  },
  {
    "content": "isLibraryLoadedByAnybody",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@348:33::348:57"
    ],
    "kind": "transformer"
  },
  {
    "content": "allMetaObjects",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@186:28::186:42"
    ],
    "kind": "transformer"
  },
  {
    "content": "active_class_loaders_.find",
    "locations": [
      "src/class_loader/src/multi_library_class_loader.cpp@62:42::62:68",
      "src/class_loader/src/multi_library_class_loader.cpp@104:42::104:68"
    ],
    "kind": "transformer"
  },
  {
    "content": "storage_.find",
    "locations": [
      "src/geometry/tf/src/cache.cpp@251:52::251:65"
    ],
    "kind": "transformer"
  },
  {
    "content": "&",
    "locations": [
      "src/geometry/tf/src/cache.cpp@135:10::135:11",
      "src/geometry/tf/src/cache.cpp@110:10::110:11",
      "src/geometry2/tf2/src/cache.cpp@142:10::142:11",
      "src/geometry/tf/src/cache.cpp@140:10::140:11",
      "src/geometry2/tf2/src/cache.cpp@137:10::137:11"
    ],
    "kind": "transformer"
  },
  {
    "content": "&*",
    "locations": [
      "src/geometry/tf/src/cache.cpp@163:8::163:10",
      "src/geometry2/tf2/src/cache.cpp@170:8::170:10",
      "src/geometry/tf/src/cache.cpp@164:8::164:10"
    ],
    "kind": "transformer"
  },
  {
    "content": "storage_.upper_bound",
    "locations": [
      "src/geometry/tf/src/cache.cpp@160:44::160:64"
    ],
    "kind": "transformer"
  },
  {
    "content": "tf2_buffer_._lookupFrameNumber",
    "locations": [
      "src/geometry/tf/src/tf.cpp@419:29::419:59",
      "src/geometry/tf/src/tf.cpp@420:29::420:59"
    ],
    "kind": "transformer"
  },
  {
    "content": "strip_leading_slash",
    "locations": [
      "src/geometry/tf/src/tf.cpp@171:30::171:49"
    ],
    "kind": "transformer"
  },
  {
    "content": "lookupFrameNumber",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@814:29::814:46",
      "src/geometry2/tf2/src/buffer_core.cpp@1421:22::1421:39",
      "src/geometry2/tf2/src/buffer_core.cpp@157:22::157:39",
      "src/geometry2/tf2/src/buffer_core.cpp@851:29::851:46",
      "src/geometry2/tf2/src/buffer_core.cpp@1372:32::1372:49",
      "src/geometry2/tf2/src/buffer_core.cpp@852:28::852:45",
      "src/geometry2/tf2/src/buffer_core.cpp@1589:29::1589:46",
      "src/geometry2/tf2/src/buffer_core.cpp@850:29::850:46",
      "src/geometry2/tf2/src/buffer_core.cpp@813:29::813:46",
      "src/geometry2/tf2/src/buffer_core.cpp@1275:18::1275:35",
      "src/geometry2/tf2/src/buffer_core.cpp@605:33::605:50",
      "src/geometry2/tf2/src/buffer_core.cpp@1590:28::1590:45",
      "src/geometry2/tf2/src/buffer_core.cpp@1276:18::1276:35",
      "src/geometry2/tf2/src/buffer_core.cpp@1591:29::1591:46",
      "src/geometry2/tf2/src/buffer_core.cpp@1426:22::1426:39"
    ],
    "kind": "transformer"
  },
  {
    "content": "getFrame",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@267:34::267:42",
      "src/geometry2/tf2/src/buffer_core.cpp@1373:32::1373:40",
      "src/geometry2/tf2/src/buffer_core.cpp@1505:42::1505:50",
      "src/geometry2/tf2/src/buffer_core.cpp@1078:34::1078:42",
      "src/geometry2/tf2/src/buffer_core.cpp@965:38::965:46",
      "src/geometry2/tf2/src/buffer_core.cpp@402:34::402:42",
      "src/geometry2/tf2/src/buffer_core.cpp@1021:34::1021:42",
      "src/geometry2/tf2/src/buffer_core.cpp@349:34::349:42",
      "src/geometry2/tf2/src/buffer_core.cpp@1002:34::1002:42",
      "src/geometry2/tf2/src/buffer_core.cpp@606:36::606:44",
      "src/geometry2/tf2/src/buffer_core.cpp@1543:42::1543:50",
      "src/geometry2/tf2/src/buffer_core.cpp@1182:34::1182:42"
    ],
    "kind": "transformer"
  },
  {
    "content": "frame_authority_.find",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1196:63::1196:84",
      "src/geometry2/tf2/src/buffer_core.cpp@1515:61::1515:82"
    ],
    "kind": "transformer"
  },
  {
    "content": "transformable_callbacks_.find",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1450:47::1450:76"
    ],
    "kind": "transformer"
  },
  {
    "content": "lookupFrameString",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1382:11::1382:28"
    ],
    "kind": "transformer"
  },
  {
    "content": "CompactFrameID",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1180:26::1180:40",
      "src/geometry2/tf2/src/buffer_core.cpp@901:13::901:27",
      "src/geometry2/tf2/src/buffer_core.cpp@914:13::914:27"
    ],
    "kind": "transformer"
  },
  {
    "content": "frameIDs_.find",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@911:46::911:60",
      "src/geometry2/tf2/src/buffer_core.cpp@898:52::898:66"
    ],
    "kind": "transformer"
  },
  {
    "content": "lookupOrInsertFrameNumber",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@266:34::266:59"
    ],
    "kind": "transformer"
  },
  {
    "content": "stripSlash",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@214:29::214:39",
      "src/geometry2/tf2/src/buffer_core.cpp@215:28::215:38"
    ],
    "kind": "transformer"
  },
  {
    "content": "lookupTransform",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_server.cpp@152:27::152:42",
      "src/geometry2/tf2_ros/src/buffer_server.cpp@70:29::70:44"
    ],
    "kind": "transformer"
  },
  {
    "content": "active_goals_.erase",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_server.cpp@125:13::125:32",
      "src/geometry2/tf2_ros/src/buffer_server.cpp@106:13::106:32"
    ],
    "kind": "transformer"
  },
  {
    "content": "*",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@372:50::372:51",
      "src/navigation/map_server/src/image_loader.cpp@86:37::86:38",
      "src/navigation/map_server/src/image_loader.cpp@85:37::85:38",
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@192:52::192:53",
      "src/navigation/base_local_planner/src/point_grid.cpp@369:52::369:53",
      "src/navigation/map_server/src/image_loader.cpp@125:18::125:19",
      "src/geometry2/tf2_ros/src/transform_listener.cpp@113:38::113:39",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@503:44::503:45",
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@148:50::148:51"
    ],
    "kind": "transformer"
  },
  {
    "content": "node_.subscribe",
    "locations": [
      "src/geometry2/tf2_ros/src/transform_listener.cpp@83:34::83:49",
      "src/geometry2/tf2_ros/src/transform_listener.cpp@80:27::80:42"
    ],
    "kind": "transformer"
  },
  {
    "content": "output",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@112:36::112:42",
      "src/laser_geometry/src/laser_geometry.cpp@113:36::113:42"
    ],
    "kind": "transformer"
  },
  {
    "content": "sin",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_odom.cpp@241:26::241:29",
      "src/navigation/amcl/src/amcl/sensors/amcl_odom.cpp@150:26::150:29",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@258:14::258:17",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@235:31::235:34",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@76:13::76:16",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@58:13::58:16",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@304:16::304:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@259:14::259:17",
      "src/navigation/base_local_planner/src/footprint_helper.cpp@204:18::204:21",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@260:14::260:17",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@236:30::236:33",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@375:24::375:27",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@59:13::59:16",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@234:30::234:33",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_circle.cpp@123:13::123:16",
      "src/navigation/costmap_2d/src/footprint.cpp@112:18::112:21",
      "src/navigation/costmap_2d/src/footprint.cpp@128:18::128:21",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@75:13::75:16"
    ],
    "kind": "transformer"
  },
  {
    "content": "cos",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@60:13::60:16",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@57:13::57:16",
      "src/navigation/amcl/src/amcl/sensors/amcl_odom.cpp@240:26::240:29",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@74:13::74:16",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@259:29::259:32",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@303:16::303:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@260:30::260:33",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@236:14::236:17",
      "src/navigation/costmap_2d/src/footprint.cpp@111:18::111:21",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@234:14::234:17",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@77:13::77:16",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@258:29::258:32",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_circle.cpp@122:13::122:16",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@235:14::235:17",
      "src/navigation/costmap_2d/src/footprint.cpp@127:18::127:21",
      "src/navigation/amcl/src/amcl/sensors/amcl_odom.cpp@149:26::149:29",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@374:24::374:27",
      "src/navigation/base_local_planner/src/footprint_helper.cpp@203:18::203:21"
    ],
    "kind": "transformer"
  },
  {
    "content": "normalize",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_odom.cpp@49:6::49:15",
      "src/navigation/amcl/src/amcl_node.cpp@97:6::97:15",
      "src/navigation/amcl/src/amcl/sensors/amcl_odom.cpp@48:6::48:15",
      "src/navigation/amcl/src/amcl_node.cpp@96:6::96:15"
    ],
    "kind": "transformer"
  },
  {
    "content": "getYaw",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1487:27::1487:33"
    ],
    "kind": "transformer"
  },
  {
    "content": "tf::getYaw",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@300:17::300:27",
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@296:21::296:31",
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@554:15::554:25",
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@499:24::499:34",
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@321:21::321:31",
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@122:19::122:29",
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@158:19::158:29",
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@427:19::427:29",
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@95:21::95:31",
      "src/navigation/amcl/src/amcl_node.cpp@1191:23::1191:33",
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@126:15::126:25",
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@424:17::424:27",
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@212:24::212:34",
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@222:19::222:29"
    ],
    "kind": "transformer"
  },
  {
    "content": "convertMap",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@813:9::813:19"
    ],
    "kind": "transformer"
  },
  {
    "content": "ros::Duration",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@280:20::280:33",
      "src/navigation/amcl/src/amcl_node.cpp@485:23::485:36",
      "src/navigation/amcl/src/amcl_node.cpp@486:21::486:34",
      "src/navigation/amcl/src/amcl_node.cpp@453:26::453:39",
      "src/navigation/amcl/src/amcl_node.cpp@337:21::337:34"
    ],
    "kind": "transformer"
  },
  {
    "content": "global_plan.erase",
    "locations": [
      "src/navigation/base_local_planner/src/goal_functions.cpp@84:18::84:35"
    ],
    "kind": "transformer"
  },
  {
    "content": "plan.erase",
    "locations": [
      "src/navigation/base_local_planner/src/goal_functions.cpp@83:11::83:21"
    ],
    "kind": "transformer"
  },
  {
    "content": "LocalPlannerLimits",
    "locations": [
      "src/navigation/base_local_planner/src/local_planner_util.cpp@70:12::70:30"
    ],
    "kind": "transformer"
  },
  {
    "content": "pcl_conversions::toPCL",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@330:30::330:52",
      "src/navigation/base_local_planner/src/map_grid_visualizer.cpp@64:26::64:48",
      "src/navigation/navfn/src/navfn_ros.cpp@332:24::332:46"
    ],
    "kind": "transformer"
  },
  {
    "content": "pcl_conversions::fromPCL",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid_visualizer.cpp@62:30::62:54"
    ],
    "kind": "transformer"
  },
  {
    "content": "cell_points->erase",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@522:17::522:35",
      "src/navigation/base_local_planner/src/point_grid.cpp@426:17::426:35"
    ],
    "kind": "transformer"
  },
  {
    "content": "gen_->nextTrajectory",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@100:22::100:42"
    ],
    "kind": "transformer"
  },
  {
    "content": "score_function_p->scoreTrajectory",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@58:20::58:53"
    ],
    "kind": "transformer"
  },
  {
    "content": "costmap->getIndex",
    "locations": [
      "src/navigation/clear_costmap_recovery/src/clear_costmap_recovery.cpp@145:18::145:35"
    ],
    "kind": "transformer"
  },
  {
    "content": "boost::static_pointer_cast<costmap_2d::CostmapLayer>",
    "locations": [
      "src/navigation/clear_costmap_recovery/src/clear_costmap_recovery.cpp@118:16::118:68"
    ],
    "kind": "transformer"
  },
  {
    "content": "name.substr",
    "locations": [
      "src/navigation/clear_costmap_recovery/src/clear_costmap_recovery.cpp@113:15::113:26"
    ],
    "kind": "transformer"
  },
  {
    "content": "name.rfind",
    "locations": [
      "src/navigation/clear_costmap_recovery/src/clear_costmap_recovery.cpp@111:16::111:26"
    ],
    "kind": "transformer"
  },
  {
    "content": "cellDistance",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@115:27::115:39",
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@163:27::163:39",
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@374:29::374:41",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@569:39::569:51",
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@355:41::355:53"
    ],
    "kind": "transformer"
  },
  {
    "content": "computeCost",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@334:28::334:39"
    ],
    "kind": "transformer"
  },
  {
    "content": "tf::getPrefixParam",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@72:26::72:44",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@80:32::80:50",
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@89:17::89:35",
      "src/navigation/navfn/src/navfn_ros.cpp@82:19::82:37"
    ],
    "kind": "transformer"
  },
  {
    "content": "transform",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@332:12::332:21"
    ],
    "kind": "transformer"
  },
  {
    "content": "interpretValue",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@203:24::203:38",
      "src/navigation/costmap_2d/plugins/static_layer.cpp@233:24::233:38"
    ],
    "kind": "transformer"
  },
  {
    "content": "XmlRpc::XmlRpcValue",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@233:18::233:37",
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@234:18::234:37",
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@220:18::220:37",
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@219:18::219:37",
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@204:18::204:37",
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@256:16::256:35",
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@205:18::205:37",
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@255:16::255:35"
    ],
    "kind": "transformer"
  },
  {
    "content": "plugin_loader_.createInstance",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@124:40::124:69"
    ],
    "kind": "transformer"
  },
  {
    "content": "makeFootprintFromRadius",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@239:13::239:36"
    ],
    "kind": "transformer"
  },
  {
    "content": "strdup",
    "locations": [
      "src/navigation/map_server/src/main.cpp@151:31::151:37"
    ],
    "kind": "transformer"
  },
  {
    "content": "YAML::Load",
    "locations": [
      "src/yujin_ocs/yocs_cmd_vel_mux/src/cmd_vel_mux_nodelet.cpp@123:8::123:18",
      "src/image_common/camera_calibration_parsers/src/parse_yml.cpp@162:21::162:31",
      "src/navigation/map_server/src/main.cpp@84:25::84:35"
    ],
    "kind": "transformer"
  },
  {
    "content": "goalToGlobalFrame",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@746:17::746:34",
      "src/navigation/move_base/src/move_base.cpp@701:38::701:55",
      "src/navigation/move_base/src/move_base.cpp@784:15::784:32"
    ],
    "kind": "transformer"
  },
  {
    "content": "ros::Rate",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@732:12::732:21"
    ],
    "kind": "transformer"
  },
  {
    "content": "blp_loader_.createInstance",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@159:12::159:38",
      "src/navigation/move_base/src/move_base.cpp@304:14::304:40"
    ],
    "kind": "transformer"
  },
  {
    "content": "bgp_loader_.createInstance",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@131:17::131:43",
      "src/navigation/move_base/src/move_base.cpp@265:19::265:45"
    ],
    "kind": "transformer"
  },
  {
    "content": "fopen",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@1071:17::1071:22",
      "src/navigation/navfn/src/navfn.cpp@1083:11::1083:16",
      "src/navigation/navfn/src/read_pgm_costmap.cpp@78:12::78:17"
    ],
    "kind": "transformer"
  },
  {
    "content": "calcPath",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@333:16::333:24",
      "src/navigation/navfn/src/navfn.cpp@304:16::304:24"
    ],
    "kind": "transformer"
  },
  {
    "content": "nav->calcPath",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@84:16::84:29"
    ],
    "kind": "transformer"
  },
  {
    "content": "getPointPotential",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@111:27::111:44"
    ],
    "kind": "transformer"
  },
  {
    "content": "numBits",
    "locations": [
      "src/navigation/voxel_grid/src/voxel_grid.cpp@151:24::151:31"
    ],
    "kind": "transformer"
  },
  {
    "content": "s.F.M.Inverse",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@99:18::99:31",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@104:18::104:31"
    ],
    "kind": "transformer"
  },
  {
    "content": "segment.pose",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@80:14::80:26"
    ],
    "kind": "transformer"
  },
  {
    "content": "chain.getSegment",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@77:33::77:49",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainiksolverpos_lma.cpp@119:27::119:43",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainiksolverpos_lma.cpp@135:27::135:43"
    ],
    "kind": "transformer"
  },
  {
    "content": "VectorXd::Ones",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@43:11::43:25",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@42:9::42:23"
    ],
    "kind": "transformer"
  },
  {
    "content": "original_Aii.cwiseProduct",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainiksolverpos_lma.cpp@203:8::203:33"
    ],
    "kind": "transformer"
  },
  {
    "content": "sqrt",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@363:13::363:17",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@364:13::364:17",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@365:13::365:17",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@380:15::380:19"
    ],
    "kind": "transformer"
  },
  {
    "content": "atan2",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@384:12::384:17"
    ],
    "kind": "transformer"
  },
  {
    "content": "Rotation::GetRotAngle",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@336:15::336:36"
    ],
    "kind": "transformer"
  },
  {
    "content": "Vector",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@144:20::144:26"
    ],
    "kind": "transformer"
  },
  {
    "content": "fabs",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@116:15::116:19",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@392:25::392:29",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@115:15::115:19"
    ],
    "kind": "transformer"
  },
  {
    "content": "Vector2",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@101:20::101:27"
    ],
    "kind": "transformer"
  },
  {
    "content": "p",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@46:23::46:24"
    ],
    "kind": "transformer"
  },
  {
    "content": "Rotation::Rot",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@238:12::238:25"
    ],
    "kind": "transformer"
  },
  {
    "content": "Rotation",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_circle.cpp@74:23::74:31"
    ],
    "kind": "transformer"
  },
  {
    "content": "Lookup",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_composite.cpp@103:5::103:11",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_composite.cpp@108:5::108:11",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_composite.cpp@98:5::98:11",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_composite.cpp@148:11::148:17"
    ],
    "kind": "transformer"
  },
  {
    "content": "line2->Pos",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@116:28::116:38"
    ],
    "kind": "transformer"
  },
  {
    "content": "Map<Vector3d>",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/rigidbodyinertia.cpp@64:27::64:40",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/rigidbodyinertia.cpp@62:25::62:38",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/rigidbodyinertia.cpp@91:25::91:38",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/rigidbodyinertia.cpp@92:27::92:40"
    ],
    "kind": "transformer"
  },
  {
    "content": "Map<Matrix3d>",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/rigidbodyinertia.cpp@67:21::67:34"
    ],
    "kind": "transformer"
  },
  {
    "content": "R_start_end.GetRotAngle",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/rotational_interpolation_sa.cpp@56:9::56:32"
    ],
    "kind": "transformer"
  },
  {
    "content": "segments.find",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@56:34::56:47"
    ],
    "kind": "transformer"
  },
  {
    "content": "GetTreeElementParent",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/treejnttojacsolver.cpp@60:13::60:33",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/treefksolverpos_recursive.cpp@59:50::59:70"
    ],
    "kind": "transformer"
  },
  {
    "content": "tree.getSegment",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/treefksolverpos_recursive.cpp@35:34::35:49"
    ],
    "kind": "transformer"
  },
  {
    "content": "T_total.M.Inverse",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/treejnttojacsolver.cpp@55:22::55:39"
    ],
    "kind": "transformer"
  },
  {
    "content": "GetTreeElementQNr",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/treejnttojacsolver.cpp@42:28::42:45"
    ],
    "kind": "transformer"
  },
  {
    "content": "::sqrt",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@74:7::74:13"
    ],
    "kind": "transformer"
  },
  {
    "content": "sign",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@106:19::106:23",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@84:19::84:23",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@65:18::65:22"
    ],
    "kind": "transformer"
  },
  {
    "content": "v*v/2.0/",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@129:14::129:22",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@125:14::125:22",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@113:14::113:22",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@118:14::118:22"
    ],
    "kind": "transformer"
  },
  {
    "content": "path.find",
    "locations": [
      "src/ros/roslib/src/package.cpp@94:24::94:33"
    ],
    "kind": "transformer"
  },
  {
    "content": "command",
    "locations": [
      "src/ros/roslib/src/package.cpp@73:27::73:34"
    ],
    "kind": "transformer"
  },
  {
    "content": "rp.run",
    "locations": [
      "src/ros/roslib/src/package.cpp@55:10::55:16"
    ],
    "kind": "transformer"
  },
  {
    "content": "deps.erase",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@335:15::335:25"
    ],
    "kind": "transformer"
  },
  {
    "content": "parseURDF",
    "locations": [
      "src/urdf/urdf/src/model.cpp@178:12::178:21"
    ],
    "kind": "transformer"
  },
  {
    "content": "instance->parse",
    "locations": [
      "src/urdf/urdf/src/model.cpp@164:13::164:28"
    ],
    "kind": "transformer"
  },
  {
    "content": "PARSER_PLUGIN_LOADER->createInstance",
    "locations": [
      "src/urdf/urdf/src/model.cpp@162:50::162:86"
    ],
    "kind": "transformer"
  },
  {
    "content": "doc.FindValue",
    "locations": [
      "src/yujin_ocs/yocs_cmd_vel_mux/src/cmd_vel_mux_nodelet.cpp@138:27::138:40"
    ],
    "kind": "transformer"
  },
  {
    "content": "unresolvedName",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@316:23::316:37"
    ],
    "kind": "transformer"
  },
  {
    "content": "name.find_last_of",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@307:17::307:34"
    ],
    "kind": "transformer"
  },
  {
    "content": "static_cast<RobotFeedbackType>",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@260:19::260:49"
    ],
    "kind": "transformer"
  },
  {
    "content": "median",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@81:18::81:24"
    ],
    "kind": "transformer"
  },
  {
    "content": "loadYVels",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory_planner_ros.cpp@233:35::233:44"
    ],
    "kind": "transformer"
  },
  {
    "content": "system",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@519:15::519:21"
    ],
    "kind": "transformer"
  },
  {
    "content": "filename.rfind",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@500:22::500:36"
    ],
    "kind": "transformer"
  },
  {
    "content": "parseURL",
    "locations": [
      "src/image_common/camera_info_manager/src/camera_info_manager.cpp@216:24::216:32"
    ],
    "kind": "transformer"
  },
  {
    "content": "vel_trans*cos",
    "locations": [
      "src/navigation/robot_pose_ekf/src/nonlinearanalyticconditionalgaussianodo.cpp@61:10::61:23"
    ],
    "kind": "transformer"
  },
  {
    "content": "ConditionalArgumentGet",
    "locations": [
      "src/navigation/robot_pose_ekf/src/nonlinearanalyticconditionalgaussianodo.cpp@45:25::45:47",
      "src/navigation/robot_pose_ekf/src/nonlinearanalyticconditionalgaussianodo.cpp@46:24::46:46"
    ],
    "kind": "transformer"
  },
  {
    "content": "covar",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@399:35::399:40"
    ],
    "kind": "transformer"
  },
  {
    "content": "imu_rel",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@233:28::233:35"
    ],
    "kind": "transformer"
  },
  {
    "content": "odom_rel",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@206:29::206:37"
    ],
    "kind": "transformer"
  },
  {
    "content": "pow",
    "locations": [
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@255:30::255:33",
      "src/navigation/robot_pose_ekf/src/odom_estimation.cpp@137:29::137:32",
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@256:30::256:33",
      "src/navigation/robot_pose_ekf/src/odom_estimation_node.cpp@257:30::257:33"
    ],
    "kind": "transformer"
  },
  {
    "content": "getCameraInfoTopic",
    "locations": [
      "src/image_common/image_transport/src/camera_publisher.cpp@84:27::84:45",
      "src/image_common/image_transport/src/camera_subscriber.cpp@109:27::109:45"
    ],
    "kind": "transformer"
  },
  {
    "content": "info_nh.resolveName",
    "locations": [
      "src/image_common/image_transport/src/camera_subscriber.cpp@108:28::108:47",
      "src/image_common/image_transport/src/camera_publisher.cpp@83:28::83:47"
    ],
    "kind": "transformer"
  },
  {
    "content": "impl_->sub_loader_->createInstance",
    "locations": [
      "src/image_common/image_transport/src/image_transport.cpp@137:65::137:99"
    ],
    "kind": "transformer"
  },
  {
    "content": "loader->createInstance",
    "locations": [
      "src/image_common/image_transport/src/subscriber.cpp@84:25::84:47",
      "src/image_common/image_transport/src/publisher.cpp@128:47::128:69"
    ],
    "kind": "transformer"
  },
  {
    "content": "nh.resolveName",
    "locations": [
      "src/image_common/image_transport/src/publisher.cpp@109:23::109:37"
    ],
    "kind": "transformer"
  },
  {
    "content": "SubscriberPlugin::getLookupName",
    "locations": [
      "src/image_common/image_transport/src/subscriber.cpp@97:30::97:61",
      "src/image_common/image_transport/src/subscriber.cpp@82:28::82:59"
    ],
    "kind": "transformer"
  },
  {
    "content": "clean_topic.substr",
    "locations": [
      "src/image_common/image_transport/src/subscriber.cpp@96:28::96:46"
    ],
    "kind": "transformer"
  },
  {
    "content": "clean_topic.rfind",
    "locations": [
      "src/image_common/image_transport/src/subscriber.cpp@94:17::94:34"
    ],
    "kind": "transformer"
  },
  {
    "content": "ros::names::clean",
    "locations": [
      "src/image_common/image_transport/src/subscriber.cpp@93:28::93:45"
    ],
    "kind": "transformer"
  },
  {
    "content": "reinterpret_cast<float*>",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/disparity.cpp@170:21::170:45"
    ],
    "kind": "transformer"
  },
  {
    "content": "DepthTraits<T>::toMeters",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi_radial.cpp@262:23::262:47",
      "src/image_pipeline/depth_image_proc/src/nodelets/register.cpp@228:21::228:45",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzrgb.cpp@329:18::329:42",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzrgb.cpp@295:24::295:48",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi.cpp@271:24::271:48",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyz_radial.cpp@202:23::202:47",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi.cpp@303:18::303:42",
      "src/image_pipeline/depth_image_proc/src/nodelets/disparity.cpp@165:23::165:47"
    ],
    "kind": "transformer"
  },
  {
    "content": "cvPoint",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi_radial.cpp@287:12::287:19",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi_radial.cpp@285:12::285:19",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyz_radial.cpp@226:12::226:19",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyz_radial.cpp@225:12::225:19",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyz_radial.cpp@224:12::224:19",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi_radial.cpp@286:12::286:19"
    ],
    "kind": "transformer"
  },
  {
    "content": "sensorPoints.reshape",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi_radial.cpp@122:16::122:36",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyz_radial.cpp@102:16::102:36"
    ],
    "kind": "transformer"
  },
  {
    "content": "intensity_msg->step/sizeof",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi_radial.cpp@299:24::299:50"
    ],
    "kind": "transformer"
  },
  {
    "content": "topics_.erase",
    "locations": [
      "src/image_pipeline/image_proc/src/libimage_proc/advertisement_checker.cpp@63:17::63:30"
    ],
    "kind": "transformer"
  },
  {
    "content": "boost::make_shared<sensor_msgs::CameraInfo>",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/crop_decimate.cpp@323:40::323:83"
    ],
    "kind": "transformer"
  },
  {
    "content": "toCvShare",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/crop_decimate.cpp@220:27::220:36"
    ],
    "kind": "transformer"
  },
  {
    "content": "sensor_msgs::image_encodings::isBayer",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/crop_decimate.cpp@187:18::187:55"
    ],
    "kind": "transformer"
  },
  {
    "content": "cv_bridge::toCvCopy",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/resize.cpp@154:33::154:52",
      "src/image_pipeline/image_proc/src/nodelets/crop_non_zero.cpp@93:13::93:32"
    ],
    "kind": "transformer"
  },
  {
    "content": "cv_ptr->image",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/crop_non_zero.cpp@137:21::137:34"
    ],
    "kind": "transformer"
  },
  {
    "content": "enc::bitDepth",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/debayer.cpp@118:18::118:31"
    ],
    "kind": "transformer"
  },
  {
    "content": "loadLibrary",
    "locations": [
      "src/class_loader/src/class_loader.cpp@59:39::60:15"
    ],
    "kind": "void-call"
  },
  {
    "content": "shutdownAllClassLoaders",
    "locations": [
      "src/class_loader/src/multi_library_class_loader.cpp@44:1::45:25"
    ],
    "kind": "void-call"
  },
  {
    "content": "storage_.clear",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@271:1::272:16",
      "src/geometry/tf/src/cache.cpp@265:1::266:16"
    ],
    "kind": "void-call"
  },
  {
    "content": "ROS_BREAK",
    "locations": [
      "src/geometry/tf/src/cache.cpp@218:3::219:13"
    ],
    "kind": "void-call"
  },
  {
    "content": "tf2_buffer_.clear",
    "locations": [
      "src/geometry/tf/src/tf.cpp@224:1::225:19"
    ],
    "kind": "void-call"
  },
  {
    "content": "source_frame_chain.pop_back",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1633:3::1634:31"
    ],
    "kind": "void-call"
  },
  {
    "content": "vec.clear",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1387:1::1388:11"
    ],
    "kind": "void-call"
  },
  {
    "content": "storage_.pop_back",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@308:3::309:21"
    ],
    "kind": "void-call"
  },
  {
    "content": "errstr->clear",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer.cpp@151:5::152:19",
      "src/geometry2/tf2_ros/src/buffer.cpp@122:5::123:19",
      "src/geometry2/tf2_ros/src/buffer_client.cpp@143:8::144:21",
      "src/geometry2/tf2_ros/src/buffer_client.cpp@163:7::164:21"
    ],
    "kind": "void-call"
  },
  {
    "content": "d.sleep",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer.cpp@94:3::95:13"
    ],
    "kind": "void-call"
  },
  {
    "content": "server_.start",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_server.cpp@218:3::219:17"
    ],
    "kind": "void-call"
  },
  {
    "content": "dedicated_listener_thread_->join",
    "locations": [
      "src/geometry2/tf2_ros/src/transform_listener.cpp@64:3::65:36"
    ],
    "kind": "void-call"
  },
  {
    "content": "this->savePoseToServer",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1407:5::1408:28"
    ],
    "kind": "void-call"
  },
  {
    "content": "bag_scan_period_.sleep",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@663:7::664:30"
    ],
    "kind": "void-call"
  },
  {
    "content": "requestMap",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@443:10::444:14"
    ],
    "kind": "void-call"
  },
  {
    "content": "transformed_plan.clear",
    "locations": [
      "src/navigation/base_local_planner/src/goal_functions.cpp@94:65::95:26"
    ],
    "kind": "void-call"
  },
  {
    "content": "commonInit",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@47:3::48:14"
    ],
    "kind": "void-call"
  },
  {
    "content": "map_.resetPathDist",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid_cost_function.cpp@59:37::60:20"
    ],
    "kind": "void-call"
  },
  {
    "content": "odom_sub_.shutdown",
    "locations": [
      "src/navigation/base_local_planner/src/odometry_helper_ros.cpp@92:5::93:24"
    ],
    "kind": "void-call"
  },
  {
    "content": "resetOscillationFlags",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@79:49::80:25"
    ],
    "kind": "void-call"
  },
  {
    "content": "points.clear",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@178:156::179:16"
    ],
    "kind": "void-call"
  },
  {
    "content": "x_pts_.clear",
    "locations": [
      "src/navigation/base_local_planner/src/trajectory.cpp@65:33::66:16"
    ],
    "kind": "void-call"
  },
  {
    "content": "deleteKernels",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@311:3::312:17"
    ],
    "kind": "void-call"
  },
  {
    "content": "dsrv_->clearCallback",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@86:23::87:26"
    ],
    "kind": "void-call"
  },
  {
    "content": "deactivate",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@103:1::104:12",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@613:1::614:14"
    ],
    "kind": "void-call"
  },
  {
    "content": "clearing_buffers_[i]->lock",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@487:3::488:30"
    ],
    "kind": "void-call"
  },
  {
    "content": "marking_buffers_[i]->lock",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@471:3::472:29"
    ],
    "kind": "void-call"
  },
  {
    "content": "onInitialize",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@244:1::245:14",
      "src/navigation/costmap_2d/plugins/static_layer.cpp@262:3::263:16"
    ],
    "kind": "void-call"
  },
  {
    "content": "map_sub_.shutdown",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@249:1::250:19"
    ],
    "kind": "void-call"
  },
  {
    "content": "ros::spinOnce",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@88:3::89:17",
      "src/navigation/costmap_2d/plugins/static_layer.cpp@94:5::95:19"
    ],
    "kind": "void-call"
  },
  {
    "content": "clearing_endpoints_.points.clear",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@288:3::289:36"
    ],
    "kind": "void-call"
  },
  {
    "content": "Costmap2D::resetMaps",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@111:1::112:22"
    ],
    "kind": "void-call"
  },
  {
    "content": "ObstacleLayer::matchSize",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@96:1::97:26"
    ],
    "kind": "void-call"
  },
  {
    "content": "ObstacleLayer::onInitialize",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@56:1::57:29"
    ],
    "kind": "void-call"
  },
  {
    "content": "deleteMaps",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@176:1::177:12"
    ],
    "kind": "void-call"
  },
  {
    "content": "prepareGrid",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_publisher.cpp@135:3::136:15",
      "src/navigation/costmap_2d/src/costmap_2d_publisher.cpp@84:1::85:13"
    ],
    "kind": "void-call"
  },
  {
    "content": "global_pose.setIdentity",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@508:1::509:25"
    ],
    "kind": "void-call"
  },
  {
    "content": "publisher_->publishCostmap",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@404:7::405:34"
    ],
    "kind": "void-call"
  },
  {
    "content": "map_update_thread_->join",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@180:3::181:28"
    ],
    "kind": "void-call"
  },
  {
    "content": "plugins_.pop_back",
    "locations": [
      "src/navigation/costmap_2d/src/layered_costmap.cpp@62:3::63:21"
    ],
    "kind": "void-call"
  },
  {
    "content": "drive_velocities.setIdentity",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@360:33::361:34",
      "src/navigation/base_local_planner/src/trajectory_planner.cpp@978:23::979:34"
    ],
    "kind": "void-call"
  },
  {
    "content": "oscillation_costs_.resetOscillationFlags",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@204:93::205:44",
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@216:35::217:44"
    ],
    "kind": "void-call"
  },
  {
    "content": "recovery_behaviors_.clear",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1139:48::1140:29",
      "src/navigation/move_base/src/move_base.cpp@487:24::488:29"
    ],
    "kind": "void-call"
  },
  {
    "content": "publishZeroVelocity",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@947:9::948:29"
    ],
    "kind": "void-call"
  },
  {
    "content": "loadDefaultRecoveryBehaviors",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@186:43::187:34"
    ],
    "kind": "void-call"
  },
  {
    "content": "reset",
    "locations": [
      "src/navigation/voxel_grid/src/voxel_grid.cpp@65:68::66:11"
    ],
    "kind": "void-call"
  },
  {
    "content": "Destroy",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/trajectory_composite.cpp@106:51::107:15"
    ],
    "kind": "void-call"
  },
  {
    "content": "segments.clear",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@44:39::45:18",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@34:28::35:18"
    ],
    "kind": "void-call"
  },
  {
    "content": "cam_info.D.clear",
    "locations": [
      "src/image_common/camera_calibration_parsers/src/parse_ini.cpp@157:1::158:18"
    ],
    "kind": "void-call"
  },
  {
    "content": "array.data.setZero",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/jntarray.cpp@109:5::110:26"
    ],
    "kind": "void-call"
  },
  {
    "content": "data.setZero",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/jntarray.cpp@34:5::35:20"
    ],
    "kind": "void-call"
  },
  {
    "content": "impl_->shutdown",
    "locations": [
      "src/image_common/image_transport/src/publisher.cpp@184:14::185:19",
      "src/image_common/image_transport/src/camera_publisher.cpp@149:14::150:19"
    ],
    "kind": "void-call"
  },
  {
    "content": "shutdown",
    "locations": [
      "src/image_common/image_transport/src/camera_publisher.cpp@48:3::49:12",
      "src/image_common/image_transport/src/subscriber.cpp@51:3::52:12",
      "src/image_common/image_transport/src/publisher.cpp@51:3::52:12",
      "src/image_common/image_transport/src/camera_subscriber.cpp@57:3::58:12"
    ],
    "kind": "void-call"
  },
  {
    "content": "sub_depth_image_.unsubscribe",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/register.cpp@122:3::123:32",
      "src/image_pipeline/depth_image_proc/src/nodelets/disparity.cpp@111:3::112:32"
    ],
    "kind": "void-call"
  },
  {
    "content": "sub_depth_.shutdown",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyz_radial.cpp@145:2::146:24",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyz.cpp@91:3::92:23"
    ],
    "kind": "void-call"
  },
  {
    "content": "sub_depth_.unsubscribe",
    "locations": [
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi_radial.cpp@174:2::175:27",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzi.cpp@121:3::122:26",
      "src/image_pipeline/depth_image_proc/src/nodelets/point_cloud_xyzrgb.cpp@136:3::137:26"
    ],
    "kind": "void-call"
  },
  {
    "content": "timer_.stop",
    "locations": [
      "src/image_pipeline/image_proc/src/libimage_proc/advertisement_checker.cpp@88:1::89:13"
    ],
    "kind": "void-call"
  },
  {
    "content": "topics_.clear",
    "locations": [
      "src/image_pipeline/image_proc/src/libimage_proc/advertisement_checker.cpp@76:1::77:15"
    ],
    "kind": "void-call"
  },
  {
    "content": "sub_raw_.shutdown",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/crop_non_zero.cpp@78:3::79:21"
    ],
    "kind": "void-call"
  },
  {
    "content": "sub_info_.shutdown",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/resize.cpp@100:1::101:20"
    ],
    "kind": "void-call"
  },
  {
    "content": "nodelet_topic_tools::NodeletLazy::onInit",
    "locations": [
      "src/image_pipeline/image_proc/src/nodelets/resize.cpp@74:1::75:42"
    ],
    "kind": "void-call"
  }
]