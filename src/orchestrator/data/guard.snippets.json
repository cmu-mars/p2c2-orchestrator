[
  {
    "content": "timeout != ros::Duration(0, 0) && time_left <= ros::Duration(0, 0)",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@268:8::268:75"
    ]
  },
  {
    "content": "isServerConnected()",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@256:6::256:25"
    ]
  },
  {
    "content": "timeout < ros::Duration(0, 0)",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@248:6::248:35"
    ]
  },
  {
    "content": "feedback_sub_.getNumPublishers() == 0",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@227:6::227:43"
    ]
  },
  {
    "content": "goalSubscribers_.find(status_caller_id_) == goalSubscribers_.end()",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@211:6::211:72"
    ]
  },
  {
    "content": "!status_received_",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@206:6::206:23"
    ]
  },
  {
    "content": "status_caller_id_ != cur_status_caller_id",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@182:8::182:49"
    ]
  },
  {
    "content": "status_received_",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@181:6::181:22"
    ]
  },
  {
    "content": "cancelSubscribers_[pub.getSubscriberName()] == 0",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@154:8::154:56"
    ]
  },
  {
    "content": "it == cancelSubscribers_.end()",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@146:6::146:36"
    ]
  },
  {
    "content": "cancelSubscribers_.find(pub.getSubscriberName()) == cancelSubscribers_.end()",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@123:6::123:82"
    ]
  },
  {
    "content": "goalSubscribers_[pub.getSubscriberName()] == 0",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@96:8::96:54"
    ]
  },
  {
    "content": "it == goalSubscribers_.end()",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@88:6::88:34"
    ]
  },
  {
    "content": "goalSubscribers_.find(pub.getSubscriberName()) == goalSubscribers_.end()",
    "locations": [
      "src/actionlib/src/connection_monitor.cpp@66:6::66:78"
    ]
  },
  {
    "content": "b->on_broken_",
    "locations": [
      "src/bond_core/bondcpp/src/bond.cpp@402:6::402:19"
    ]
  },
  {
    "content": "b->on_formed_",
    "locations": [
      "src/bond_core/bondcpp/src/bond.cpp@387:6::387:19"
    ]
  },
  {
    "content": "sm_.getState().getId() == SM::WaitingForSister.getId() ||\n      sm_.getState().getId() == SM::Alive.getId()",
    "locations": [
      "src/bond_core/bondcpp/src/bond.cpp@343:6::344:49"
    ]
  },
  {
    "content": "sisterDiedFirst_",
    "locations": [
      "src/bond_core/bondcpp/src/bond.cpp@331:12::331:28"
    ]
  },
  {
    "content": "msg->active",
    "locations": [
      "src/bond_core/bondcpp/src/bond.cpp@325:10::325:21"
    ]
  },
  {
    "content": "sister_instance_id_ != msg->instance_id",
    "locations": [
      "src/bond_core/bondcpp/src/bond.cpp@317:10::317:49"
    ]
  },
  {
    "content": "sister_instance_id_.empty()",
    "locations": [
      "src/bond_core/bondcpp/src/bond.cpp@314:10::314:37"
    ]
  },
  {
    "content": "msg->id == id_ && msg->instance_id != instance_id_",
    "locations": [
      "src/bond_core/bondcpp/src/bond.cpp@310:6::310:56"
    ]
  },
  {
    "content": "disable_heartbeat_timeout",
    "locations": [
      "src/bond_core/bondcpp/src/bond.cpp@286:6::286:31"
    ]
  },
  {
    "content": "sm_.getState().getId() != SM::Dead.getId()",
    "locations": [
      "src/bond_core/bondcpp/src/bond.cpp@264:8::264:50"
    ]
  },
  {
    "content": "timeout >= ros::WallDuration(0.0)",
    "locations": [
      "src/bond_core/bondcpp/src/bond.cpp@241:8::241:41",
      "src/bond_core/bondcpp/src/bond.cpp@213:8::213:41"
    ]
  },
  {
    "content": "!ros::ok()",
    "locations": [
      "src/bond_core/bondcpp/src/bond.cpp@236:8::236:18",
      "src/navigation/amcl/src/amcl_node.cpp@638:8::638:18",
      "src/bond_core/bondcpp/src/bond.cpp@208:8::208:18"
    ]
  },
  {
    "content": "started_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/timer.cpp@67:6::67:14",
      "src/bond_core/bondcpp/src/bond.cpp@122:6::122:14",
      "src/bond_core/bondcpp/src/bond.cpp@133:6::133:14",
      "src/bond_core/bondcpp/src/bond.cpp@144:6::144:14",
      "src/bond_core/bondcpp/src/bond.cpp@165:6::165:14",
      "src/ros_comm/roscpp/src/libros/wall_timer.cpp@61:6::61:14",
      "src/bond_core/bondcpp/src/bond.cpp@155:6::155:14"
    ]
  },
  {
    "content": "!waitUntilBroken(ros::Duration(1.0))",
    "locations": [
      "src/bond_core/bondcpp/src/bond.cpp@99:6::99:42"
    ]
  },
  {
    "content": "!started_",
    "locations": [
      "src/bond_core/bondcpp/src/bond.cpp@94:6::94:15",
      "src/ros_comm/roscpp/src/libros/wall_timer.cpp@47:6::47:15",
      "src/ros_comm/roscpp/src/libros/timer.cpp@52:6::52:15"
    ]
  },
  {
    "content": "on_timeout_",
    "locations": [
      "src/bond_core/bondcpp/src/timeout.cpp@83:6::83:17"
    ]
  },
  {
    "content": "load_ref_count_ < 0",
    "locations": [
      "src/class_loader/src/class_loader.cpp@113:15::113:34"
    ]
  },
  {
    "content": "0 == load_ref_count_",
    "locations": [
      "src/class_loader/src/class_loader.cpp@111:8::111:28"
    ]
  },
  {
    "content": "plugin_ref_count_ > 0",
    "locations": [
      "src/class_loader/src/class_loader.cpp@102:6::102:27"
    ]
  },
  {
    "content": "lock_plugin_ref_count",
    "locations": [
      "src/class_loader/src/class_loader.cpp@98:6::98:27"
    ]
  },
  {
    "content": "!isOnDemandLoadUnloadEnabled()",
    "locations": [
      "src/class_loader/src/class_loader.cpp@59:6::59:36"
    ]
  },
  {
    "content": "!areThereAnyExistingMetaObjectsForLibrary(library_path)",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@577:12::577:67"
    ]
  },
  {
    "content": "itr != open_libraries.end()",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@337:6::337:33",
      "src/class_loader/src/class_loader_core.cpp@570:8::570:35"
    ]
  },
  {
    "content": "hasANonPurePluginLibraryBeenOpened()",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@552:6::552:42"
    ]
  },
  {
    "content": "0 == num_lib_objs",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@524:6::524:23"
    ]
  },
  {
    "content": "isLibraryLoadedByAnybody(library_path)",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@479:6::479:44"
    ]
  },
  {
    "content": "is_address_in_graveyard_same_as_global_factory_map",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@446:12::446:62"
    ]
  },
  {
    "content": "delete_objs",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@445:10::445:21"
    ]
  },
  {
    "content": "obj->getAssociatedLibraryPath() == library_path",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@434:8::434:55",
      "src/class_loader/src/class_loader_core.cpp@405:8::405:55"
    ]
  },
  {
    "content": "std::find(all_libs.begin(), all_libs.end(), lib_path) == all_libs.end()",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@366:8::366:79"
    ]
  },
  {
    "content": "itr->first == library_path",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@322:8::322:34"
    ]
  },
  {
    "content": "!meta_obj->isOwnedByAnybody()",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@259:10::259:39"
    ]
  },
  {
    "content": "meta_obj->getAssociatedLibraryPath() == library_path && meta_obj->isOwnedBy(loader)",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@257:8::257:91"
    ]
  },
  {
    "content": "to_filter.at(c)->getAssociatedLibraryPath() == library_path",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@212:8::212:67"
    ]
  },
  {
    "content": "to_filter.at(c)->isOwnedBy(owner)",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@198:8::198:41"
    ]
  },
  {
    "content": "factoryMapMap.find(base_class_name) == factoryMapMap.end()",
    "locations": [
      "src/class_loader/src/class_loader_core.cpp@76:6::76:64"
    ]
  },
  {
    "content": "itr != v.end()",
    "locations": [
      "src/class_loader/src/meta_object.cpp@107:6::107:20"
    ]
  },
  {
    "content": "std::find(v.begin(), v.end(), loader) == v.end()",
    "locations": [
      "src/class_loader/src/meta_object.cpp@97:6::97:54"
    ]
  },
  {
    "content": "0 == (remaining_unloads = loader->unloadLibrary())",
    "locations": [
      "src/class_loader/src/multi_library_class_loader.cpp@107:8::107:58"
    ]
  },
  {
    "content": "itr != active_class_loaders_.end()",
    "locations": [
      "src/class_loader/src/multi_library_class_loader.cpp@105:6::105:40",
      "src/class_loader/src/multi_library_class_loader.cpp@63:6::63:40"
    ]
  },
  {
    "content": "!isLibraryAvailable(library_path)",
    "locations": [
      "src/class_loader/src/multi_library_class_loader.cpp@87:6::87:39"
    ]
  },
  {
    "content": "processed_other[i]->level < min_level",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/aggregator.cpp@233:8::233:45"
    ]
  },
  {
    "content": "processed_other[i]->level > diag_toplevel_state.level",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/aggregator.cpp@231:8::231:61"
    ]
  },
  {
    "content": "processed[i]->level < min_level",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/aggregator.cpp@222:8::222:39"
    ]
  },
  {
    "content": "processed[i]->level > diag_toplevel_state.level",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/aggregator.cpp@220:8::220:55"
    ]
  },
  {
    "content": "diag_toplevel_state.level > 2 && min_level <= 2",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/aggregator.cpp@242:6::242:53"
    ]
  },
  {
    "content": "std::find_if(bonds_.begin(), bonds_.end(), BondIDMatch(req.load_namespace)) != bonds_.end()",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/aggregator.cpp@168:8::168:99"
    ]
  },
  {
    "content": "group->init(base_path_, ros::NodeHandle(req.load_namespace))",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/aggregator.cpp@188:6::188:66"
    ]
  },
  {
    "content": "req.load_namespace[0] != '/'",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/aggregator.cpp@156:6::156:34"
    ]
  },
  {
    "content": "!analyzer_group_->removeAnalyzer(analyzer)",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/aggregator.cpp@136:6::136:48"
    ]
  },
  {
    "content": "elem == bonds_.end()",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/aggregator.cpp@131:6::131:26"
    ]
  },
  {
    "content": "other_analyzer_",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/aggregator.cpp@121:6::121:21"
    ]
  },
  {
    "content": "analyzer_group_",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/aggregator.cpp@119:6::119:21"
    ]
  },
  {
    "content": "!analyzed",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/aggregator.cpp@111:10::111:19"
    ]
  },
  {
    "content": "analyzer_group_->match(item->getName())",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/aggregator.cpp@108:10::108:49"
    ]
  },
  {
    "content": "it != diag_msg->status.begin()",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/aggregator.cpp@83:8::83:38"
    ]
  },
  {
    "content": "!ros_warnings_.count(stamp_warn)",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/aggregator.cpp@88:6::88:38"
    ]
  },
  {
    "content": "diag_msg->header.stamp.toSec() != 0",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/aggregator.cpp@76:6::76:41"
    ]
  },
  {
    "content": "!analyzer_group_->init(base_path_, nh)",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/aggregator.cpp@60:6::60:44"
    ]
  },
  {
    "content": "base_path_.size() > 0 && base_path_.find(\"/\") != 0",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/aggregator.cpp@50:6::50:56"
    ]
  },
  {
    "content": "processed[i]->name == path",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/analyzer_group.cpp@276:10::276:36"
    ]
  },
  {
    "content": "processed.size() == 0",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/analyzer_group.cpp@266:8::266:29"
    ]
  },
  {
    "content": "header_status->name == \"\" || header_status->name == \"/\"",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/analyzer_group.cpp@250:8::250:63"
    ]
  },
  {
    "content": "path_ != \"\" && path_ != \"/\"",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/analyzer_group.cpp@295:6::295:33"
    ]
  },
  {
    "content": "header_status->level == 3 && !all_stale",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/analyzer_group.cpp@290:6::290:45"
    ]
  },
  {
    "content": "analyzers_.size() == 0",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/analyzer_group.cpp@244:6::244:28",
      "src/diagnostics/diagnostic_aggregator/src/analyzer_group.cpp@155:6::155:28",
      "src/diagnostics/diagnostic_aggregator/src/analyzer_group.cpp@188:6::188:28"
    ]
  },
  {
    "content": "mtch_vec[i]",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/analyzer_group.cpp@197:10::197:21",
      "src/diagnostics/diagnostic_aggregator/src/analyzer_group.cpp@228:8::228:19"
    ]
  },
  {
    "content": "matched_.count(name)",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/analyzer_group.cpp@192:6::192:26"
    ]
  },
  {
    "content": "it != analyzers_.end()",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/analyzer_group.cpp@178:6::178:28"
    ]
  },
  {
    "content": "an_type == analyzer_loader_.getName(classes[i])",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/analyzer_group.cpp@106:13::106:60"
    ]
  },
  {
    "content": "!have_class",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/analyzer_group.cpp@116:12::116:23"
    ]
  },
  {
    "content": "!analyzer_loader_.isClassAvailable(an_type)",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/analyzer_group.cpp@100:10::100:53"
    ]
  },
  {
    "content": "!analyzer->init(path_, ros::NodeHandle(analyzers_nh, ns))",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/analyzer_group.cpp@143:8::143:65"
    ]
  },
  {
    "content": "!analyzer",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/analyzer_group.cpp@134:8::134:17"
    ]
  },
  {
    "content": "!analyzer_value.hasMember(\"type\")",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/analyzer_group.cpp@84:8::84:41"
    ]
  },
  {
    "content": "path_.find(\"/\") != 0",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/analyzer_group.cpp@64:6::64:26"
    ]
  },
  {
    "content": "base_path.size() > 0 && base_path != \"/\"",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/analyzer_group.cpp@55:6::55:46"
    ]
  },
  {
    "content": "!all_stale",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/generic_analyzer.cpp@246:10::246:20"
    ]
  },
  {
    "content": "expected_names_missing.size() > 0 && processed[j]->name == path_",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/generic_analyzer.cpp@244:8::244:72"
    ]
  },
  {
    "content": "processed[j]->level != 3",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/generic_analyzer.cpp@226:8::226:32"
    ]
  },
  {
    "content": "nice_name == removeLeadingNameChaff(expected_[i], chaff_[k])",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/generic_analyzer.cpp@210:12::210:72"
    ]
  },
  {
    "content": "nice_name == expected_[i] || nice_name == getOutputName(expected_[i])",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/generic_analyzer.cpp@201:10::201:79"
    ]
  },
  {
    "content": "!has_name",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/generic_analyzer.cpp@218:8::218:17"
    ]
  },
  {
    "content": "name.find(contains_[i]) != string::npos",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/generic_analyzer.cpp@179:8::179:47"
    ]
  },
  {
    "content": "name.find(startswith_[i]) == 0",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/generic_analyzer.cpp@173:8::173:38"
    ]
  },
  {
    "content": "name == name_[i]",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/generic_analyzer.cpp@167:8::167:24"
    ]
  },
  {
    "content": "name == expected_[i]",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/generic_analyzer.cpp@161:8::161:28"
    ]
  },
  {
    "content": "boost::regex_match(name.c_str(), what, regex_[i])",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/generic_analyzer.cpp@155:8::155:57"
    ]
  },
  {
    "content": "my_path.find(\"/\") != 0",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/generic_analyzer.cpp@140:6::140:28"
    ]
  },
  {
    "content": "base_path == \"/\"",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/generic_analyzer.cpp@135:6::135:22"
    ]
  },
  {
    "content": "startswith_.size() == 0 && name_.size() == 0 && \n      contains_.size() == 0 && expected_.size() == 0 && regex_.size() == 0",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/generic_analyzer.cpp@115:6::116:74"
    ]
  },
  {
    "content": "n.getParam(\"regex\", regexes)",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/generic_analyzer.cpp@95:6::95:34"
    ]
  },
  {
    "content": "n.getParam(\"expected\", expected)",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/generic_analyzer.cpp@84:6::84:38"
    ]
  },
  {
    "content": "n.getParam(\"contains\", contains)",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/generic_analyzer.cpp@80:6::80:38"
    ]
  },
  {
    "content": "n.getParam(\"name\", name_val)",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/generic_analyzer.cpp@76:6::76:34"
    ]
  },
  {
    "content": "n.getParam(\"startswith\", startswith)",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/generic_analyzer.cpp@72:6::72:42"
    ]
  },
  {
    "content": "n.getParam(\"remove_prefix\", removes)",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/generic_analyzer.cpp@68:6::68:42"
    ]
  },
  {
    "content": "n.getParam(\"find_and_remove_prefix\", find_remove)",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/generic_analyzer.cpp@59:6::59:55"
    ]
  },
  {
    "content": "!n.getParam(\"path\", nice_name)",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/generic_analyzer.cpp@51:6::51:36"
    ]
  },
  {
    "content": "stale",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/status_item.cpp@105:6::105:11"
    ]
  },
  {
    "content": "path == \"/\"",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/status_item.cpp@95:6::95:17"
    ]
  },
  {
    "content": "update_interval < 0",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/status_item.cpp@78:6::78:25"
    ]
  },
  {
    "content": "name_ != status->name",
    "locations": [
      "src/diagnostics/diagnostic_aggregator/src/status_item.cpp@71:6::71:27"
    ]
  },
  {
    "content": "sched_setscheduler(0, policy, &schedule_parameters) == -1",
    "locations": [
      "src/ecl_core/ecl_threads/src/lib/priority_pos.cpp@325:6::325:65"
    ]
  },
  {
    "content": "priority_level < sched_get_priority_min(policy)",
    "locations": [
      "src/ecl_core/ecl_threads/src/lib/priority_pos.cpp@308:6::308:55"
    ]
  },
  {
    "content": "( rr_min == -1 ) || (rr_max == -1)",
    "locations": [
      "src/ecl_core/ecl_threads/src/lib/priority_pos.cpp@61:16::61:52",
      "src/ecl_core/ecl_threads/src/lib/priority_pos.cpp@201:6::201:42",
      "src/ecl_core/ecl_threads/src/lib/priority_pos.cpp@149:20::149:56"
    ]
  },
  {
    "content": "param.sched_priority >= rr_min + 2*(rr_max-rr_min)/10",
    "locations": [
      "src/ecl_core/ecl_threads/src/lib/priority_pos.cpp@155:27::155:82"
    ]
  },
  {
    "content": "sched_getparam(0,&param) != 0",
    "locations": [
      "src/ecl_core/ecl_threads/src/lib/priority_pos.cpp@143:20::143:51"
    ]
  },
  {
    "content": "!threads::set_real_time_priority(SCHED_RR,rr_min+(priority_level - RealTimePriority1)*(rr_max - rr_min)/10)",
    "locations": [
      "src/ecl_core/ecl_threads/src/lib/priority_pos.cpp@67:20::67:129"
    ]
  },
  {
    "content": "return_value == -1",
    "locations": [
      "src/ecl_core/ecl_threads/src/lib/priority_pos.cpp@114:8::114:28"
    ]
  },
  {
    "content": "priority_level >= RealTimePriority1",
    "locations": [
      "src/ecl_core/ecl_threads/src/lib/priority_pos.cpp@58:8::58:45"
    ]
  },
  {
    "content": "stack_size != DefaultStackSize",
    "locations": [
      "src/ecl_core/ecl_threads/src/lib/thread_pos.cpp@124:8::124:40"
    ]
  },
  {
    "content": "thread_task != NULL",
    "locations": [
      "src/ecl_core/ecl_threads/src/lib/thread_pos.cpp@85:8::85:29",
      "src/ecl_core/ecl_threads/src/lib/thread_pos.cpp@96:4::96:25"
    ]
  },
  {
    "content": "has_started && !join_requested",
    "locations": [
      "src/ecl_core/ecl_threads/src/lib/thread_pos.cpp@76:5::76:37"
    ]
  },
  {
    "content": "result != 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@279:7::279:20",
      "src/ros_comm/xmlrpcpp/src/XmlRpcSocket.cpp@262:6::262:18",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@81:7::81:20",
      "src/ecl_core/ecl_threads/src/lib/thread_pos.cpp@54:8::54:21"
    ]
  },
  {
    "content": "has_started",
    "locations": [
      "src/ecl_core/ecl_threads/src/lib/thread_pos.cpp@43:5::43:18"
    ]
  },
  {
    "content": "storage_.empty()",
    "locations": [
      "src/geometry/tf/src/cache.cpp@276:6::276:22",
      "src/geometry2/tf2/src/cache.cpp@104:6::104:22",
      "src/geometry/tf/src/cache.cpp@287:6::287:22",
      "src/geometry2/tf2/src/cache.cpp@282:6::282:22",
      "src/geometry/tf/src/cache.cpp@101:6::101:22",
      "src/geometry/tf/src/cache.cpp@293:6::293:22",
      "src/geometry2/tf2/src/cache.cpp@293:6::293:22",
      "src/geometry2/tf2/src/cache.cpp@299:6::299:22"
    ]
  },
  {
    "content": "storage_it != storage_.end()",
    "locations": [
      "src/geometry/tf/src/cache.cpp@252:13::252:41",
      "src/geometry2/tf2/src/cache.cpp@249:5::249:33"
    ]
  },
  {
    "content": "storage_.rbegin()->stamp_ > new_data.stamp_ + max_storage_time_",
    "locations": [
      "src/geometry/tf/src/cache.cpp@245:10::245:73"
    ]
  },
  {
    "content": "storage_.begin() != storage_.end()",
    "locations": [
      "src/geometry/tf/src/cache.cpp@242:6::242:40"
    ]
  },
  {
    "content": "num_nodes == 0",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@237:6::237:20",
      "src/geometry/tf/src/cache.cpp@198:6::198:20",
      "src/geometry/tf/src/cache.cpp@231:6::231:20",
      "src/geometry2/tf2/src/cache.cpp@204:6::204:20"
    ]
  },
  {
    "content": "p_temp_1->frame_id_ == p_temp_2->frame_id_",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@214:7::214:50",
      "src/geometry/tf/src/cache.cpp@208:7::208:50"
    ]
  },
  {
    "content": "num_nodes == 2",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@212:11::212:25",
      "src/geometry/tf/src/cache.cpp@206:11::206:25"
    ]
  },
  {
    "content": "num_nodes == 1",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@208:11::208:25",
      "src/geometry/tf/src/cache.cpp@202:11::202:25"
    ]
  },
  {
    "content": "two.stamp_ == one.stamp_",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@179:5::179:31",
      "src/geometry/tf/src/cache.cpp@173:5::173:31"
    ]
  },
  {
    "content": "ts.stamp_ == target_time",
    "locations": [
      "src/geometry/tf/src/cache.cpp@118:8::118:32",
      "src/geometry2/tf2/src/cache.cpp@120:8::120:32"
    ]
  },
  {
    "content": "target_time < earliest_time",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@151:11::151:38",
      "src/geometry/tf/src/cache.cpp@149:11::149:38"
    ]
  },
  {
    "content": "target_time > latest_time",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@146:11::146:36",
      "src/geometry/tf/src/cache.cpp@144:11::144:36"
    ]
  },
  {
    "content": "target_time == earliest_time",
    "locations": [
      "src/geometry/tf/src/cache.cpp@138:11::138:39",
      "src/geometry2/tf2/src/cache.cpp@140:11::140:39"
    ]
  },
  {
    "content": "target_time == latest_time",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@135:6::135:32",
      "src/geometry/tf/src/cache.cpp@133:6::133:32"
    ]
  },
  {
    "content": "++storage_.begin() == storage_.end()",
    "locations": [
      "src/geometry/tf/src/cache.cpp@115:6::115:42",
      "src/geometry2/tf2/src/cache.cpp@117:6::117:42"
    ]
  },
  {
    "content": "target_time.isZero()",
    "locations": [
      "src/geometry/tf/src/cache.cpp@108:6::108:26",
      "src/geometry2/tf2/src/cache.cpp@110:6::110:26"
    ]
  },
  {
    "content": "error_str",
    "locations": [
      "src/geometry/tf/src/cache.cpp@62:6::62:15",
      "src/geometry2/tf2/src/cache.cpp@67:6::67:15",
      "src/geometry2/tf2_ros/src/buffer.cpp@188:6::188:15",
      "src/geometry2/tf2/src/cache.cpp@87:6::87:15",
      "src/geometry/tf/src/cache.cpp@90:6::90:15",
      "src/geometry/tf/src/cache.cpp@70:6::70:15",
      "src/geometry/tf/src/cache.cpp@80:6::80:15",
      "src/geometry2/tf2/src/cache.cpp@77:6::77:15"
    ]
  },
  {
    "content": "ros::Time() == time",
    "locations": [
      "src/geometry/tf/src/tf.cpp@279:6::279:25"
    ]
  },
  {
    "content": "frame_name.size() > 0",
    "locations": [
      "src/geometry/tf/src/tf.cpp@162:6::162:27",
      "src/geometry/tf/src/tf.cpp@197:6::197:27"
    ]
  },
  {
    "content": "prefix[0] == '/'",
    "locations": [
      "src/geometry/tf/src/tf.cpp@169:8::169:24"
    ]
  },
  {
    "content": "prefix.size() > 0",
    "locations": [
      "src/geometry/tf/src/tf.cpp@167:6::167:23"
    ]
  },
  {
    "content": "source",
    "locations": [
      "src/geometry/tf/src/tf.cpp@97:8::97:14",
      "src/geometry2/tf2/src/buffer_core.cpp@536:8::536:14"
    ]
  },
  {
    "content": "!cache->getData(time, st, error_string)",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@526:8::526:47",
      "src/geometry/tf/src/tf.cpp@87:8::87:47"
    ]
  },
  {
    "content": "&cloudIn != &cloudOut",
    "locations": [
      "src/geometry/tf/src/transform_listener.cpp@227:6::227:27"
    ]
  },
  {
    "content": "retval != tf2_msgs::TF2Error::NO_ERROR",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@333:8::333:46",
      "src/geometry2/tf2/src/buffer_core.cpp@625:6::625:44",
      "src/geometry2/tf2/src/buffer_core.cpp@1596:6::1596:44",
      "src/geometry2/tf2/src/buffer_core.cpp@1615:6::1615:44"
    ]
  },
  {
    "content": "current_time > 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1212:8::1212:26",
      "src/geometry2/tf2/src/buffer_core.cpp@1563:10::1563:26",
      "src/geometry2/tf2/src/buffer_core.cpp@1545:10::1545:26"
    ]
  },
  {
    "content": "frameIDs_reverse[frame_id_num]==\"NO_PARENT\"",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1559:7::1559:50"
    ]
  },
  {
    "content": "counter_frame->getData(ros::Time(), temp)",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1553:8::1553:49"
    ]
  },
  {
    "content": "!counter_frame",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1544:8::1544:22",
      "src/geometry2/tf2/src/buffer_core.cpp@1506:8::1506:22"
    ]
  },
  {
    "content": "it != frame_authority_.end()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1516:8::1516:36",
      "src/geometry2/tf2/src/buffer_core.cpp@1197:8::1197:36"
    ]
  },
  {
    "content": "!counter_frame->getData(ros::Time(), temp)",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1509:7::1509:49"
    ]
  },
  {
    "content": "frames_.size() == 1",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1496:6::1496:25"
    ]
  },
  {
    "content": "it != transformable_callbacks_.end()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1451:12::1451:48"
    ]
  },
  {
    "content": "transformable_requests_.size() > 1",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1462:10::1462:44"
    ]
  },
  {
    "content": "do_cb",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1446:8::1446:13"
    ]
  },
  {
    "content": "!latest_time.isZero() && req.time + cache_time_ < latest_time",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1435:8::1435:69"
    ]
  },
  {
    "content": "req.source_id == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1310:6::1310:24",
      "src/geometry2/tf2/src/buffer_core.cpp@1424:8::1424:26"
    ]
  },
  {
    "content": "req.target_id == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1419:8::1419:26"
    ]
  },
  {
    "content": "parent_id == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1379:6::1379:20"
    ]
  },
  {
    "content": "! frame",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1375:6::1375:13"
    ]
  },
  {
    "content": "it != transformable_requests_.end()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1340:6::1340:41"
    ]
  },
  {
    "content": "!latest_time.isZero() && time + cache_time_ < latest_time",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1291:8::1291:65"
    ]
  },
  {
    "content": "req.request_handle == 0 || req.request_handle == 0xffffffffffffffffULL",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1300:6::1300:76"
    ]
  },
  {
    "content": "req.target_id && req.source_id",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1285:6::1285:36"
    ]
  },
  {
    "content": "canTransformInternal(req.target_id, req.source_id, time, 0)",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1279:6::1279:65"
    ]
  },
  {
    "content": "target_frame == source_frame",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@803:6::803:34",
      "src/geometry2/tf2/src/buffer_core.cpp@597:6::597:34",
      "src/geometry2/tf2/src/buffer_core.cpp@1269:6::1269:34"
    ]
  },
  {
    "content": "!cache->getData(ros::Time(), temp)",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1188:7::1188:41"
    ]
  },
  {
    "content": "!cache",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@406:8::406:14",
      "src/geometry2/tf2/src/buffer_core.cpp@353:8::353:14",
      "src/geometry2/tf2/src/buffer_core.cpp@1183:8::1183:14",
      "src/geometry2/tf2/src/buffer_core.cpp@1023:8::1023:14",
      "src/geometry2/tf2/src/buffer_core.cpp@1080:8::1080:14"
    ]
  },
  {
    "content": "frames_.size() ==1",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1171:6::1171:24"
    ]
  },
  {
    "content": "it->second == common_parent",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1148:10::1148:37"
    ]
  },
  {
    "content": "!it->first.isZero()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1143:10::1143:29"
    ]
  },
  {
    "content": "error_string",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1120:10::1120:22",
      "src/geometry2/tf2/src/buffer_core.cpp@1060:10::1060:22",
      "src/geometry2/tf2/src/buffer_core.cpp@384:10::384:22",
      "src/geometry2/tf2/src/buffer_core.cpp@414:10::414:22",
      "src/geometry2/tf2/src/buffer_core.cpp@445:10::445:22",
      "src/geometry2/tf2/src/buffer_core.cpp@460:10::460:22"
    ]
  },
  {
    "content": "time == ros::TIME_MAX",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1110:10::1110:31",
      "src/geometry2/tf2/src/buffer_core.cpp@1050:10::1050:31"
    ]
  },
  {
    "content": "depth > MAX_GRAPH_DEPTH",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1118:8::1118:31",
      "src/geometry2/tf2/src/buffer_core.cpp@382:8::382:31",
      "src/geometry2/tf2/src/buffer_core.cpp@443:8::443:31",
      "src/geometry2/tf2/src/buffer_core.cpp@1058:8::1058:31"
    ]
  },
  {
    "content": "frame == source_id",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@425:8::425:26",
      "src/geometry2/tf2/src/buffer_core.cpp@1107:8::1107:26"
    ]
  },
  {
    "content": "it != lct_cache.end()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1098:8::1098:29"
    ]
  },
  {
    "content": "!latest.first.isZero()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1092:8::1092:30",
      "src/geometry2/tf2/src/buffer_core.cpp@1037:8::1037:30"
    ]
  },
  {
    "content": "latest.second == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1031:8::1031:26",
      "src/geometry2/tf2/src/buffer_core.cpp@1087:8::1087:26"
    ]
  },
  {
    "content": "frame == target_id",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@370:8::370:26",
      "src/geometry2/tf2/src/buffer_core.cpp@1047:8::1047:26"
    ]
  },
  {
    "content": "cache",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1004:8::1004:13",
      "src/geometry2/tf2/src/buffer_core.cpp@607:10::607:15"
    ]
  },
  {
    "content": "common_time == ros::TIME_MAX",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1155:6::1155:34"
    ]
  },
  {
    "content": "common_parent == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@1131:6::1131:24"
    ]
  },
  {
    "content": "source_id == target_id",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@323:6::323:28",
      "src/geometry2/tf2/src/buffer_core.cpp@1000:6::1000:28"
    ]
  },
  {
    "content": "source_id == 0 || target_id == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@998:6::998:38"
    ]
  },
  {
    "content": "frame_ptr->getData(ros::Time(), temp)",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@969:7::969:46"
    ]
  },
  {
    "content": "frame_ptr == NULL",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@966:8::966:25"
    ]
  },
  {
    "content": "!out",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@939:6::939:10"
    ]
  },
  {
    "content": "frame_id_num >= frameIDs_reverse.size()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@927:8::927:47"
    ]
  },
  {
    "content": "map_it == frameIDs_.end()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@912:6::912:31",
      "src/geometry2/tf2/src/buffer_core.cpp@899:6::899:31"
    ]
  },
  {
    "content": "frame_id >= frames_.size()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@887:6::887:32"
    ]
  },
  {
    "content": "target_id == 0 || source_id == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@758:6::758:38",
      "src/geometry2/tf2/src/buffer_core.cpp@816:6::816:38",
      "src/geometry2/tf2/src/buffer_core.cpp@872:14::872:46"
    ]
  },
  {
    "content": "target_id == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@858:12::858:26",
      "src/geometry2/tf2/src/buffer_core.cpp@762:12::762:26",
      "src/geometry2/tf2/src/buffer_core.cpp@820:12::820:26",
      "src/geometry2/tf2/src/buffer_core.cpp@826:14::826:28",
      "src/geometry2/tf2/src/buffer_core.cpp@768:14::768:28",
      "src/geometry2/tf2/src/buffer_core.cpp@864:14::864:28"
    ]
  },
  {
    "content": "source_id == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@870:12::870:26",
      "src/geometry2/tf2/src/buffer_core.cpp@766:12::766:26",
      "src/geometry2/tf2/src/buffer_core.cpp@862:12::862:26",
      "src/geometry2/tf2/src/buffer_core.cpp@824:12::824:26"
    ]
  },
  {
    "content": "error_msg",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@818:8::818:17",
      "src/geometry2/tf2/src/buffer_core.cpp@856:8::856:17",
      "src/geometry2/tf2/src/buffer_core.cpp@760:8::760:17"
    ]
  },
  {
    "content": "target_id == 0 || source_id == 0 || fixed_id == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@854:6::854:55"
    ]
  },
  {
    "content": "warnFrameId(\"canTransform argument fixed_frame\", fixed_frame)",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@846:6::846:67"
    ]
  },
  {
    "content": "warnFrameId(\"canTransform argument source_frame\", source_frame)",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@808:6::808:69",
      "src/geometry2/tf2/src/buffer_core.cpp@844:6::844:69"
    ]
  },
  {
    "content": "warnFrameId(\"canTransform argument target_frame\", target_frame)",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@842:6::842:69",
      "src/geometry2/tf2/src/buffer_core.cpp@806:6::806:69"
    ]
  },
  {
    "content": "walkToTopParent(accum, time, target_id, source_id, error_msg) == tf2_msgs::TF2Error::NO_ERROR",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@784:6::784:99"
    ]
  },
  {
    "content": "time == ros::Time()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@603:8::603:27",
      "src/geometry2/tf2/src/buffer_core.cpp@330:6::330:25"
    ]
  },
  {
    "content": "(*frame_chain)[n] != reverse_frame_chain[m]",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@487:10::487:53"
    ]
  },
  {
    "content": "m < reverse_frame_chain.size()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@498:8::498:38"
    ]
  },
  {
    "content": "n > 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@493:8::493:13",
      "src/ros_comm/xmlrpcpp/src/XmlRpcSocket.cpp@294:8::294:13",
      "src/ros_comm/xmlrpcpp/src/XmlRpcSocket.cpp@325:8::325:13"
    ]
  },
  {
    "content": "extrapolation_might_have_occurred",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@458:8::458:41"
    ]
  },
  {
    "content": "frame_chain",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@428:10::428:21",
      "src/geometry2/tf2/src/buffer_core.cpp@319:6::319:17",
      "src/geometry2/tf2/src/buffer_core.cpp@403:8::403:19",
      "src/geometry2/tf2/src/buffer_core.cpp@480:6::480:17",
      "src/geometry2/tf2/src/buffer_core.cpp@474:11::474:22",
      "src/geometry2/tf2/src/buffer_core.cpp@350:8::350:19"
    ]
  },
  {
    "content": "parent == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@412:8::412:19",
      "src/geometry2/tf2/src/buffer_core.cpp@361:8::361:19"
    ]
  },
  {
    "content": "frame != top_parent",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@456:6::456:25"
    ]
  },
  {
    "content": "is_static",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@290:6::290:15"
    ]
  },
  {
    "content": "frame->insertData(TransformStorage(stripped, lookupOrInsertFrameNumber(stripped.header.frame_id), frame_number))",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@271:8::271:120"
    ]
  },
  {
    "content": "frame == NULL",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@268:8::268:21"
    ]
  },
  {
    "content": "error_exists",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@261:6::261:18"
    ]
  },
  {
    "content": "!valid",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@253:6::253:12"
    ]
  },
  {
    "content": "stripped.header.frame_id == \"\"",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@231:6::231:36"
    ]
  },
  {
    "content": "stripped.child_frame_id == stripped.header.frame_id",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@219:6::219:57"
    ]
  },
  {
    "content": "*cache_it",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@194:10::194:19"
    ]
  },
  {
    "content": "frames_.size() > 1",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@190:6::190:26"
    ]
  },
  {
    "content": "id == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@158:6::158:13"
    ]
  },
  {
    "content": "startsWithSlash(frame_id)",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@130:6::130:31",
      "src/geometry2/tf2/src/buffer_core.cpp@150:6::150:31"
    ]
  },
  {
    "content": "frame_id.empty()",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@143:6::143:22"
    ]
  },
  {
    "content": "frame_id.size() == 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@122:6::122:26"
    ]
  },
  {
    "content": "startsWithSlash(in)",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@114:6::114:25"
    ]
  },
  {
    "content": "frame_id.size() > 0",
    "locations": [
      "src/geometry2/tf2/src/buffer_core.cpp@105:6::105:25"
    ]
  },
  {
    "content": "storage_it->stamp_ <= new_data.stamp_",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@260:8::260:45"
    ]
  },
  {
    "content": "storage_it->stamp_ > new_data.stamp_ + max_storage_time_",
    "locations": [
      "src/geometry2/tf2/src/cache.cpp@251:8::251:64"
    ]
  },
  {
    "content": "isUsingDedicatedThread()",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer.cpp@183:6::183:30"
    ]
  },
  {
    "content": "!checkAndErrorDedicatedThreadPresent(errstr)",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer.cpp@126:6::126:50",
      "src/geometry2/tf2_ros/src/buffer.cpp@155:6::155:50"
    ]
  },
  {
    "content": "errstr",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_client.cpp@142:9::142:15",
      "src/geometry2/tf2_ros/src/buffer.cpp@121:6::121:12",
      "src/geometry2/tf2_ros/src/buffer_client.cpp@162:9::162:15",
      "src/geometry2/tf2_ros/src/buffer.cpp@150:6::150:12",
      "src/geometry2/tf2_ros/src/buffer.cpp@107:6::107:12"
    ]
  },
  {
    "content": "debug && !ros::service::exists(\"~tf2_frames\", false)",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer.cpp@44:5::44:57"
    ]
  },
  {
    "content": "result.error.error == result.error.TIMEOUT_ERROR",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_client.cpp@123:9::123:57"
    ]
  },
  {
    "content": "result.error.error == result.error.INVALID_ARGUMENT_ERROR",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_client.cpp@120:9::120:66"
    ]
  },
  {
    "content": "result.error.error == result.error.EXTRAPOLATION_ERROR",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_client.cpp@117:9::117:63"
    ]
  },
  {
    "content": "result.error.error == result.error.CONNECTIVITY_ERROR",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_client.cpp@114:9::114:62"
    ]
  },
  {
    "content": "result.error.error == result.error.LOOKUP_ERROR",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_client.cpp@111:9::111:56"
    ]
  },
  {
    "content": "result.error.error != result.error.NO_ERROR",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_client.cpp@109:7::109:50"
    ]
  },
  {
    "content": "client_.getState() != actionlib::SimpleClientGoalState::SUCCEEDED",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_client.cpp@99:7::99:72"
    ]
  },
  {
    "content": "timed_out",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_client.cpp@92:7::92:16"
    ]
  },
  {
    "content": "!goal->advanced",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_server.cpp@198:7::198:22",
      "src/geometry2/tf2_ros/src/buffer_server.cpp@210:7::210:22"
    ]
  },
  {
    "content": "canTransform(gh) || goal_info.end_time <= ros::Time::now()",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_server.cpp@147:7::147:65"
    ]
  },
  {
    "content": "info.handle == gh",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_server.cpp@123:9::123:26"
    ]
  },
  {
    "content": "canTransform(info.handle) || info.end_time < ros::Time::now()",
    "locations": [
      "src/geometry2/tf2_ros/src/buffer_server.cpp@63:9::63:70"
    ]
  },
  {
    "content": "it_in->child_frame_id == it_msg->child_frame_id",
    "locations": [
      "src/geometry2/tf2_ros/src/static_transform_broadcaster.cpp@60:10::60:57"
    ]
  },
  {
    "content": "! match_found",
    "locations": [
      "src/geometry2/tf2_ros/src/static_transform_broadcaster.cpp@67:8::67:21"
    ]
  },
  {
    "content": "now < last_update_",
    "locations": [
      "src/geometry2/tf2_ros/src/transform_listener.cpp@105:5::105:23"
    ]
  },
  {
    "content": "dedicated_listener_thread_",
    "locations": [
      "src/geometry2/tf2_ros/src/transform_listener.cpp@63:6::63:32"
    ]
  },
  {
    "content": "spin_thread",
    "locations": [
      "src/geometry2/tf2_ros/src/transform_listener.cpp@41:6::41:17",
      "src/geometry2/tf2_ros/src/transform_listener.cpp@53:6::53:17"
    ]
  },
  {
    "content": "!addChildrenToTree(robot_model.getRoot()->child_links[i], tree)",
    "locations": [
      "src/kdl_parser/kdl_parser/src/kdl_parser.cpp@201:8::201:71"
    ]
  },
  {
    "content": "robot_model.getRoot()->inertial",
    "locations": [
      "src/kdl_parser/kdl_parser/src/kdl_parser.cpp@196:6::196:37"
    ]
  },
  {
    "content": "!robot_model.initXml(xml_doc)",
    "locations": [
      "src/kdl_parser/kdl_parser/src/kdl_parser.cpp@183:6::183:35"
    ]
  },
  {
    "content": "!robot_model.initParam(param)",
    "locations": [
      "src/kdl_parser/kdl_parser/src/kdl_parser.cpp@166:6::166:35"
    ]
  },
  {
    "content": "!addChildrenToTree(children[i], tree)",
    "locations": [
      "src/kdl_parser/kdl_parser/src/kdl_parser.cpp@149:8::149:45"
    ]
  },
  {
    "content": "root->inertial",
    "locations": [
      "src/kdl_parser/kdl_parser/src/kdl_parser.cpp@135:6::135:20"
    ]
  },
  {
    "content": "controller_->init()",
    "locations": [
      "src/kobuki/kobuki_safety_controller/src/nodelet.cpp@71:8::71:27"
    ]
  },
  {
    "content": "!scan_in.ranges.empty()",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@215:7::215:30",
      "src/laser_geometry/src/laser_geometry.cpp@661:7::661:30",
      "src/laser_geometry/src/laser_geometry.cpp@696:7::696:30"
    ]
  },
  {
    "content": "(i % cloud_out.point_step) < index_offset || (i % cloud_out.point_step) >= (index_offset + 4)",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@640:11::640:104"
    ]
  },
  {
    "content": "cloud_out.fields[i].name != \"index\"",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@614:11::614:46"
    ]
  },
  {
    "content": "has_viewpoint",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@583:9::583:22"
    ]
  },
  {
    "content": "cloud_out.fields[i].name == \"vp_x\"",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@537:9::537:43"
    ]
  },
  {
    "content": "cloud_out.fields[i].name == \"index\"",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@529:9::529:44"
    ]
  },
  {
    "content": "!requested_index",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@272:7::272:23",
      "src/laser_geometry/src/laser_geometry.cpp@597:7::597:23"
    ]
  },
  {
    "content": "(channel_options & channel_option::Index)",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@508:8::508:49"
    ]
  },
  {
    "content": "idx_vpx != -1 && idx_vpy != -1 && idx_vpz != -1",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@447:11::447:58"
    ]
  },
  {
    "content": "idx_timestamp != -1",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@443:11::443:30",
      "src/laser_geometry/src/laser_geometry.cpp@138:11::138:31"
    ]
  },
  {
    "content": "idx_distance != -1",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@439:11::439:29",
      "src/laser_geometry/src/laser_geometry.cpp@127:12::127:30"
    ]
  },
  {
    "content": "idx_index != -1",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@435:11::435:26",
      "src/laser_geometry/src/laser_geometry.cpp@123:12::123:27"
    ]
  },
  {
    "content": "idx_intensity != -1",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@431:11::431:30",
      "src/laser_geometry/src/laser_geometry.cpp@133:14::133:33"
    ]
  },
  {
    "content": "range < range_cutoff && range >= scan_in.range_min",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@421:10::421:60"
    ]
  },
  {
    "content": "range_cutoff < 0",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@413:8::413:24",
      "src/laser_geometry/src/laser_geometry.cpp@103:8::103:24"
    ]
  },
  {
    "content": "(channel_options & channel_option::Viewpoint)",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@380:8::380:53"
    ]
  },
  {
    "content": "(channel_options & channel_option::Timestamp)",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@368:8::368:53"
    ]
  },
  {
    "content": "(channel_options & channel_option::Distance)",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@356:8::356:52"
    ]
  },
  {
    "content": "(channel_options & channel_option::Intensity) && scan_in.intensities.size() > 0",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@332:8::332:87"
    ]
  },
  {
    "content": "co_sine_map_.rows () != (int)n_pts || angle_min_ != scan_in.angle_min || angle_max_ != scan_in.angle_max",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@293:8::293:113"
    ]
  },
  {
    "content": "cloud_out.channels[i].name == \"index\"",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@228:9::228:46"
    ]
  },
  {
    "content": "(mask & channel_option::Index)",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@199:8::199:38"
    ]
  },
  {
    "content": "it != unit_vector_map_.end()",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@161:8::161:36"
    ]
  },
  {
    "content": "scan_in.intensities.size() >= index",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@131:12::131:47"
    ]
  },
  {
    "content": "preservative || ((range < range_cutoff) && (range >= scan_in.range_min))",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@110:10::110:82"
    ]
  },
  {
    "content": "mask & channel_option::Timestamp",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@94:8::94:40"
    ]
  },
  {
    "content": "mask & channel_option::Distance",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@85:8::85:39"
    ]
  },
  {
    "content": "(mask & channel_option::Intensity) && scan_in.intensities.size() > 0",
    "locations": [
      "src/laser_geometry/src/laser_geometry.cpp@65:8::65:76"
    ]
  },
  {
    "content": "d < ncell->occ_dist",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@224:14::224:33"
    ]
  },
  {
    "content": "!MAP_VALID(map, i + ni, j + nj)",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@218:14::218:45"
    ]
  },
  {
    "content": "cell->occ_state != +1",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@208:10::208:31"
    ]
  },
  {
    "content": "(int)current_cell.i_ < map->size_x - 1",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@163:7::163:45"
    ]
  },
  {
    "content": "current_cell.j_ > 0",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@159:7::159:26"
    ]
  },
  {
    "content": "current_cell.i_ > 0",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@155:7::155:26"
    ]
  },
  {
    "content": "map->cells[MAP_INDEX(map, i, j)].occ_state == +1",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@140:9::140:57"
    ]
  },
  {
    "content": "distance > cdm->cell_radius_",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@102:5::102:33"
    ]
  },
  {
    "content": "marked[MAP_INDEX(map, i, j)]",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@95:5::95:33"
    ]
  },
  {
    "content": "cdm",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@81:7::81:10"
    ]
  },
  {
    "content": "!cdm || (cdm->scale_ != scale) || (cdm->max_dist_ != max_dist)",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@79:5::79:67"
    ]
  },
  {
    "content": "distances_",
    "locations": [
      "src/navigation/amcl/src/amcl/map/map_cspace.cpp@55:9::55:19"
    ]
  },
  {
    "content": "temp_obs",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@56:5::56:13",
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@495:5::495:13"
    ]
  },
  {
    "content": "error || obs_mask[beam_ind]",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@478:6::478:33"
    ]
  },
  {
    "content": "(obs_count[beam_ind] / static_cast<double>(set->sample_count)) > beam_skip_threshold",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@450:9::450:93"
    ]
  },
  {
    "content": "skipped_beam_count >= (beam_ind * self->beam_skip_error_threshold)",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@465:7::465:73"
    ]
  },
  {
    "content": "z < beam_skip_distance",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@417:4::417:26"
    ]
  },
  {
    "content": "!do_beamskip",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@441:7::441:19",
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@434:9::434:21"
    ]
  },
  {
    "content": "!MAP_VALID(self->map, mi, mj)",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@276:9::276:38",
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@412:9::412:38"
    ]
  },
  {
    "content": "obs_range != obs_range",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@394:9::394:31",
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@260:9::260:31"
    ]
  },
  {
    "content": "obs_range >= data->range_max",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@389:9::389:37",
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@256:9::256:37"
    ]
  },
  {
    "content": "realloc",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@364:7::364:14"
    ]
  },
  {
    "content": "self->max_obs < self->max_beams",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@356:7::356:38"
    ]
  },
  {
    "content": "do_beamskip",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@447:5::447:16",
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@355:5::355:16"
    ]
  },
  {
    "content": "do_beamskip && !set->converged",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@340:5::340:35"
    ]
  },
  {
    "content": "step < 1",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@322:5::322:13",
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@247:7::247:15"
    ]
  },
  {
    "content": "obs_range < data->range_max",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@193:9::193:36"
    ]
  },
  {
    "content": "obs_range == data->range_max",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@189:9::189:37"
    ]
  },
  {
    "content": "z < 0",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@185:9::185:14"
    ]
  },
  {
    "content": "this->model_type == LASER_MODEL_LIKELIHOOD_FIELD_PROB",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@131:10::131:63"
    ]
  },
  {
    "content": "this->model_type == LASER_MODEL_LIKELIHOOD_FIELD",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@129:10::129:58"
    ]
  },
  {
    "content": "this->model_type == LASER_MODEL_BEAM",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@127:5::127:41"
    ]
  },
  {
    "content": "this->max_beams < 2",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_laser.cpp@123:6::123:25"
    ]
  },
  {
    "content": "sqrt(ndata->delta.v[1]*ndata->delta.v[1] + \n            ndata->delta.v[0]*ndata->delta.v[0]) < 0.01",
    "locations": [
      "src/navigation/amcl/src/amcl/sensors/amcl_odom.cpp@174:7::175:55",
      "src/navigation/amcl/src/amcl/sensors/amcl_odom.cpp@265:7::266:55"
    ]
  },
  {
    "content": "fabs(d1) < fabs(d2)",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@102:5::102:24",
      "src/navigation/amcl/src/amcl/sensors/amcl_odom.cpp@54:5::54:24"
    ]
  },
  {
    "content": "d1 > 0",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@100:5::100:11",
      "src/navigation/amcl/src/amcl/sensors/amcl_odom.cpp@52:5::52:11"
    ]
  },
  {
    "content": "initial_pose_hyp_ != NULL && map_ != NULL",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1515:5::1515:48"
    ]
  },
  {
    "content": "sent_first_transform_",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1467:7::1467:28"
    ]
  },
  {
    "content": "tf_->resolve(msg.header.frame_id) != tf_->resolve(global_frame_id_)",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1439:10::1439:77"
    ]
  },
  {
    "content": "msg.header.frame_id == \"\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1433:5::1433:30"
    ]
  },
  {
    "content": "(save_pose_period.toSec() > 0.0) &&\n       (now - save_pose_last_time) >= save_pose_period",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1405:7::1406:54"
    ]
  },
  {
    "content": "tf_broadcast_ == true",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1391:8::1391:29",
      "src/navigation/amcl/src/amcl_node.cpp@1371:10::1371:31"
    ]
  },
  {
    "content": "hyps[hyp_count].weight > max_weight",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1282:9::1282:44"
    ]
  },
  {
    "content": "!pf_get_cluster_stats(pf_, hyp_count, &weight, &pose_mean, &pose_cov)",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1272:10::1272:79"
    ]
  },
  {
    "content": "max_weight > 0.0",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1289:7::1289:23"
    ]
  },
  {
    "content": "laser_scan->ranges[i] <= range_min",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1216:9::1216:43"
    ]
  },
  {
    "content": "!m_force_update",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1243:8::1243:23"
    ]
  },
  {
    "content": "!(++resample_count_ % resample_interval_)",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1232:7::1232:48"
    ]
  },
  {
    "content": "laser_min_range_ > 0.0",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1205:7::1205:29"
    ]
  },
  {
    "content": "laser_max_range_ > 0.0",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1200:7::1200:29"
    ]
  },
  {
    "content": "update",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1118:7::1118:13"
    ]
  },
  {
    "content": "latest_tf_valid_",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1389:10::1389:26"
    ]
  },
  {
    "content": "resampled || force_publication",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1259:5::1259:35"
    ]
  },
  {
    "content": "lasers_update_[laser_index]",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1162:5::1162:32"
    ]
  },
  {
    "content": "pf_init_ && lasers_update_[laser_index]",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1141:10::1141:49"
    ]
  },
  {
    "content": "!pf_init_",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1124:5::1124:14"
    ]
  },
  {
    "content": "pf_init_",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1102:5::1102:13"
    ]
  },
  {
    "content": "!getOdomPose(latest_odom_pose_, pose.v[0], pose.v[1], pose.v[2],\n                  laser_scan->header.stamp, base_frame_id_)",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1092:5::1093:59"
    ]
  },
  {
    "content": "frame_to_laser_.find(laser_scan->header.frame_id) == frame_to_laser_.end()",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1049:5::1049:79"
    ]
  },
  {
    "content": "map_ == NULL",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@1006:5::1006:19",
      "src/navigation/amcl/src/amcl_node.cpp@1042:5::1042:19"
    ]
  },
  {
    "content": "MAP_VALID(map,i,j) && (map->cells[MAP_INDEX(map,i,j)].occ_state == -1)",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@995:7::995:77"
    ]
  },
  {
    "content": "map_msg.data[i] == 100",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@918:12::918:34"
    ]
  },
  {
    "content": "map_msg.data[i] == 0",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@916:7::916:27"
    ]
  },
  {
    "content": "map_ != NULL",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@882:5::882:19"
    ]
  },
  {
    "content": "laser_model_type_ == LASER_MODEL_LIKELIHOOD_FIELD_PROB",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@857:10::857:64",
      "src/navigation/amcl/src/amcl_node.cpp@571:10::571:64"
    ]
  },
  {
    "content": "laser_model_type_ == LASER_MODEL_BEAM",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@568:5::568:42",
      "src/navigation/amcl/src/amcl_node.cpp@854:5::854:42"
    ]
  },
  {
    "content": "map_->cells[MAP_INDEX(map_,i,j)].occ_state == -1",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@820:9::820:57"
    ]
  },
  {
    "content": "first_map_only_ && first_map_received_",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@787:5::787:45"
    ]
  },
  {
    "content": "d > laser_check_interval_",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@758:5::758:30"
    ]
  },
  {
    "content": "!std::isnan(tmp_pos)",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@748:5::748:25",
      "src/navigation/amcl/src/amcl_node.cpp@743:5::743:25",
      "src/navigation/amcl/src/amcl_node.cpp@738:5::738:25",
      "src/navigation/amcl/src/amcl_node.cpp@733:5::733:25",
      "src/navigation/amcl/src/amcl_node.cpp@728:5::728:25",
      "src/navigation/amcl/src/amcl_node.cpp@723:5::723:25"
    ]
  },
  {
    "content": "bag_scan_period_ > ros::WallDuration(0)",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@662:10::662:49"
    ]
  },
  {
    "content": "base_scan != NULL",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@658:8::658:25"
    ]
  },
  {
    "content": "tf_msg != NULL",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@647:8::647:22"
    ]
  },
  {
    "content": "map_",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@626:10::626:14"
    ]
  },
  {
    "content": "laser_model_type_ == LASER_MODEL_LIKELIHOOD_FIELD",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@579:10::579:59"
    ]
  },
  {
    "content": "config.min_particles > config.max_particles",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@521:5::521:48"
    ]
  },
  {
    "content": "config.odom_model_type == \"omni-corrected\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@518:10::518:52"
    ]
  },
  {
    "content": "config.odom_model_type == \"diff-corrected\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@516:10::516:52"
    ]
  },
  {
    "content": "config.odom_model_type == \"omni\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@514:10::514:42"
    ]
  },
  {
    "content": "config.odom_model_type == \"diff\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@512:5::512:37"
    ]
  },
  {
    "content": "config.laser_model_type == \"likelihood_field_prob\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@509:10::509:60"
    ]
  },
  {
    "content": "config.laser_model_type == \"likelihood_field\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@507:10::507:55"
    ]
  },
  {
    "content": "config.laser_model_type == \"beam\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@505:5::505:38"
    ]
  },
  {
    "content": "config.restore_defaults",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@471:5::471:28",
      "src/navigation/move_base/src/move_base.cpp@217:7::217:30"
    ]
  },
  {
    "content": "first_reconfigure_call_",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@464:5::464:28"
    ]
  },
  {
    "content": "use_map_topic_",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@440:5::440:19"
    ]
  },
  {
    "content": "tmp_model_type == \"omni-corrected\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@387:10::387:44"
    ]
  },
  {
    "content": "tmp_model_type == \"diff-corrected\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@385:10::385:44"
    ]
  },
  {
    "content": "tmp_model_type == \"omni\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@383:10::383:34"
    ]
  },
  {
    "content": "tmp_model_type == \"diff\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@381:5::381:29"
    ]
  },
  {
    "content": "tmp_model_type == \"likelihood_field_prob\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@370:10::370:51"
    ]
  },
  {
    "content": "tmp_model_type == \"likelihood_field\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@368:10::368:46"
    ]
  },
  {
    "content": "tmp_model_type == \"beam\"",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@366:5::366:29"
    ]
  },
  {
    "content": "(argc == 3) && (std::string(argv[1]) == \"--run-from-bag\")",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@302:11::302:68"
    ]
  },
  {
    "content": "argc == 1",
    "locations": [
      "src/navigation/amcl/src/amcl_node.cpp@297:6::297:15"
    ]
  },
  {
    "content": "cost == LETHAL_OBSTACLE || cost == NO_INFORMATION",
    "locations": [
      "src/navigation/base_local_planner/src/costmap_model.cpp@134:7::134:56"
    ]
  },
  {
    "content": "line_cost < point_cost",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@156:9::156:31",
      "src/navigation/base_local_planner/src/costmap_model.cpp@123:9::123:31"
    ]
  },
  {
    "content": "point_cost < 0",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@153:9::153:23",
      "src/navigation/base_local_planner/src/costmap_model.cpp@120:9::120:23"
    ]
  },
  {
    "content": "line_cost < 0",
    "locations": [
      "src/navigation/base_local_planner/src/costmap_model.cpp@85:9::85:22",
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@86:7::86:20",
      "src/navigation/base_local_planner/src/costmap_model.cpp@101:7::101:20",
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@71:9::71:22"
    ]
  },
  {
    "content": "!costmap_.worldToMap(footprint[i + 1].x, footprint[i + 1].y, x1, y1)",
    "locations": [
      "src/navigation/base_local_planner/src/costmap_model.cpp@78:9::78:77"
    ]
  },
  {
    "content": "!costmap_.worldToMap(footprint[i].x, footprint[i].y, x0, y0)",
    "locations": [
      "src/navigation/base_local_planner/src/costmap_model.cpp@74:9::74:69"
    ]
  },
  {
    "content": "cost == LETHAL_OBSTACLE || cost == INSCRIBED_INFLATED_OBSTACLE || cost == NO_INFORMATION",
    "locations": [
      "src/navigation/base_local_planner/src/costmap_model.cpp@61:9::61:97"
    ]
  },
  {
    "content": "!costmap_.worldToMap(footprint.front().x, footprint.front().y, x1, y1)",
    "locations": [
      "src/navigation/base_local_planner/src/costmap_model.cpp@95:7::95:77"
    ]
  },
  {
    "content": "!costmap_.worldToMap(footprint.back().x, footprint.back().y, x0, y0)",
    "locations": [
      "src/navigation/base_local_planner/src/costmap_model.cpp@91:7::91:75"
    ]
  },
  {
    "content": "footprint.size() < 3",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@51:7::51:27",
      "src/navigation/base_local_planner/src/costmap_model.cpp@58:7::58:27"
    ]
  },
  {
    "content": "!costmap_.worldToMap(position.x, position.y, cell_x, cell_y)",
    "locations": [
      "src/navigation/base_local_planner/src/costmap_model.cpp@54:7::54:67"
    ]
  },
  {
    "content": "!costmap.worldToMap(new_x, new_y, x1, y1)",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@220:8::220:49",
      "src/navigation/base_local_planner/src/footprint_helper.cpp@235:5::235:46"
    ]
  },
  {
    "content": "!costmap.worldToMap(new_x, new_y, x0, y0)",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@213:7::213:48",
      "src/navigation/base_local_planner/src/footprint_helper.cpp@230:6::230:47"
    ]
  },
  {
    "content": "costmap.worldToMap(x_i, y_i, mx, my)",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@193:8::193:44"
    ]
  },
  {
    "content": "fill",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@241:5::241:9"
    ]
  },
  {
    "content": "footprint_spec.size() <= 1",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@191:6::191:32"
    ]
  },
  {
    "content": "footprint[i].y < min_pt.y",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@160:9::160:34"
    ]
  },
  {
    "content": "i >= footprint.size() - 1",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@147:8::147:33"
    ]
  },
  {
    "content": "i > 0",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@132:9::132:14",
      "src/navigation/costmap_2d/src/costmap_2d.cpp@375:10::375:15",
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@601:16::601:21"
    ]
  },
  {
    "content": "footprint[i].x > footprint[i + 1].x",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@128:8::128:43"
    ]
  },
  {
    "content": "num >= den",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@160:10::160:20",
      "src/navigation/base_local_planner/src/footprint_helper.cpp@111:8::111:18"
    ]
  },
  {
    "content": "deltax >= deltay",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@85:6::85:22",
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@130:8::130:24"
    ]
  },
  {
    "content": "y1 >= y0",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@74:6::74:14",
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@119:8::119:16"
    ]
  },
  {
    "content": "x1 >= x0",
    "locations": [
      "src/navigation/base_local_planner/src/footprint_helper.cpp@63:6::63:14",
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@108:8::108:16"
    ]
  },
  {
    "content": "stopped(base_odom, rot_stopped_vel, trans_stopped_vel)",
    "locations": [
      "src/navigation/base_local_planner/src/goal_functions.cpp@241:11::241:65"
    ]
  },
  {
    "content": "fabs(getGoalOrientationAngleDifference(global_pose, goal_th)) <= yaw_goal_tolerance",
    "locations": [
      "src/navigation/base_local_planner/src/goal_functions.cpp@239:9::239:92"
    ]
  },
  {
    "content": "getGoalPositionDistance(global_pose, goal_x, goal_y) <= xy_goal_tolerance",
    "locations": [
      "src/navigation/base_local_planner/src/goal_functions.cpp@237:7::237:80"
    ]
  },
  {
    "content": "global_plan.size() > 0",
    "locations": [
      "src/navigation/base_local_planner/src/goal_functions.cpp@211:10::211:32"
    ]
  },
  {
    "content": "global_plan.empty()",
    "locations": [
      "src/navigation/base_local_planner/src/goal_functions.cpp@179:8::179:27",
      "src/navigation/base_local_planner/src/goal_functions.cpp@97:8::97:27"
    ]
  },
  {
    "content": "!global_plan.empty()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@457:21::457:41",
      "src/navigation/base_local_planner/src/goal_functions.cpp@167:10::167:30"
    ]
  },
  {
    "content": "sq_dist <= sq_dist_threshold",
    "locations": [
      "src/navigation/base_local_planner/src/goal_functions.cpp@130:12::130:40"
    ]
  },
  {
    "content": "distance_sq < 1",
    "locations": [
      "src/navigation/base_local_planner/src/goal_functions.cpp@79:9::79:24"
    ]
  },
  {
    "content": "path.empty()",
    "locations": [
      "src/navigation/base_local_planner/src/goal_functions.cpp@52:7::52:19"
    ]
  },
  {
    "content": "! rotateToGoal(\n          global_pose,\n          robot_vel,\n          goal_th,\n          cmd_vel,\n          acc_lim,\n          sim_period,\n          limits,\n          obstacle_check)",
    "locations": [
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@255:10::263:25"
    ]
  },
  {
    "content": "! stopWithAccLimits(\n          global_pose,\n          robot_vel,\n          cmd_vel,\n          acc_lim,\n          sim_period,\n          obstacle_check)",
    "locations": [
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@239:10::245:25"
    ]
  },
  {
    "content": "! rotating_to_goal_ && !base_local_planner::stopped(base_odom, limits.rot_stopped_vel, limits.trans_stopped_vel)",
    "locations": [
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@238:8::238:121"
    ]
  },
  {
    "content": "fabs(angle) <= limits.yaw_goal_tolerance",
    "locations": [
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@98:8::98:48",
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@224:6::224:46"
    ]
  },
  {
    "content": "latch_xy_goal_tolerance_ && ! xy_tolerance_latch_",
    "locations": [
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@91:8::91:57",
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@217:6::217:56"
    ]
  },
  {
    "content": "! planner_util->getGoal(goal_pose)",
    "locations": [
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@208:6::208:41",
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@43:6::43:41",
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@77:6::77:41"
    ]
  },
  {
    "content": "valid_cmd",
    "locations": [
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@132:5::132:14",
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@186:6::186:15"
    ]
  },
  {
    "content": "ang_diff < 0",
    "locations": [
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@177:6::177:18"
    ]
  },
  {
    "content": "base_local_planner::stopped(base_odom, rot_stopped_vel, trans_stopped_vel)",
    "locations": [
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@100:10::100:84"
    ]
  },
  {
    "content": "(latch_xy_goal_tolerance_ && xy_tolerance_latch_) ||\n      base_local_planner::getGoalPositionDistance(global_pose, goal_x, goal_y) <= xy_goal_tolerance",
    "locations": [
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@87:6::88:99",
      "src/navigation/base_local_planner/src/latched_stop_rotate_controller.cpp@51:6::52:99"
    ]
  },
  {
    "content": "limits_.prune_plan",
    "locations": [
      "src/navigation/base_local_planner/src/local_planner_util.cpp@119:5::119:23"
    ]
  },
  {
    "content": "!base_local_planner::transformGlobalPlan(\n      *tf_,\n      global_plan_,\n      global_pose,\n      *costmap_,\n      global_frame_,\n      transformed_plan)",
    "locations": [
      "src/navigation/base_local_planner/src/local_planner_util.cpp@107:5::113:23"
    ]
  },
  {
    "content": "!initialized_",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@97:7::97:20",
      "src/navigation/base_local_planner/src/local_planner_util.cpp@92:5::92:18",
      "src/navigation/base_local_planner/src/local_planner_util.cpp@48:5::48:18",
      "src/navigation/navfn/src/navfn_ros.cpp@168:7::168:20",
      "src/navigation/navfn/src/navfn_ros.cpp@138:7::138:20",
      "src/navigation/rotate_recovery/src/rotate_recovery.cpp@49:5::49:18",
      "src/navigation/clear_costmap_recovery/src/clear_costmap_recovery.cpp@52:5::52:18",
      "src/navigation/navfn/src/navfn_ros.cpp@383:7::383:20",
      "src/navigation/navfn/src/navfn_ros.cpp@359:7::359:20",
      "src/navigation/navfn/src/navfn_ros.cpp@124:7::124:20",
      "src/navigation/clear_costmap_recovery/src/clear_costmap_recovery.cpp@81:5::81:18",
      "src/navigation/navfn/src/navfn_ros.cpp@60:7::60:20",
      "src/navigation/rotate_recovery/src/rotate_recovery.cpp@82:5::82:18",
      "src/navigation/navfn/src/navfn_ros.cpp@200:7::200:20"
    ]
  },
  {
    "content": "!setup_",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@209:7::209:14",
      "src/navigation/base_local_planner/src/local_planner_util.cpp@65:5::65:12"
    ]
  },
  {
    "content": "setup_ && restore_defaults",
    "locations": [
      "src/navigation/base_local_planner/src/local_planner_util.cpp@61:5::61:31"
    ]
  },
  {
    "content": "updatePathCell(current_cell, check_cell, costmap)",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@302:13::302:62",
      "src/navigation/base_local_planner/src/map_grid.cpp@272:13::272:62",
      "src/navigation/base_local_planner/src/map_grid.cpp@292:13::292:62",
      "src/navigation/base_local_planner/src/map_grid.cpp@282:13::282:62"
    ]
  },
  {
    "content": "!check_cell->target_mark",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@280:11::280:35",
      "src/navigation/base_local_planner/src/map_grid.cpp@269:11::269:35",
      "src/navigation/base_local_planner/src/map_grid.cpp@290:11::290:35",
      "src/navigation/base_local_planner/src/map_grid.cpp@300:11::300:35"
    ]
  },
  {
    "content": "current_cell->cy > 0",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@288:9::288:29"
    ]
  },
  {
    "content": "current_cell->cx > 0",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@267:9::267:29"
    ]
  },
  {
    "content": "started_path",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@232:12::232:24"
    ]
  },
  {
    "content": "costmap.worldToMap(g_x, g_y, map_x, map_y) && costmap.getCost(map_x, map_y) != costmap_2d::NO_INFORMATION",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@227:10::227:115",
      "src/navigation/base_local_planner/src/map_grid.cpp@191:10::191:115"
    ]
  },
  {
    "content": "local_goal_x >= 0 && local_goal_y >= 0",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@243:8::243:46"
    ]
  },
  {
    "content": "!started_path",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@237:8::237:21",
      "src/navigation/base_local_planner/src/map_grid.cpp@201:8::201:21"
    ]
  },
  {
    "content": "adjusted_global_plan.size() != global_plan.size()",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@182:8::182:57"
    ]
  },
  {
    "content": "sqdist > min_sq_resolution",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@149:10::149:36"
    ]
  },
  {
    "content": "global_plan_in.size() == 0",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@135:8::135:34"
    ]
  },
  {
    "content": "new_target_dist < check_cell->target_dist",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@117:8::117:49"
    ]
  },
  {
    "content": "! getCell(check_cell->cx, check_cell->cy).within_robot &&\n        (cost == costmap_2d::LETHAL_OBSTACLE ||\n         cost == costmap_2d::INSCRIBED_INFLATED_OBSTACLE ||\n         cost == costmap_2d::NO_INFORMATION)",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@108:7::111:44"
    ]
  },
  {
    "content": "map_.size() != size_x * size_y",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid.cpp@85:7::85:37"
    ]
  },
  {
    "content": "cost > 0",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid_cost_function.cpp@122:10::122:18"
    ]
  },
  {
    "content": "grid_dist == map_.obstacleCosts()",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid_cost_function.cpp@107:10::107:43"
    ]
  },
  {
    "content": "stop_on_failure_",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid_cost_function.cpp@106:8::106:24"
    ]
  },
  {
    "content": "! costmap_->worldToMap(px, py, cell_x, cell_y)",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid_cost_function.cpp@99:8::99:55"
    ]
  },
  {
    "content": "yshift_ != 0.0",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid_cost_function.cpp@93:8::93:22"
    ]
  },
  {
    "content": "xshift_ != 0.0",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid_cost_function.cpp@88:8::88:22"
    ]
  },
  {
    "content": "aggregationType_ == Product",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid_cost_function.cpp@77:6::77:33"
    ]
  },
  {
    "content": "is_local_goal_function_",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid_cost_function.cpp@62:6::62:29"
    ]
  },
  {
    "content": "cost_function_(cx, cy, path_cost, goal_cost, occ_cost, total_cost)",
    "locations": [
      "src/navigation/base_local_planner/src/map_grid_visualizer.cpp@69:12::69:78"
    ]
  },
  {
    "content": "! costmap->worldToMap(x, y, cell_x, cell_y)",
    "locations": [
      "src/navigation/base_local_planner/src/obstacle_cost_function.cpp@135:6::135:50"
    ]
  },
  {
    "content": "footprint_cost < 0",
    "locations": [
      "src/navigation/base_local_planner/src/obstacle_cost_function.cpp@129:6::129:24"
    ]
  },
  {
    "content": "vmag > scaling_speed",
    "locations": [
      "src/navigation/base_local_planner/src/obstacle_cost_function.cpp@108:6::108:26"
    ]
  },
  {
    "content": "sum_scores_",
    "locations": [
      "src/navigation/base_local_planner/src/obstacle_cost_function.cpp@94:7::94:18"
    ]
  },
  {
    "content": "f_cost < 0",
    "locations": [
      "src/navigation/base_local_planner/src/obstacle_cost_function.cpp@90:7::90:17"
    ]
  },
  {
    "content": "footprint_spec_.size() == 0",
    "locations": [
      "src/navigation/base_local_planner/src/obstacle_cost_function.cpp@78:6::78:33"
    ]
  },
  {
    "content": "world_model_ != NULL",
    "locations": [
      "src/navigation/base_local_planner/src/obstacle_cost_function.cpp@53:6::53:26"
    ]
  },
  {
    "content": "costmap != NULL",
    "locations": [
      "src/navigation/base_local_planner/src/obstacle_cost_function.cpp@47:6::47:21"
    ]
  },
  {
    "content": "odom_topic_ != \"\"",
    "locations": [
      "src/navigation/base_local_planner/src/odometry_helper_ros.cpp@86:7::86:26"
    ]
  },
  {
    "content": "odom_topic != odom_topic_",
    "locations": [
      "src/navigation/base_local_planner/src/odometry_helper_ros.cpp@82:5::82:32"
    ]
  },
  {
    "content": "(forward_pos_only_ && traj.xv_ < 0.0) ||\n      (forward_neg_only_ && traj.xv_ > 0.0) ||\n      (strafe_pos_only_  && traj.yv_ < 0.0) ||\n      (strafe_neg_only_  && traj.yv_ > 0.0) ||\n      (rot_pos_only_     && traj.thetav_ < 0.0) ||\n      (rot_neg_only_     && traj.thetav_ > 0.0)",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@167:6::172:47"
    ]
  },
  {
    "content": "rotating_neg_",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@155:10::155:23"
    ]
  },
  {
    "content": "rotating_pos_",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@145:10::145:23"
    ]
  },
  {
    "content": "strafing_neg_",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@135:10::135:23"
    ]
  },
  {
    "content": "strafing_pos_",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@125:10::125:23"
    ]
  },
  {
    "content": "t->thetav_ > 0",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@154:8::154:22"
    ]
  },
  {
    "content": "t->thetav_ < 0",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@144:8::144:22"
    ]
  },
  {
    "content": "t->yv_ > 0",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@134:8::134:18"
    ]
  },
  {
    "content": "t->yv_ < 0",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@124:8::124:18"
    ]
  },
  {
    "content": "forward_neg_",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@113:8::113:20"
    ]
  },
  {
    "content": "forward_pos_",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@105:8::105:20"
    ]
  },
  {
    "content": "fabs(t->xv_) <= min_vel_trans",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@122:6::122:35"
    ]
  },
  {
    "content": "t->xv_ < 0.0",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@104:6::104:18"
    ]
  },
  {
    "content": "sq_dist > oscillation_reset_dist_ * oscillation_reset_dist_ ||\n      fabs(th_diff) > oscillation_reset_angle_",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@78:6::79:46"
    ]
  },
  {
    "content": "forward_pos_only_ || forward_neg_only_\n        || strafe_pos_only_ || strafe_neg_only_\n        || rot_pos_only_ || rot_neg_only_",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@62:7::64:41"
    ]
  },
  {
    "content": "setOscillationFlags(traj, min_vel_trans)",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@58:8::58:48"
    ]
  },
  {
    "content": "traj->cost_ >= 0",
    "locations": [
      "src/navigation/base_local_planner/src/oscillation_cost_function.cpp@57:6::57:22"
    ]
  },
  {
    "content": "legal >= 0.0",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@676:5::676:17"
    ]
  },
  {
    "content": "det == 0",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@546:7::546:15"
    ]
  },
  {
    "content": "ptInPolygon(pt, poly)",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@521:13::521:34"
    ]
  },
  {
    "content": "cell_points != NULL",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@515:9::515:28",
      "src/navigation/base_local_planner/src/point_grid.cpp@419:9::419:28",
      "src/navigation/base_local_planner/src/point_grid.cpp@120:9::120:28"
    ]
  },
  {
    "content": "points_.empty()",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@413:7::413:22",
      "src/navigation/base_local_planner/src/point_grid.cpp@103:7::103:22",
      "src/navigation/base_local_planner/src/point_grid.cpp@509:7::509:22"
    ]
  },
  {
    "content": "poly.size() == 0",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@488:7::488:23"
    ]
  },
  {
    "content": "index >= laser_scan.cloud.points.size() - 1",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@463:9::463:52"
    ]
  },
  {
    "content": "vector_angle < 0 || vector_angle >= total_rads",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@456:9::456:55"
    ]
  },
  {
    "content": "vector_angle < 0",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@450:9::450:25"
    ]
  },
  {
    "content": "!laser_scan.cloud.points.empty()",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@436:7::436:39"
    ]
  },
  {
    "content": "ptInScan(pt, laser_scan)",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@425:13::425:37"
    ]
  },
  {
    "content": "laser_scan.cloud.points.size() == 0",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@393:7::393:42",
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@216:7::216:42"
    ]
  },
  {
    "content": "sq_dist >= sq_obstacle_range_",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@203:11::203:40",
      "src/navigation/base_local_planner/src/point_grid.cpp@380:11::380:40"
    ]
  },
  {
    "content": "cloud[i].z > max_z_",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@372:11::372:30",
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@195:11::195:30"
    ]
  },
  {
    "content": "laser_scans.empty()",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@361:7::361:26"
    ]
  },
  {
    "content": "sq_dist < sq_min_separation_",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@303:9::303:37",
      "src/navigation/base_local_planner/src/point_grid.cpp@330:9::330:37",
      "src/navigation/base_local_planner/src/point_grid.cpp@312:9::312:37",
      "src/navigation/base_local_planner/src/point_grid.cpp@348:9::348:37",
      "src/navigation/base_local_planner/src/point_grid.cpp@294:9::294:37",
      "src/navigation/base_local_planner/src/point_grid.cpp@339:9::339:37",
      "src/navigation/base_local_planner/src/point_grid.cpp@321:9::321:37",
      "src/navigation/base_local_planner/src/point_grid.cpp@285:9::285:37"
    ]
  },
  {
    "content": "gx > 0 && gy > 0",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@344:7::344:23"
    ]
  },
  {
    "content": "gy > 0",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@335:7::335:13"
    ]
  },
  {
    "content": "gx < width_ - 1 && gy < height_ - 1",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@308:7::308:42"
    ]
  },
  {
    "content": "gx > 0 && gy < height_ - 1",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@290:7::290:33"
    ]
  },
  {
    "content": "gx > 0",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@281:7::281:13"
    ]
  },
  {
    "content": "nearestNeighborDistance(pt) < sq_min_separation_",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@243:7::243:55"
    ]
  },
  {
    "content": "!gridCoords(pt, gx, gy)",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@239:7::239:30"
    ]
  },
  {
    "content": "j < x_steps - 1",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@227:11::227:26"
    ]
  },
  {
    "content": "!cell.empty()",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@224:11::224:24"
    ]
  },
  {
    "content": "!gridCoords(upper_left, gx, gy)",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@201:7::201:38"
    ]
  },
  {
    "content": "!gridCoords(lower_right, gx, gy)",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@197:7::197:39"
    ]
  },
  {
    "content": "!gridCoords(lower_left, gx, gy)",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@192:7::192:38"
    ]
  },
  {
    "content": "all_left",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@160:11::160:19",
      "src/navigation/base_local_planner/src/point_grid.cpp@171:9::171:17"
    ]
  },
  {
    "content": "all_right",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@167:9::167:18",
      "src/navigation/base_local_planner/src/point_grid.cpp@154:11::154:20"
    ]
  },
  {
    "content": "orient(poly[i], poly[i + 1], pt) > 0",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@153:9::153:45"
    ]
  },
  {
    "content": "orient(poly[poly.size() - 1], poly[0], pt) > 0",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@166:7::166:53"
    ]
  },
  {
    "content": "poly.size() < 3",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@143:7::143:22"
    ]
  },
  {
    "content": "pt.x > i_lower_left.x && pt.x < i_upper_right.x && pt.y > i_lower_left.y && pt.y < i_upper_right.y",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@127:15::127:113"
    ]
  },
  {
    "content": "pt.x > c_lower_left.x && pt.x < c_upper_right.x && pt.y > c_lower_left.y && pt.y < c_upper_right.y",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@125:13::125:111"
    ]
  },
  {
    "content": "poly.size() < 2",
    "locations": [
      "src/navigation/base_local_planner/src/point_grid.cpp@62:5::62:20"
    ]
  },
  {
    "content": "best_traj_cost < 0 || loop_traj_cost < best_traj_cost",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@113:14::113:67"
    ]
  },
  {
    "content": "max_samples_ > 0 && count >= max_samples_",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@119:12::119:53"
    ]
  },
  {
    "content": "loop_traj_cost >= 0",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@111:12::111:31"
    ]
  },
  {
    "content": "all_explored != NULL",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@106:12::106:32"
    ]
  },
  {
    "content": "gen_success == false",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@101:12::101:32"
    ]
  },
  {
    "content": "best_traj_cost >= 0",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@123:10::123:29",
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@136:10::136:29"
    ]
  },
  {
    "content": "loop_critic_p->prepare() == false",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@89:10::89:43"
    ]
  },
  {
    "content": "traj_cost > best_traj_cost",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@70:12::70:38"
    ]
  },
  {
    "content": "best_traj_cost > 0",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@68:10::68:28"
    ]
  },
  {
    "content": "cost != 0",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@64:10::64:19"
    ]
  },
  {
    "content": "cost < 0",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@59:10::59:18"
    ]
  },
  {
    "content": "score_function_p->getScale() == 0",
    "locations": [
      "src/navigation/base_local_planner/src/simple_scored_sampling_planner.cpp@55:10::55:43"
    ]
  },
  {
    "content": "vel[i] < sample_target_vel[i]",
    "locations": [
      "src/navigation/base_local_planner/src/simple_trajectory_generator.cpp@269:8::269:37"
    ]
  },
  {
    "content": "continued_acceleration_",
    "locations": [
      "src/navigation/base_local_planner/src/simple_trajectory_generator.cpp@219:6::219:29",
      "src/navigation/base_local_planner/src/simple_trajectory_generator.cpp@239:8::239:31"
    ]
  },
  {
    "content": "limits_->max_trans_vel >=0 && vmag - eps > limits_->max_trans_vel",
    "locations": [
      "src/navigation/base_local_planner/src/simple_trajectory_generator.cpp@198:6::198:71"
    ]
  },
  {
    "content": "(limits_->min_trans_vel >= 0 && vmag + eps < limits_->min_trans_vel) &&\n      (limits_->min_rot_vel >= 0 && fabs(sample_target_vel[2]) + eps < limits_->min_rot_vel)",
    "locations": [
      "src/navigation/base_local_planner/src/simple_trajectory_generator.cpp@193:6::194:92"
    ]
  },
  {
    "content": "generateTrajectory(\n        pos_,\n        vel_,\n        sample_params_[next_sample_index_],\n        comp_traj)",
    "locations": [
      "src/navigation/base_local_planner/src/simple_trajectory_generator.cpp@164:8::168:18"
    ]
  },
  {
    "content": "hasMoreTrajectories()",
    "locations": [
      "src/navigation/base_local_planner/src/simple_trajectory_generator.cpp@163:6::163:27"
    ]
  },
  {
    "content": "! use_dwa_",
    "locations": [
      "src/navigation/base_local_planner/src/simple_trajectory_generator.cpp@91:8::91:19"
    ]
  },
  {
    "content": "vsamples[0] * vsamples[1] * vsamples[2] > 0",
    "locations": [
      "src/navigation/base_local_planner/src/simple_trajectory_generator.cpp@86:6::86:49"
    ]
  },
  {
    "content": "obstacle_grid_.getVoxel(i, j, k)",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@273:13::273:45"
    ]
  },
  {
    "content": "worldToMap3D(wpx, wpy, wpz, point_x, point_y, point_z)",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@263:9::263:63"
    ]
  },
  {
    "content": "wpz < 0.0",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@251:14::251:23"
    ]
  },
  {
    "content": "wpz >= max_z_",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@240:9::240:22"
    ]
  },
  {
    "content": "!worldToMap3D(ox, oy, oz, sensor_x, sensor_y, sensor_z)",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@224:7::224:62"
    ]
  },
  {
    "content": "obstacle_grid_.getVoxelColumn(x, y)",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@175:7::175:42"
    ]
  },
  {
    "content": "!worldToMap2D(footprint[i + 1].x, footprint[i + 1].y, x1, y1)",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@65:9::65:70"
    ]
  },
  {
    "content": "!worldToMap2D(footprint[i].x, footprint[i].y, x0, y0)",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@61:9::61:62"
    ]
  },
  {
    "content": "!worldToMap2D(footprint.front().x, footprint.front().y, x1, y1)",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@81:7::81:70"
    ]
  },
  {
    "content": "!worldToMap2D(footprint.back().x, footprint.back().y, x0, y0)",
    "locations": [
      "src/navigation/base_local_planner/src/voxel_grid_model.cpp@77:7::77:68"
    ]
  },
  {
    "content": "grid[index]!=NO_INFORMATION",
    "locations": [
      "src/navigation/clear_costmap_recovery/src/clear_costmap_recovery.cpp@146:9::146:36"
    ]
  },
  {
    "content": "xrange && y>start_y && y<end_y",
    "locations": [
      "src/navigation/clear_costmap_recovery/src/clear_costmap_recovery.cpp@143:9::143:39"
    ]
  },
  {
    "content": "slash != std::string::npos",
    "locations": [
      "src/navigation/clear_costmap_recovery/src/clear_costmap_recovery.cpp@112:7::112:35",
      "src/robot_state_publisher/src/joint_state_listener.cpp@147:6::147:32"
    ]
  },
  {
    "content": "!costmap->getRobotPose(pose)",
    "locations": [
      "src/navigation/clear_costmap_recovery/src/clear_costmap_recovery.cpp@100:5::100:33"
    ]
  },
  {
    "content": "global_costmap_ == NULL || local_costmap_ == NULL",
    "locations": [
      "src/navigation/rotate_recovery/src/rotate_recovery.cpp@87:5::87:54",
      "src/navigation/clear_costmap_recovery/src/clear_costmap_recovery.cpp@86:5::86:54"
    ]
  },
  {
    "content": "weight_ != cost_scaling_factor || inflation_radius_ != inflation_radius",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@367:6::367:77"
    ]
  },
  {
    "content": "cached_costs_[i]",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@357:10::357:26"
    ]
  },
  {
    "content": "cached_distances_[i]",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@345:10::345:30"
    ]
  },
  {
    "content": "cached_distances_",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@348:8::348:25"
    ]
  },
  {
    "content": "cached_costs_ != NULL",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@353:6::353:27"
    ]
  },
  {
    "content": "cached_distances_ != NULL",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@341:6::341:31"
    ]
  },
  {
    "content": "cell_inflation_radius_ != cached_cell_inflation_radius_",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@310:6::310:61"
    ]
  },
  {
    "content": "cell_inflation_radius_ == 0",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@306:6::306:33"
    ]
  },
  {
    "content": "distance > cell_inflation_radius_",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@296:8::296:41"
    ]
  },
  {
    "content": "!seen_[index]",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@290:6::290:19"
    ]
  },
  {
    "content": "my < size_y - 1",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@270:10::270:25"
    ]
  },
  {
    "content": "mx < size_x - 1",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@268:10::268:25"
    ]
  },
  {
    "content": "my > 0",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@266:10::266:16"
    ]
  },
  {
    "content": "mx > 0",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@264:10::264:16"
    ]
  },
  {
    "content": "old_cost == NO_INFORMATION && cost >= INSCRIBED_INFLATED_OBSTACLE",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@258:10::258:75"
    ]
  },
  {
    "content": "seen_[index]",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@243:10::243:22"
    ]
  },
  {
    "content": "cost == LETHAL_OBSTACLE",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@223:10::223:33"
    ]
  },
  {
    "content": "seen_size_ != size_x * size_y",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@189:11::189:40"
    ]
  },
  {
    "content": "seen_ == NULL",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@184:6::184:19"
    ]
  },
  {
    "content": "!enabled_ || (cell_inflation_radius_ == 0)",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@175:6::175:48"
    ]
  },
  {
    "content": "need_reinflation_",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@128:6::128:23"
    ]
  },
  {
    "content": "seen_",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@119:6::119:11",
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@77:8::77:13"
    ]
  },
  {
    "content": "enabled_ != config.enabled",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@104:6::104:32"
    ]
  },
  {
    "content": "dsrv_ != NULL",
    "locations": [
      "src/navigation/costmap_2d/plugins/inflation_layer.cpp@86:8::86:21"
    ]
  },
  {
    "content": "observation_subscribers_[i] != NULL",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@583:8::583:43",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@597:8::597:43"
    ]
  },
  {
    "content": "observation_buffers_[i]",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@589:8::589:31"
    ]
  },
  {
    "content": "!worldToMap(wx, wy, x1, y1)",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@566:8::566:35"
    ]
  },
  {
    "content": "wy > map_end_y",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@555:8::555:22"
    ]
  },
  {
    "content": "wx > map_end_x",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@549:8::549:22"
    ]
  },
  {
    "content": "wy < origin_y",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@541:8::541:21"
    ]
  },
  {
    "content": "wx < origin_x",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@535:8::535:21"
    ]
  },
  {
    "content": "!worldToMap(ox, oy, x0, y0)",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@507:6::507:33"
    ]
  },
  {
    "content": "clearing",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@148:8::148:16",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@462:6::462:14",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@454:6::454:14"
    ]
  },
  {
    "content": "marking",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@452:6::452:13",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@144:8::144:15",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@460:6::460:13"
    ]
  },
  {
    "content": "footprint_clearing_enabled_",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@432:6::432:33"
    ]
  },
  {
    "content": "!enabled_",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@429:6::429:15",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@345:6::345:15",
      "src/navigation/costmap_2d/plugins/static_layer.cpp@296:6::296:15",
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@223:8::223:17",
      "src/navigation/costmap_2d/src/costmap_layer.cpp@75:6::75:15",
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@121:6::121:15",
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@240:10::240:19",
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@107:8::107:17",
      "src/navigation/costmap_2d/src/costmap_layer.cpp@112:6::112:15",
      "src/navigation/costmap_2d/src/costmap_layer.cpp@48:6::48:15",
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@299:8::299:17",
      "src/navigation/costmap_2d/src/costmap_layer.cpp@93:6::93:15"
    ]
  },
  {
    "content": "!footprint_clearing_enabled_",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@418:8::418:36"
    ]
  },
  {
    "content": "!worldToMap(px, py, mx, my)",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@400:10::400:37"
    ]
  },
  {
    "content": "sq_dist >= sq_obstacle_range",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@392:10::392:38",
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@164:10::164:38"
    ]
  },
  {
    "content": "pz > max_obstacle_height_",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@381:10::381:35"
    ]
  },
  {
    "content": "rolling_window_",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@119:6::119:21",
      "src/navigation/costmap_2d/src/layered_costmap.cpp@86:6::86:21",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@343:6::343:21"
    ]
  },
  {
    "content": "!sensor_msgs::convertPointCloudToPointCloud2(*message, cloud2)",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@319:6::319:68"
    ]
  },
  {
    "content": "!std::isfinite(range) && range > 0",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@286:8::286:42"
    ]
  },
  {
    "content": "dsrv_",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@56:6::56:11",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@241:8::241:13"
    ]
  },
  {
    "content": "inf_is_valid",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@204:10::204:22",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@186:10::186:22",
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@165:10::165:22"
    ]
  },
  {
    "content": "sensor_frame != \"\"",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@218:8::218:26"
    ]
  },
  {
    "content": "data_type == \"PointCloud\"",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@181:13::181:38"
    ]
  },
  {
    "content": "data_type == \"LaserScan\"",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@157:8::157:32"
    ]
  },
  {
    "content": "source_node.searchParam(\"raytrace_range\", raytrace_range_param_name)",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@128:8::128:76"
    ]
  },
  {
    "content": "source_node.searchParam(\"obstacle_range\", obstacle_range_param_name)",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@121:8::121:76"
    ]
  },
  {
    "content": "!(data_type == \"PointCloud2\" || data_type == \"PointCloud\" || data_type == \"LaserScan\")",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@111:8::111:94"
    ]
  },
  {
    "content": "!sensor_frame.empty()",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@106:8::106:29"
    ]
  },
  {
    "content": "track_unknown_space",
    "locations": [
      "src/navigation/costmap_2d/plugins/obstacle_layer.cpp@61:6::61:25"
    ]
  },
  {
    "content": "!use_maximum_",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@336:14::336:27",
      "src/navigation/costmap_2d/plugins/static_layer.cpp@302:8::302:21"
    ]
  },
  {
    "content": "worldToMap(p.x(), p.y(), mx, my)",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@334:12::334:44"
    ]
  },
  {
    "content": "!layered_costmap_->isRolling()",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@299:6::299:36",
      "src/navigation/costmap_2d/plugins/static_layer.cpp@271:5::271:37",
      "src/navigation/costmap_2d/plugins/static_layer.cpp@140:6::140:36"
    ]
  },
  {
    "content": "!map_received_",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@293:6::293:20"
    ]
  },
  {
    "content": "!map_received_ || !(has_updated_data_ || has_extra_bounds_)",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@272:8::272:67"
    ]
  },
  {
    "content": "first_map_only_",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@217:6::217:21",
      "src/navigation/costmap_2d/plugins/static_layer.cpp@257:6::257:21"
    ]
  },
  {
    "content": "subscribe_to_updates_",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@101:8::101:29",
      "src/navigation/costmap_2d/plugins/static_layer.cpp@251:6::251:27"
    ]
  },
  {
    "content": "size_x_ != size_x || size_y_ != size_y ||\n           resolution_ != new_map->info.resolution ||\n           origin_x_ != new_map->info.origin.position.x ||\n           origin_y_ != new_map->info.origin.position.y",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@184:11::187:55"
    ]
  },
  {
    "content": "!layered_costmap_->isRolling() && (master->getSizeInCellsX() != size_x ||\n      master->getSizeInCellsY() != size_y ||\n      master->getResolution() != new_map->info.resolution ||\n      master->getOriginX() != new_map->info.origin.position.x ||\n      master->getOriginY() != new_map->info.origin.position.y ||\n      !layered_costmap_->isSizeLocked())",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@172:6::177:40"
    ]
  },
  {
    "content": "trinary_costmap_",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@157:11::157:27"
    ]
  },
  {
    "content": "value >= lethal_threshold_",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@155:11::155:37"
    ]
  },
  {
    "content": "!track_unknown_space_ && value == unknown_cost_value_",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@153:11::153:64"
    ]
  },
  {
    "content": "track_unknown_space_ && value == unknown_cost_value_",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@151:6::151:58"
    ]
  },
  {
    "content": "config.enabled != enabled_",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@126:6::126:32"
    ]
  },
  {
    "content": "map_sub_.getTopic() != ros::names::resolve(map_topic)",
    "locations": [
      "src/navigation/costmap_2d/plugins/static_layer.cpp@84:6::84:59"
    ]
  },
  {
    "content": "publish_clearing_points",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@364:10::364:33",
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@287:6::287:29",
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@375:6::375:29"
    ]
  },
  {
    "content": "worldToMap3DFloat(wpx, wpy, wpz, point_x, point_y, point_z)",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@353:8::353:67"
    ]
  },
  {
    "content": "wpy > map_end_y",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@343:8::343:23"
    ]
  },
  {
    "content": "wpx > map_end_x",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@339:8::339:23"
    ]
  },
  {
    "content": "wpy < origin_y_",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@333:8::333:23"
    ]
  },
  {
    "content": "wpx < origin_x_",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@329:8::329:23"
    ]
  },
  {
    "content": "wpz < origin_z_",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@322:13::322:28"
    ]
  },
  {
    "content": "wpz > max_obstacle_height_",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@316:8::316:34"
    ]
  },
  {
    "content": "!worldToMap3DFloat(ox, oy, oz, sensor_x, sensor_y, sensor_z)",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@277:6::277:66"
    ]
  },
  {
    "content": "clearing_observation.cloud_->points.size() == 0",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@269:6::269:53"
    ]
  },
  {
    "content": "clear_no_info || *current != NO_INFORMATION",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@252:12::252:55"
    ]
  },
  {
    "content": "*current != LETHAL_OBSTACLE",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@250:10::250:37"
    ]
  },
  {
    "content": "!worldToMap(start_x, start_y, map_sx, map_sy) || !worldToMap(end_x, end_y, map_ex, map_ey)",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@239:6::239:96"
    ]
  },
  {
    "content": "!worldToMap(wx, wy, mx, my)",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@219:6::219:33"
    ]
  },
  {
    "content": "!worldToMap3D(cloud.points[i].x, cloud.points[i].y, origin_z_, mx, my, mz)",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@171:12::171:86"
    ]
  },
  {
    "content": "voxel_grid_.markVoxelInMap(mx, my, mz, mark_threshold_)",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@180:10::180:65"
    ]
  },
  {
    "content": "cloud.points[i].z < origin_z_",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@169:10::169:39"
    ]
  },
  {
    "content": "cloud.points[i].z > max_obstacle_height_",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@155:10::155:50"
    ]
  },
  {
    "content": "publish_voxel_",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@190:6::190:20",
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@61:6::61:20"
    ]
  },
  {
    "content": "voxel_dsrv_",
    "locations": [
      "src/navigation/costmap_2d/plugins/voxel_layer.cpp@77:6::77:17"
    ]
  },
  {
    "content": "!fp",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@465:6::465:9",
      "src/navigation/navfn/src/navfn.cpp@1084:10::1084:13",
      "src/navigation/navfn/src/navfn.cpp@1072:10::1072:13"
    ]
  },
  {
    "content": "polygon_cells[i].y > max_pt.y",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@410:15::410:44"
    ]
  },
  {
    "content": "polygon_cells[i].y < min_pt.y",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@408:10::408:39"
    ]
  },
  {
    "content": "i >= polygon_cells.size() - 1",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@391:8::391:37"
    ]
  },
  {
    "content": "polygon_cells[i].x > polygon_cells[i + 1].x",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@369:8::369:51"
    ]
  },
  {
    "content": "polygon.size() < 3",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@358:6::358:24"
    ]
  },
  {
    "content": "!polygon.empty()",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@347:6::347:22"
    ]
  },
  {
    "content": "!worldToMap(polygon[i].x, polygon[i].y, loc.x, loc.y)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@318:8::318:61"
    ]
  },
  {
    "content": "wy > resolution_ * size_y_ + origin_y_",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@250:11::250:49"
    ]
  },
  {
    "content": "wy < origin_y_",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@246:6::246:20"
    ]
  },
  {
    "content": "wx > resolution_ * size_x_ + origin_x_",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@237:11::237:49"
    ]
  },
  {
    "content": "wx < origin_x_",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@233:6::233:20"
    ]
  },
  {
    "content": "mx < size_x_ && my < size_y_",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@216:6::216:34"
    ]
  },
  {
    "content": "wx < origin_x_ || wy < origin_y_",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@210:6::210:38"
    ]
  },
  {
    "content": "this == &map",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@105:6::105:18",
      "src/navigation/costmap_2d/src/costmap_2d.cpp@140:6::140:18"
    ]
  },
  {
    "content": "!map.worldToMap(win_origin_x, win_origin_y, lower_left_x, lower_left_y)\n      || !map.worldToMap(win_origin_x + win_size_x, win_origin_y + win_size_y, upper_right_x, upper_right_y)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d.cpp@116:6::117:108"
    ]
  },
  {
    "content": "always_send_full_costmap_ || grid_.info.resolution != resolution ||\n      grid_.info.width != costmap_->getSizeInCellsX() ||\n      grid_.info.height != costmap_->getSizeInCellsY() ||\n      saved_origin_x_ != costmap_->getOriginX() ||\n      saved_origin_y_ != costmap_->getOriginY()",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_publisher.cpp@130:6::134:47"
    ]
  },
  {
    "content": "costmap_pub_.getNumSubscribers() == 0",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_publisher.cpp@122:6::122:43"
    ]
  },
  {
    "content": "cost_translation_table_ == NULL",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_publisher.cpp@56:6::56:37"
    ]
  },
  {
    "content": "!getRobotPose(global_pose)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@551:6::551:32"
    ]
  },
  {
    "content": "current_time.toSec() - global_pose.stamp_.toSec() > transform_tolerance_",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@537:6::537:78"
    ]
  },
  {
    "content": "stopped_",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@446:6::446:14"
    ]
  },
  {
    "content": "getRobotPose (pose)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@423:8::423:27"
    ]
  },
  {
    "content": "!stop_updates_",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@419:6::419:20"
    ]
  },
  {
    "content": "last_publish_ + publish_cycle < now",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@403:10::403:45"
    ]
  },
  {
    "content": "r.cycleTime() > ros::Duration(1 / frequency)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@411:8::411:52"
    ]
  },
  {
    "content": "publish_cycle.toSec() > 0 && layered_costmap_->isInitialized()",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@396:8::396:70"
    ]
  },
  {
    "content": "frequency == 0.0",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@378:6::378:22"
    ]
  },
  {
    "content": "fabs((old_pose_.getOrigin() - new_pose.getOrigin()).length()) < 1e-3\n      && fabs(old_pose_.getRotation().angle(new_pose.getRotation())) < 1e-3",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@362:11::363:75"
    ]
  },
  {
    "content": "!getRobotPose(new_pose)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@356:6::356:29"
    ]
  },
  {
    "content": "makeFootprintFromString(new_config.footprint, new_footprint)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@324:8::324:68"
    ]
  },
  {
    "content": "new_config.footprint == old_config.footprint &&\n      new_config.robot_radius == old_config.robot_radius",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@315:6::316:56"
    ]
  },
  {
    "content": "footprint_padding_ != config.footprint_padding",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@295:6::295:52"
    ]
  },
  {
    "content": "!layered_costmap_->isSizeLocked()",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@287:6::287:39"
    ]
  },
  {
    "content": "map_publish_frequency > 0",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@277:6::277:31"
    ]
  },
  {
    "content": "map_update_thread_ != NULL",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@179:6::179:32",
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@267:6::267:32"
    ]
  },
  {
    "content": "nh.getParam(\"map_type\", s) && s == \"voxel\"",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@217:6::217:48"
    ]
  },
  {
    "content": "nh.getParam(\"static_map\", flag) && flag",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@202:6::202:45"
    ]
  },
  {
    "content": "publisher_ != NULL",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@184:6::184:24"
    ]
  },
  {
    "content": "last_error + ros::Duration(5.0) < ros::Time::now()",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@90:8::90:58"
    ]
  },
  {
    "content": "!private_nh.searchParam(\"published_footprint_topic\", topic_param)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@140:6::140:71"
    ]
  },
  {
    "content": "!private_nh.searchParam(\"footprint_topic\", topic_param)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@132:6::132:61"
    ]
  },
  {
    "content": "private_nh.hasParam(\"plugins\")",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@114:6::114:36"
    ]
  },
  {
    "content": "!private_nh.hasParam(\"plugins\")",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@109:6::109:37"
    ]
  },
  {
    "content": "should_delete",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@59:6::59:19"
    ]
  },
  {
    "content": "!old_h.hasParam(name)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_2d_ros.cpp@53:6::53:27"
    ]
  },
  {
    "content": "sum >= costmap_2d::INSCRIBED_INFLATED_OBSTACLE",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_layer.cpp@133:12::133:58"
    ]
  },
  {
    "content": "old_cost == NO_INFORMATION",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_layer.cpp@128:10::128:36"
    ]
  },
  {
    "content": "costmap_[it] == NO_INFORMATION",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_layer.cpp@122:10::122:40",
      "src/navigation/costmap_2d/src/costmap_layer.cpp@59:10::59:40"
    ]
  },
  {
    "content": "costmap_[it] != NO_INFORMATION",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_layer.cpp@103:10::103:40"
    ]
  },
  {
    "content": "old_cost == NO_INFORMATION || old_cost < costmap_[it]",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_layer.cpp@65:10::65:63"
    ]
  },
  {
    "content": "!has_extra_bounds_",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_layer.cpp@32:8::32:26"
    ]
  },
  {
    "content": "intersects(polygon2, polygon1[i].x, polygon1[i].y)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_math.cpp@81:8::81:58"
    ]
  },
  {
    "content": "((yi > testy) != (yj > testy)) && (testx < (xj - xi) * (testy - yi) / (yj - yi) + xi)",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_math.cpp@72:8::72:93"
    ]
  },
  {
    "content": "param > 1",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_math.cpp@50:11::50:20"
    ]
  },
  {
    "content": "param < 0",
    "locations": [
      "src/navigation/costmap_2d/src/costmap_math.cpp@45:6::45:15"
    ]
  },
  {
    "content": "point.getType() != XmlRpc::XmlRpcValue::TypeArray ||\n        point.size() != 2",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@303:8::304:25"
    ]
  },
  {
    "content": "footprint_xmlrpc.getType() != XmlRpc::XmlRpcValue::TypeArray ||\n      footprint_xmlrpc.size() < 3",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@287:6::288:33"
    ]
  },
  {
    "content": "value.getType() != XmlRpc::XmlRpcValue::TypeInt &&\n      value.getType() != XmlRpc::XmlRpcValue::TypeDouble",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@272:6::273:56"
    ]
  },
  {
    "content": "first",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@255:8::255:13"
    ]
  },
  {
    "content": "makeFootprintFromString(std::string(footprint_xmlrpc), points)",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@224:10::224:72"
    ]
  },
  {
    "content": "footprint_xmlrpc.getType() == XmlRpc::XmlRpcValue::TypeString",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@222:8::222:69"
    ]
  },
  {
    "content": "nh.searchParam(\"robot_radius\", full_radius_param_name)",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@235:11::235:65"
    ]
  },
  {
    "content": "nh.searchParam(\"footprint\", full_param_name)",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@218:6::218:50"
    ]
  },
  {
    "content": "vvf[ i ].size() == 2",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@191:8::191:28"
    ]
  },
  {
    "content": "vvf.size() < 3",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@183:6::183:20"
    ]
  },
  {
    "content": "error != \"\"",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@175:6::175:17"
    ]
  },
  {
    "content": "footprint.size() <= 2",
    "locations": [
      "src/navigation/costmap_2d/src/footprint.cpp@46:6::46:27"
    ]
  },
  {
    "content": "minx_ > prev_minx || miny_ > prev_miny || maxx_ < prev_maxx || maxy_ < prev_maxy",
    "locations": [
      "src/navigation/costmap_2d/src/layered_costmap.cpp@107:8::107:88"
    ]
  },
  {
    "content": "xn < x0 || yn < y0",
    "locations": [
      "src/navigation/costmap_2d/src/layered_costmap.cpp@128:6::128:24"
    ]
  },
  {
    "content": "plugins_.size() == 0",
    "locations": [
      "src/navigation/costmap_2d/src/layered_costmap.cpp@93:6::93:26"
    ]
  },
  {
    "content": "track_unknown",
    "locations": [
      "src/navigation/costmap_2d/src/layered_costmap.cpp@53:6::53:19"
    ]
  },
  {
    "content": "!current",
    "locations": [
      "src/navigation/costmap_2d/src/observation_buffer.cpp@244:6::244:14"
    ]
  },
  {
    "content": "expected_update_rate_ == ros::Duration(0.0)",
    "locations": [
      "src/navigation/costmap_2d/src/observation_buffer.cpp@240:6::240:49"
    ]
  },
  {
    "content": "(last_updated_ - pcl_conversions::fromPCL(obs.cloud_->header).stamp) > observation_keep_time_",
    "locations": [
      "src/navigation/costmap_2d/src/observation_buffer.cpp@229:10::229:103"
    ]
  },
  {
    "content": "observation_keep_time_ == ros::Duration(0.0)",
    "locations": [
      "src/navigation/costmap_2d/src/observation_buffer.cpp@217:8::217:52"
    ]
  },
  {
    "content": "!observation_list_.empty()",
    "locations": [
      "src/navigation/costmap_2d/src/observation_buffer.cpp@213:6::213:32"
    ]
  },
  {
    "content": "global_frame_cloud.points[i].z <= max_obstacle_height_\n          && global_frame_cloud.points[i].z >= min_obstacle_height_",
    "locations": [
      "src/navigation/costmap_2d/src/observation_buffer.cpp@169:10::170:67"
    ]
  },
  {
    "content": "!tf_.waitForTransform(new_global_frame, global_frame_, transform_time, ros::Duration(tf_tolerance_),\n                            ros::Duration(0.01), &tf_error)",
    "locations": [
      "src/navigation/costmap_2d/src/observation_buffer.cpp@71:6::72:59"
    ]
  },
  {
    "content": "t->cost_<0",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@333:15::333:25"
    ]
  },
  {
    "content": "result_traj_.cost_ < 0",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@360:8::360:30"
    ]
  },
  {
    "content": "publish_cost_grid_pc_",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@351:8::351:29"
    ]
  },
  {
    "content": "publish_traj_pc_",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@321:7::321:23"
    ]
  },
  {
    "content": "sq_dist > forward_point_distance_ * forward_point_distance_ * cheat_factor_",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@277:8::277:83"
    ]
  },
  {
    "content": "cost >= 0",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@230:7::230:16"
    ]
  },
  {
    "content": "path_cost == path_costs_.obstacleCosts() ||\n        path_cost == path_costs_.unreachableCellCosts() ||\n        occ_cost >= costmap_2d::INSCRIBED_INFLATED_OBSTACLE",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@190:8::192:59"
    ]
  },
  {
    "content": "controller_frequency > 0",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@138:9::138:33"
    ]
  },
  {
    "content": "!private_nh.searchParam(\"controller_frequency\", controller_frequency_param_name)",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@133:7::133:87"
    ]
  },
  {
    "content": "vth_samp <= 0",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@103:8::103:21"
    ]
  },
  {
    "content": "vy_samp <= 0",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@97:8::97:20"
    ]
  },
  {
    "content": "vx_samp <= 0",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner.cpp@91:8::91:20"
    ]
  },
  {
    "content": "isOk",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@291:10::291:14"
    ]
  },
  {
    "content": "latchedStopRotateController_.isPositionReached(&planner_util_, current_pose_)",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@274:8::274:85"
    ]
  },
  {
    "content": "transformed_plan.empty()",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@265:7::265:31"
    ]
  },
  {
    "content": "! planner_util_.getLocalPlan(current_pose_, transformed_plan)",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@259:8::259:70"
    ]
  },
  {
    "content": "! costmap_ros_->getRobotPose(current_pose_)",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@254:8::254:52",
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@148:8::148:52"
    ]
  },
  {
    "content": "path.cost_ < 0",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@216:7::216:21"
    ]
  },
  {
    "content": "! isInitialized()",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@179:7::179:24",
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@132:8::132:25",
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@98:8::98:25",
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@144:8::144:25"
    ]
  },
  {
    "content": "latchedStopRotateController_.isGoalReached(&planner_util_, odom_helper_, current_pose_)",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@153:7::153:94"
    ]
  },
  {
    "content": "private_nh.getParam( \"odom_topic\", odom_topic_ )",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@115:9::115:58"
    ]
  },
  {
    "content": "setup_ && config.restore_defaults",
    "locations": [
      "src/navigation/dwa_local_planner/src/dwa_planner_ros.cpp@55:10::55:43"
    ]
  },
  {
    "content": "mode==TRINARY || alpha < 1.0",
    "locations": [
      "src/navigation/map_server/src/image_loader.cpp@148:14::148:42"
    ]
  },
  {
    "content": "occ < free_th",
    "locations": [
      "src/navigation/map_server/src/image_loader.cpp@146:14::146:27"
    ]
  },
  {
    "content": "occ > occ_th",
    "locations": [
      "src/navigation/map_server/src/image_loader.cpp@144:9::144:21"
    ]
  },
  {
    "content": "mode==RAW",
    "locations": [
      "src/navigation/map_server/src/image_loader.cpp@130:9::130:18"
    ]
  },
  {
    "content": "negate",
    "locations": [
      "src/navigation/map_server/src/image_loader.cpp@127:9::127:15"
    ]
  },
  {
    "content": "n_channels == 1",
    "locations": [
      "src/navigation/map_server/src/image_loader.cpp@122:10::122:25"
    ]
  },
  {
    "content": "mode==TRINARY || !img->format->Amask",
    "locations": [
      "src/navigation/map_server/src/image_loader.cpp@104:6::104:42"
    ]
  },
  {
    "content": "!(img = IMG_Load(fname))",
    "locations": [
      "src/navigation/map_server/src/image_loader.cpp@74:5::74:29"
    ]
  },
  {
    "content": "argc != 3 && argc != 2",
    "locations": [
      "src/navigation/map_server/src/main.cpp@227:5::227:27"
    ]
  },
  {
    "content": "mapfname.size() == 0",
    "locations": [
      "src/navigation/map_server/src/main.cpp@143:13::143:33"
    ]
  },
  {
    "content": "modeS==\"raw\"",
    "locations": [
      "src/navigation/map_server/src/main.cpp@122:18::122:30"
    ]
  },
  {
    "content": "modeS==\"scale\"",
    "locations": [
      "src/navigation/map_server/src/main.cpp@120:18::120:32"
    ]
  },
  {
    "content": "modeS==\"trinary\"",
    "locations": [
      "src/navigation/map_server/src/main.cpp@118:13::118:29"
    ]
  },
  {
    "content": "fin.fail()",
    "locations": [
      "src/navigation/map_server/src/main.cpp@78:12::78:22"
    ]
  },
  {
    "content": "!deprecated",
    "locations": [
      "src/navigation/map_server/src/main.cpp@74:10::74:21"
    ]
  },
  {
    "content": "shutdown_costmaps_",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@714:7::714:25",
      "src/navigation/move_base/src/move_base.cpp@179:7::179:25",
      "src/navigation/move_base/src/move_base.cpp@1188:7::1188:25"
    ]
  },
  {
    "content": "clearing_rotation_allowed_",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1154:9::1154:35",
      "src/navigation/move_base/src/move_base.cpp@1165:9::1165:35"
    ]
  },
  {
    "content": "behavior_list[i][\"type\"] == recovery_loader_.getName(classes[i])",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1095:19::1095:83"
    ]
  },
  {
    "content": "behavior.get() == NULL",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1108:15::1108:37"
    ]
  },
  {
    "content": "!recovery_loader_.isClassAvailable(behavior_list[i][\"type\"])",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1092:15::1092:75"
    ]
  },
  {
    "content": "name_i == name_j",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1067:23::1067:39"
    ]
  },
  {
    "content": "behavior_list[j].hasMember(\"name\") && behavior_list[j].hasMember(\"type\")",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1064:21::1064:93"
    ]
  },
  {
    "content": "behavior_list[j].getType() == XmlRpc::XmlRpcValue::TypeStruct",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1063:19::1063:80"
    ]
  },
  {
    "content": "behavior_list[i].hasMember(\"name\") && behavior_list[i].hasMember(\"type\")",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1060:15::1060:87"
    ]
  },
  {
    "content": "behavior_list[i].getType() == XmlRpc::XmlRpcValue::TypeStruct",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1059:13::1059:74"
    ]
  },
  {
    "content": "behavior_list.getType() == XmlRpc::XmlRpcValue::TypeArray",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1057:9::1057:66"
    ]
  },
  {
    "content": "node.getParam(\"recovery_behaviors\", behavior_list)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1056:7::1056:57"
    ]
  },
  {
    "content": "recovery_trigger_ == OSCILLATION_R",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@868:9::868:43",
      "src/navigation/move_base/src/move_base.cpp@1031:18::1031:52"
    ]
  },
  {
    "content": "recovery_trigger_ == PLANNING_R",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@1027:18::1027:49",
      "src/navigation/move_base/src/move_base.cpp@910:9::910:40"
    ]
  },
  {
    "content": "recovery_trigger_ == CONTROLLING_R",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@962:13::962:47",
      "src/navigation/move_base/src/move_base.cpp@1023:13::1023:47"
    ]
  },
  {
    "content": "ros::Time::now() > attempt_end",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@970:13::970:43"
    ]
  },
  {
    "content": "tc_->computeVelocityCommands(cmd_vel)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@956:11::956:48"
    ]
  },
  {
    "content": "recovery_behavior_enabled_ && recovery_index_ < recovery_behaviors_.size()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@998:11::998:85"
    ]
  },
  {
    "content": "oscillation_timeout_ > 0.0 &&\n            last_oscillation_reset_ + ros::Duration(oscillation_timeout_) < ros::Time::now()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@945:11::946:92"
    ]
  },
  {
    "content": "tc_->isGoalReached()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@931:11::931:31"
    ]
  },
  {
    "content": "!tc_->setPlan(*controller_plan_)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@895:9::895:41"
    ]
  },
  {
    "content": "new_global_plan_",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@880:7::880:23"
    ]
  },
  {
    "content": "!controller_costmap_ros_->isCurrent()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@873:7::873:44"
    ]
  },
  {
    "content": "distance(current_position, oscillation_pose_) >= oscillation_distance_",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@862:7::862:77"
    ]
  },
  {
    "content": "!isQuaternionValid(new_goal.target_pose.pose.orientation)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@741:13::741:70"
    ]
  },
  {
    "content": "as_->isNewGoalAvailable()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@737:11::737:36"
    ]
  },
  {
    "content": "r.cycleTime() > ros::Duration(1 / controller_frequency_) && state_ == CONTROLLING",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@825:9::825:90"
    ]
  },
  {
    "content": "done",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@815:9::815:13"
    ]
  },
  {
    "content": "goal.header.frame_id != planner_costmap_ros_->getGlobalFrameID()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@783:9::783:73"
    ]
  },
  {
    "content": "as_->isPreemptRequested()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@736:9::736:34"
    ]
  },
  {
    "content": "c_freq_change_",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@729:9::729:23"
    ]
  },
  {
    "content": "!isQuaternionValid(move_base_goal->target_pose.pose.orientation)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@696:7::696:71"
    ]
  },
  {
    "content": "sleep_time > ros::Duration(0.0)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@686:12::686:43"
    ]
  },
  {
    "content": "runPlanner_ &&\n           (ros::Time::now() > attempt_end || planning_retries_ > uint32_t(max_planning_retries_))",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@668:11::669:98"
    ]
  },
  {
    "content": "planner_frequency_ <= 0",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@654:11::654:34"
    ]
  },
  {
    "content": "runPlanner_",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@652:11::652:22"
    ]
  },
  {
    "content": "planner_frequency_ > 0",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@684:9::684:31"
    ]
  },
  {
    "content": "state_==PLANNING",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@659:14::659:30"
    ]
  },
  {
    "content": "gotPlan",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@637:9::637:16"
    ]
  },
  {
    "content": "fabs(dot - 1) > 1e-3",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@575:7::575:27"
    ]
  },
  {
    "content": "!std::isfinite(q.x) || !std::isfinite(q.y) || !std::isfinite(q.z) || !std::isfinite(q.w)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@555:7::555:95"
    ]
  },
  {
    "content": "!planner_->makePlan(start, goal, plan) || plan.empty()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@537:7::537:61"
    ]
  },
  {
    "content": "!planner_costmap_ros_->getRobotPose(global_pose)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@528:7::528:55",
      "src/navigation/move_base/src/move_base.cpp@410:11::410:59"
    ]
  },
  {
    "content": "planner_costmap_ros_ == NULL",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@400:7::400:35",
      "src/navigation/move_base/src/move_base.cpp@521:7::521:35"
    ]
  },
  {
    "content": "controller_costmap_ros_ != NULL",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@498:7::498:38"
    ]
  },
  {
    "content": "planner_costmap_ros_ != NULL",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@495:7::495:35"
    ]
  },
  {
    "content": "as_ != NULL",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@492:7::492:18"
    ]
  },
  {
    "content": "planner_->makePlan(start, p, global_plan)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@456:19::456:60"
    ]
  },
  {
    "content": "x_offset < 1e-9 && x_mult < -1.0 + 1e-9",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@451:19::451:58"
    ]
  },
  {
    "content": "y_offset < 1e-9 && y_mult < -1.0 + 1e-9",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@448:17::448:56"
    ]
  },
  {
    "content": "x_offset < max_offset-1e-9 && y_offset < max_offset-1e-9",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@442:15::442:71"
    ]
  },
  {
    "content": "req.tolerance > 0.0 && req.tolerance < search_increment",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@436:9::436:64"
    ]
  },
  {
    "content": "!planner_->makePlan(start, req.goal, global_plan) || global_plan.empty()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@426:7::426:79"
    ]
  },
  {
    "content": "req.start.header.frame_id.empty()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@407:7::407:40"
    ]
  },
  {
    "content": "as_->isActive()",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@395:7::395:22"
    ]
  },
  {
    "content": "config.base_local_planner == blp_loader_.getName(classes[i])",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@295:15::295:75"
    ]
  },
  {
    "content": "!blp_loader_.isClassAvailable(config.base_local_planner)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@292:11::292:67"
    ]
  },
  {
    "content": "config.base_global_planner == bgp_loader_.getName(classes[i])",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@255:15::255:76"
    ]
  },
  {
    "content": "!bgp_loader_.isClassAvailable(config.base_global_planner)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@252:11::252:68"
    ]
  },
  {
    "content": "config.base_global_planner != last_config_.base_global_planner",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@246:7::246:69"
    ]
  },
  {
    "content": "controller_frequency_ != config.controller_frequency",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@229:7::229:59"
    ]
  },
  {
    "content": "planner_frequency_ != config.planner_frequency",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@223:7::223:53"
    ]
  },
  {
    "content": "local_planner == blp_loader_.getName(classes[i])",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@149:13::149:61"
    ]
  },
  {
    "content": "!blp_loader_.isClassAvailable(local_planner)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@146:9::146:53"
    ]
  },
  {
    "content": "global_planner == bgp_loader_.getName(classes[i])",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@121:13::121:62"
    ]
  },
  {
    "content": "!bgp_loader_.isClassAvailable(global_planner)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@118:9::118:54"
    ]
  },
  {
    "content": "!loadRecoveryBehaviors(private_nh)",
    "locations": [
      "src/navigation/move_base/src/move_base.cpp@186:7::186:41"
    ]
  },
  {
    "content": "!costarr",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@1081:10::1081:18"
    ]
  },
  {
    "content": "potarr[n+nx] < POT_HIGH",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@1029:12::1029:35",
      "src/navigation/navfn/src/navfn.cpp@1014:17::1014:40"
    ]
  },
  {
    "content": "potarr[n-nx] < POT_HIGH",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@1012:12::1012:35",
      "src/navigation/navfn/src/navfn.cpp@1027:12::1027:35"
    ]
  },
  {
    "content": "potarr[n+1] < POT_HIGH",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@1009:17::1009:39",
      "src/navigation/navfn/src/navfn.cpp@1023:12::1023:34"
    ]
  },
  {
    "content": "potarr[n-1] < POT_HIGH",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@1021:12::1021:34",
      "src/navigation/navfn/src/navfn.cpp@1007:12::1007:34"
    ]
  },
  {
    "content": "norm > 0",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@1035:10::1035:18"
    ]
  },
  {
    "content": "cv >= POT_HIGH",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@1005:10::1005:24"
    ]
  },
  {
    "content": "n < nx || n > ns-nx",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@997:10::997:29"
    ]
  },
  {
    "content": "gradx[n]+grady[n] > 0.0",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@994:10::994:33"
    ]
  },
  {
    "content": "dy > 1.0",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@969:14::969:22"
    ]
  },
  {
    "content": "dx > 1.0",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@967:14::967:22"
    ]
  },
  {
    "content": "x == 0.0 && y == 0.0",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@955:14::955:34"
    ]
  },
  {
    "content": "potarr[stc] >= POT_HIGH",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@921:14::921:37"
    ]
  },
  {
    "content": "potarr[st] < minp",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@905:14::905:31",
      "src/navigation/navfn/src/navfn.cpp@911:14::911:31",
      "src/navigation/navfn/src/navfn.cpp@903:14::903:31",
      "src/navigation/navfn/src/navfn.cpp@909:14::909:31",
      "src/navigation/navfn/src/navfn.cpp@901:14::901:31",
      "src/navigation/navfn/src/navfn.cpp@913:14::913:31",
      "src/navigation/navfn/src/navfn.cpp@907:14::907:31",
      "src/navigation/navfn/src/navfn.cpp@899:14::899:31"
    ]
  },
  {
    "content": "potarr[stc] >= POT_HIGH ||\n            potarr[stc+1] >= POT_HIGH ||\n            potarr[stc-1] >= POT_HIGH ||\n            potarr[stcnx] >= POT_HIGH ||\n            potarr[stcnx+1] >= POT_HIGH ||\n            potarr[stcnx-1] >= POT_HIGH ||\n            potarr[stcpx] >= POT_HIGH ||\n            potarr[stcpx+1] >= POT_HIGH ||\n            potarr[stcpx-1] >= POT_HIGH ||\n            oscillation_detected",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@883:12::892:32"
    ]
  },
  {
    "content": "npath > 2 &&\n            pathx[npath-1] == pathx[npath-3] &&\n            pathy[npath-1] == pathy[npath-3]",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@871:11::873:45"
    ]
  },
  {
    "content": "stc < nx || stc > ns-nx",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@859:12::859:35"
    ]
  },
  {
    "content": "potarr[nearest_point] < COST_NEUTRAL",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@852:12::852:48"
    ]
  },
  {
    "content": "pathy",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@157:7::157:12",
      "src/navigation/navfn/src/navfn.cpp@831:12::831:17"
    ]
  },
  {
    "content": "pathx",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@830:12::830:17",
      "src/navigation/navfn/src/navfn.cpp@155:7::155:12"
    ]
  },
  {
    "content": "st == NULL",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@839:10::839:20"
    ]
  },
  {
    "content": "npathbuf < n",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@828:10::828:22"
    ]
  },
  {
    "content": "potarr[startCell] < POT_HIGH",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@707:14::707:42",
      "src/navigation/navfn/src/navfn.cpp@788:12::788:40",
      "src/navigation/navfn/src/navfn.cpp@799:10::799:38"
    ]
  },
  {
    "content": "curPe == 0",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@695:12::695:22",
      "src/navigation/navfn/src/navfn.cpp@777:12::777:22"
    ]
  },
  {
    "content": "displayInt > 0 &&  (cycle % displayInt) == 0",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@684:12::684:56",
      "src/navigation/navfn/src/navfn.cpp@766:12::766:56"
    ]
  },
  {
    "content": "curPe > nwv",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@751:12::751:23",
      "src/navigation/navfn/src/navfn.cpp@669:12::669:23"
    ]
  },
  {
    "content": "curPe == 0 && nextPe == 0",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@746:12::746:37",
      "src/navigation/navfn/src/navfn.cpp@664:12::664:37"
    ]
  },
  {
    "content": "atStart",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@706:12::706:19"
    ]
  },
  {
    "content": "cycle < cycles",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@714:10::714:24"
    ]
  },
  {
    "content": "d > pot+de",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@534:16::534:26",
      "src/navigation/navfn/src/navfn.cpp@541:16::541:26",
      "src/navigation/navfn/src/navfn.cpp@633:16::633:26",
      "src/navigation/navfn/src/navfn.cpp@626:16::626:26"
    ]
  },
  {
    "content": "u > pot+ue",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@625:16::625:26",
      "src/navigation/navfn/src/navfn.cpp@540:16::540:26",
      "src/navigation/navfn/src/navfn.cpp@632:16::632:26",
      "src/navigation/navfn/src/navfn.cpp@533:16::533:26"
    ]
  },
  {
    "content": "r > pot+re",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@532:16::532:26",
      "src/navigation/navfn/src/navfn.cpp@631:16::631:26",
      "src/navigation/navfn/src/navfn.cpp@539:16::539:26",
      "src/navigation/navfn/src/navfn.cpp@624:16::624:26"
    ]
  },
  {
    "content": "l > pot+le",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@623:16::623:26",
      "src/navigation/navfn/src/navfn.cpp@630:16::630:26",
      "src/navigation/navfn/src/navfn.cpp@531:16::531:26",
      "src/navigation/navfn/src/navfn.cpp@538:16::538:26"
    ]
  },
  {
    "content": "pot < curT",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@529:14::529:24",
      "src/navigation/navfn/src/navfn.cpp@621:14::621:24"
    ]
  },
  {
    "content": "pot < potarr[n]",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@522:12::522:27",
      "src/navigation/navfn/src/navfn.cpp@607:12::607:27"
    ]
  },
  {
    "content": "dc >= hf",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@507:12::507:20",
      "src/navigation/navfn/src/navfn.cpp@592:12::592:20"
    ]
  },
  {
    "content": "dc < 0",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@584:12::584:18",
      "src/navigation/navfn/src/navfn.cpp@499:12::499:18"
    ]
  },
  {
    "content": "costarr[n] < COST_OBS",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@495:10::495:31",
      "src/navigation/navfn/src/navfn.cpp@580:10::580:31"
    ]
  },
  {
    "content": "u<d",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@492:10::492:13",
      "src/navigation/navfn/src/navfn.cpp@577:10::577:13"
    ]
  },
  {
    "content": "l<r",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@576:10::576:13",
      "src/navigation/navfn/src/navfn.cpp@491:10::491:13"
    ]
  },
  {
    "content": "*pc >= COST_OBS",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@446:12::446:27"
    ]
  },
  {
    "content": "!keepit",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@408:12::408:19"
    ]
  },
  {
    "content": "n>=0 && n<ns && !pending[n] && \\\n    costarr[n]<COST_OBS && overPe<PRIORITYBUFSIZE",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@394:27::395:49"
    ]
  },
  {
    "content": "n>=0 && n<ns && !pending[n] && \\\n    costarr[n]<COST_OBS && nextPe<PRIORITYBUFSIZE",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@391:27::392:49"
    ]
  },
  {
    "content": "n>=0 && n<ns && !pending[n] && \\\n    costarr[n]<COST_OBS && curPe<PRIORITYBUFSIZE",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@388:27::389:48"
    ]
  },
  {
    "content": "len > 0",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@335:10::335:17",
      "src/navigation/navfn/src/navfn.cpp@306:10::306:17",
      "src/navigation/navfn/src/navfn.cpp@86:10::86:17",
      "src/ros_comm/roscpp/src/libros/service_server_link.cpp@218:6::218:13",
      "src/navigation/navfn/src/navfn.cpp@91:10::91:17"
    ]
  },
  {
    "content": "v >= COST_OBS",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@274:18::274:31",
      "src/navigation/navfn/src/navfn.cpp@247:18::247:31"
    ]
  },
  {
    "content": "v == COST_UNKNOWN_ROS",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@278:20::278:41"
    ]
  },
  {
    "content": "i<7 || i > ny-8 || j<7 || j > nx-8",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@268:16::268:50"
    ]
  },
  {
    "content": "v == COST_UNKNOWN_ROS && allow_unknown",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@251:20::251:58"
    ]
  },
  {
    "content": "v < COST_OBS_ROS",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@244:16::244:32"
    ]
  },
  {
    "content": "isROS",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@231:10::231:15"
    ]
  },
  {
    "content": "grady",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@210:9::210:14",
      "src/navigation/navfn/src/navfn.cpp@153:7::153:12"
    ]
  },
  {
    "content": "gradx",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@151:7::151:12",
      "src/navigation/navfn/src/navfn.cpp@208:9::208:14"
    ]
  },
  {
    "content": "pending",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@205:9::205:16",
      "src/navigation/navfn/src/navfn.cpp@149:7::149:14"
    ]
  },
  {
    "content": "potarr",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@203:9::203:15",
      "src/navigation/navfn/src/navfn.cpp@147:7::147:13"
    ]
  },
  {
    "content": "costarr",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@201:9::201:16",
      "src/navigation/navfn/src/navfn.cpp@145:7::145:14"
    ]
  },
  {
    "content": "pb3",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@163:7::163:10"
    ]
  },
  {
    "content": "pb2",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@161:7::161:10"
    ]
  },
  {
    "content": "pb1",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@159:7::159:10"
    ]
  },
  {
    "content": "nav->nx != nx || nav->ny != ny",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@67:10::67:40"
    ]
  },
  {
    "content": "nav == NULL",
    "locations": [
      "src/navigation/navfn/src/navfn.cpp@64:10::64:21"
    ]
  },
  {
    "content": "!costmap->worldToMap(wx, wy, mx, my)",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@229:7::229:43",
      "src/navigation/navfn/src/navfn_ros.cpp@406:7::406:43",
      "src/navigation/navfn/src/navfn_ros.cpp@268:7::268:43"
    ]
  },
  {
    "content": "tf::resolve(tf_prefix_, goal.header.frame_id) != tf::resolve(tf_prefix_, global_frame)",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@395:7::395:93",
      "src/navigation/navfn/src/navfn_ros.cpp@213:7::213:93"
    ]
  },
  {
    "content": "!path.empty()",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@368:7::368:20"
    ]
  },
  {
    "content": "pp[i] < 10e7",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@339:12::339:24"
    ]
  },
  {
    "content": "getPlanFromPotential(best_pose, plan)",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@313:9::313:46"
    ]
  },
  {
    "content": "potential < POT_HIGH && sdist < best_sdist",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@301:11::301:53"
    ]
  },
  {
    "content": "tolerance <= 0.0",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@269:9::269:25"
    ]
  },
  {
    "content": "visualize_potential_",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@324:8::324:28",
      "src/navigation/navfn/src/navfn_ros.cpp@72:9::72:29"
    ]
  },
  {
    "content": "found_legal",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@311:7::311:18"
    ]
  },
  {
    "content": "!costmap->worldToMap(world_point.x, world_point.y, mx, my)",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@150:7::150:65"
    ]
  },
  {
    "content": "!costmap_ros_->getCostmap()->worldToMap(world_point.x, world_point.y, mx, my)",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@130:7::130:84"
    ]
  },
  {
    "content": "potential < POT_HIGH",
    "locations": [
      "src/navigation/navfn/src/navfn_ros.cpp@112:11::112:31"
    ]
  },
  {
    "content": "footprint_cost < 0.0",
    "locations": [
      "src/navigation/rotate_recovery/src/rotate_recovery.cpp@123:9::123:29"
    ]
  },
  {
    "content": "got_180 && current_angle >= (0.0 - tolerance_)",
    "locations": [
      "src/navigation/rotate_recovery/src/rotate_recovery.cpp@149:7::149:53"
    ]
  },
  {
    "content": "current_angle < 0.0",
    "locations": [
      "src/navigation/rotate_recovery/src/rotate_recovery.cpp@145:7::145:26"
    ]
  },
  {
    "content": "!bitsBelowThreshold(unknown_bits, unknown_threshold)",
    "locations": [
      "src/navigation/voxel_grid/src/voxel_grid.cpp@182:7::182:59"
    ]
  },
  {
    "content": "!bitsBelowThreshold(marked_bits, marked_threshold)",
    "locations": [
      "src/navigation/voxel_grid/src/voxel_grid.cpp@177:7::177:57"
    ]
  },
  {
    "content": "x >= size_x_ || y >= size_y_",
    "locations": [
      "src/navigation/voxel_grid/src/voxel_grid.cpp@166:7::166:35"
    ]
  },
  {
    "content": "bits < 1",
    "locations": [
      "src/navigation/voxel_grid/src/voxel_grid.cpp@155:9::155:17"
    ]
  },
  {
    "content": "bits < 2",
    "locations": [
      "src/navigation/voxel_grid/src/voxel_grid.cpp@154:7::154:15"
    ]
  },
  {
    "content": "x >= size_x_ || y >= size_y_ || z >= size_z_",
    "locations": [
      "src/navigation/voxel_grid/src/voxel_grid.cpp@145:7::145:51"
    ]
  },
  {
    "content": "x0 >= size_x_ || y0 >= size_y_ || z0 >= size_z_ || x1>=size_x_ || y1>=size_y_ || z1>=size_z_",
    "locations": [
      "src/navigation/voxel_grid/src/voxel_grid.cpp@115:7::115:99",
      "src/navigation/voxel_grid/src/voxel_grid.cpp@133:7::133:99",
      "src/navigation/voxel_grid/src/voxel_grid.cpp@104:7::104:99"
    ]
  },
  {
    "content": "map_2d == NULL",
    "locations": [
      "src/navigation/voxel_grid/src/voxel_grid.cpp@128:7::128:21"
    ]
  },
  {
    "content": "size_z_ > 16",
    "locations": [
      "src/navigation/voxel_grid/src/voxel_grid.cpp@75:7::75:19",
      "src/navigation/voxel_grid/src/voxel_grid.cpp@48:7::48:19"
    ]
  },
  {
    "content": "size_x == size_x_ && size_y == size_y_ && size_z == size_z_",
    "locations": [
      "src/navigation/voxel_grid/src/voxel_grid.cpp@65:7::65:66"
    ]
  },
  {
    "content": "!tracker",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_publication.cpp@111:10::111:18",
      "src/nodelet_core/nodelet/src/callback_queue.cpp@74:8::74:16",
      "src/ros_comm/roscpp/src/libros/publication.cpp@57:10::57:18",
      "src/ros_comm/roscpp/src/libros/subscription_queue.cpp@140:10::140:18"
    ]
  },
  {
    "content": "has_tracked_object_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_publication.cpp@107:8::107:27",
      "src/nodelet_core/nodelet/src/callback_queue.cpp@70:6::70:25",
      "src/ros_comm/roscpp/src/libros/timer.cpp@55:8::55:27",
      "src/ros_comm/roscpp/src/libros/wall_timer.cpp@50:8::50:27"
    ]
  },
  {
    "content": "queue_.isEnabled()",
    "locations": [
      "src/nodelet_core/nodelet/src/callback_queue.cpp@54:6::54:24"
    ]
  },
  {
    "content": "!qi->threaded",
    "locations": [
      "src/nodelet_core/nodelet/src/callback_queue_manager.cpp@278:10::278:23"
    ]
  },
  {
    "content": "queue->callOne() == ros::CallbackQueue::TryAgain",
    "locations": [
      "src/nodelet_core/nodelet/src/callback_queue_manager.cpp@272:10::272:58"
    ]
  },
  {
    "content": "!running_",
    "locations": [
      "src/nodelet_core/nodelet/src/callback_queue_manager.cpp@258:10::258:19",
      "src/nodelet_core/nodelet/src/callback_queue_manager.cpp@177:10::177:19"
    ]
  },
  {
    "content": "info->in_thread == 0",
    "locations": [
      "src/nodelet_core/nodelet/src/callback_queue_manager.cpp@211:16::211:36"
    ]
  },
  {
    "content": "info->threaded",
    "locations": [
      "src/nodelet_core/nodelet/src/callback_queue_manager.cpp@199:14::199:28"
    ]
  },
  {
    "content": "it != queues_.end()",
    "locations": [
      "src/nodelet_core/nodelet/src/callback_queue_manager.cpp@195:12::195:31"
    ]
  },
  {
    "content": "size < smallest",
    "locations": [
      "src/nodelet_core/nodelet/src/callback_queue_manager.cpp@153:8::153:23"
    ]
  },
  {
    "content": "size == 0",
    "locations": [
      "src/nodelet_core/nodelet/src/callback_queue_manager.cpp@148:8::148:17",
      "src/roscpp_core/cpp_common/src/header.cpp@141:6::141:15"
    ]
  },
  {
    "content": "num_worker_threads_ == 0",
    "locations": [
      "src/nodelet_core/nodelet/src/callback_queue_manager.cpp@50:6::50:30"
    ]
  },
  {
    "content": "it != impl_->nodelets_.end()",
    "locations": [
      "src/nodelet_core/nodelet/src/loader.cpp@335:6::335:34",
      "src/nodelet_core/nodelet/src/loader.cpp@321:8::321:36"
    ]
  },
  {
    "content": "!impl_->refresh_classes_",
    "locations": [
      "src/nodelet_core/nodelet/src/loader.cpp@283:7::283:31"
    ]
  },
  {
    "content": "!p",
    "locations": [
      "src/nodelet_core/nodelet/src/loader.cpp@306:6::306:8"
    ]
  },
  {
    "content": "impl_->nodelets_.count(name) > 0",
    "locations": [
      "src/nodelet_core/nodelet/src/loader.cpp@269:6::269:38"
    ]
  },
  {
    "content": "provide_ros_api",
    "locations": [
      "src/nodelet_core/nodelet/src/loader.cpp@243:6::243:21"
    ]
  },
  {
    "content": "it != bond_map_.end()",
    "locations": [
      "src/nodelet_core/nodelet/src/loader.cpp@143:8::143:29"
    ]
  },
  {
    "content": "!success",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection.cpp@406:6::406:14",
      "src/ros_comm/roscpp/src/libros/service_client_link.cpp@204:6::204:14",
      "src/ros_comm/roscpp/src/libros/service_client_link.cpp@181:6::181:14",
      "src/ros_comm/roscpp/src/libros/service_server_link.cpp@232:6::232:14",
      "src/ros_comm/roscpp/src/libros/service_server_link.cpp@192:6::192:14",
      "src/rospack/src/rospack_backcompat.cpp@47:5::47:13",
      "src/ros_comm/roscpp/src/libros/transport_publisher_link.cpp@155:6::155:14",
      "src/ros_comm/roscpp/src/libros/connection.cpp@385:6::385:14",
      "src/nodelet_core/nodelet/src/loader.cpp@135:8::135:16"
    ]
  },
  {
    "content": "res.success && !req.bond_id.empty()",
    "locations": [
      "src/nodelet_core/nodelet/src/loader.cpp@112:8::112:43"
    ]
  },
  {
    "content": "req.remap_source_args.size() != req.remap_target_args.size()",
    "locations": [
      "src/nodelet_core/nodelet/src/loader.cpp@96:8::96:68"
    ]
  },
  {
    "content": "!ni.unloadNodelet(name, manager)",
    "locations": [
      "src/nodelet_core/nodelet/src/nodelet.cpp@359:8::359:40"
    ]
  },
  {
    "content": "arg_parser.isBondEnabled() && bond.isBroken()",
    "locations": [
      "src/nodelet_core/nodelet/src/nodelet.cpp@339:10::339:55"
    ]
  },
  {
    "content": "arg_parser.isBondEnabled()",
    "locations": [
      "src/nodelet_core/nodelet/src/nodelet.cpp@348:8::348:34",
      "src/nodelet_core/nodelet/src/nodelet.cpp@332:8::332:34",
      "src/nodelet_core/nodelet/src/nodelet.cpp@321:8::321:34"
    ]
  },
  {
    "content": "!ni.loadNodelet(name, type, manager, arg_parser.getMyArgv(), bond_id)",
    "locations": [
      "src/nodelet_core/nodelet/src/nodelet.cpp@324:8::324:77"
    ]
  },
  {
    "content": "!n.load(nodelet_name, nodelet_type, remappings, arg_parser.getMyArgv())",
    "locations": [
      "src/nodelet_core/nodelet/src/nodelet.cpp@305:7::305:78"
    ]
  },
  {
    "content": "command == \"unload\"",
    "locations": [
      "src/nodelet_core/nodelet/src/nodelet.cpp@353:11::353:30"
    ]
  },
  {
    "content": "command == \"load\"",
    "locations": [
      "src/nodelet_core/nodelet/src/nodelet.cpp@312:11::312:28"
    ]
  },
  {
    "content": "command == \"standalone\"",
    "locations": [
      "src/nodelet_core/nodelet/src/nodelet.cpp@296:11::296:34"
    ]
  },
  {
    "content": "command == \"manager\"",
    "locations": [
      "src/nodelet_core/nodelet/src/nodelet.cpp@290:6::290:26"
    ]
  },
  {
    "content": "!arg_parser.parseArgs(argc, argv)",
    "locations": [
      "src/nodelet_core/nodelet/src/nodelet.cpp@282:6::282:39"
    ]
  },
  {
    "content": "num_params > 1",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@160:6::160:20",
      "src/nodelet_core/nodelet/src/nodelet.cpp@266:6::266:20"
    ]
  },
  {
    "content": "params.getType() == XmlRpc::XmlRpcValue::TypeArray",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@158:6::158:56",
      "src/nodelet_core/nodelet/src/nodelet.cpp@264:6::264:56"
    ]
  },
  {
    "content": "!client.call (srv)",
    "locations": [
      "src/nodelet_core/nodelet/src/nodelet.cpp@177:10::177:28",
      "src/nodelet_core/nodelet/src/nodelet.cpp@226:10::226:28"
    ]
  },
  {
    "content": "ros::service::exists(service_name, false)",
    "locations": [
      "src/nodelet_core/nodelet/src/nodelet.cpp@180:12::180:53"
    ]
  },
  {
    "content": "!ros::service::exists (service_name, true)",
    "locations": [
      "src/nodelet_core/nodelet/src/nodelet.cpp@163:10::163:52"
    ]
  },
  {
    "content": "non_ros_args[used_args] == \"--no-bond\"",
    "locations": [
      "src/nodelet_core/nodelet/src/nodelet.cpp@99:14::99:52"
    ]
  },
  {
    "content": "non_ros_args.size() > used_args",
    "locations": [
      "src/nodelet_core/nodelet/src/nodelet.cpp@97:12::97:43"
    ]
  },
  {
    "content": "used_args > 0",
    "locations": [
      "src/nodelet_core/nodelet/src/nodelet.cpp@128:10::128:23"
    ]
  },
  {
    "content": "command_ == \"standalone\" && non_ros_args.size() > 2",
    "locations": [
      "src/nodelet_core/nodelet/src/nodelet.cpp@114:15::114:66"
    ]
  },
  {
    "content": "command_ == \"load\" && non_ros_args.size() > 3",
    "locations": [
      "src/nodelet_core/nodelet/src/nodelet.cpp@91:10::91:55"
    ]
  },
  {
    "content": "non_ros_args.size() > 1",
    "locations": [
      "src/nodelet_core/nodelet/src/nodelet.cpp@86:10::86:33"
    ]
  },
  {
    "content": "inited_",
    "locations": [
      "src/nodelet_core/nodelet/src/nodelet_class.cpp@110:6::110:13"
    ]
  },
  {
    "content": "!inited_",
    "locations": [
      "src/nodelet_core/nodelet/src/nodelet_class.cpp@90:6::90:14",
      "src/nodelet_core/nodelet/src/nodelet_class.cpp@99:6::99:14",
      "src/nodelet_core/nodelet/src/nodelet_class.cpp@72:6::72:14",
      "src/nodelet_core/nodelet/src/nodelet_class.cpp@52:6::52:14",
      "src/nodelet_core/nodelet/src/nodelet_class.cpp@62:6::62:14",
      "src/nodelet_core/nodelet/src/nodelet_class.cpp@81:6::81:14"
    ]
  },
  {
    "content": "chain.getSegment(l).getJoint().getType()!=Joint::None",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chaindynparam.cpp@95:7::95:60"
    ]
  },
  {
    "content": "chain.getSegment(i).getJoint().getType()!=Joint::None",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chaindynparam.cpp@84:6::84:59",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainfksolverpos_recursive.cpp@49:19::49:72",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chaindynparam.cpp@59:13::59:66",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_recursive_newton_euler.cpp@44:15::44:68",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_recursive_newton_euler.cpp@77:15::77:68"
    ]
  },
  {
    "content": "i!=0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chaindynparam.cpp@77:6::77:10"
    ]
  },
  {
    "content": "q.rows()!=nj || H.rows()!=nj || H.columns()!=nj",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chaindynparam.cpp@49:11::49:59"
    ]
  },
  {
    "content": "segmentNr>chain.getNrOfSegments()",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainfksolverpos_recursive.cpp@44:16::44:49"
    ]
  },
  {
    "content": "q_in.rows()!=chain.getNrOfJoints()",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainfksolverpos_recursive.cpp@42:11::42:45"
    ]
  },
  {
    "content": "seg_nr<0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainfksolverpos_recursive.cpp@35:11::35:19"
    ]
  },
  {
    "content": "i==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_recursive_newton_euler.cpp@61:15::61:19"
    ]
  },
  {
    "content": "q.rows()!=nj || q_dot.rows()!=nj || q_dotdot.rows()!=nj || torques.rows()!=nj || f_ext.size()!=ns",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_recursive_newton_euler.cpp@37:11::37:108"
    ]
  },
  {
    "content": "chain.getSegment(i - 1).getJoint().getType() != Joint::None",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@235:16::235:75",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@320:12::320:71"
    ]
  },
  {
    "content": "i == 1",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@288:12::288:18"
    ]
  },
  {
    "content": "Sm(i) < 1e-14",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@256:12::256:25"
    ]
  },
  {
    "content": "i != 0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@95:12::95:18",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@201:12::201:18"
    ]
  },
  {
    "content": "i == (int)ns",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@140:12::140:24"
    ]
  },
  {
    "content": "segment.getJoint().getType() != Joint::None",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@78:8::78:51",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@119:12::119:55"
    ]
  },
  {
    "content": "q.rows() != nj || q_dot.rows() != nj || q_dotdot.rows() != nj || torques.rows() != nj || f_ext.size() != ns",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainidsolver_vereshchagin.cpp@49:8::49:115"
    ]
  },
  {
    "content": "delta_pos_norm<eps",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainiksolverpos_lma.cpp@254:7::254:25",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainiksolverpos_lma.cpp@177:5::177:23"
    ]
  },
  {
    "content": "rho > 0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainiksolverpos_lma.cpp@250:6::250:13"
    ]
  },
  {
    "content": "grad.transpose()*grad < eps_joints*eps_joints",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainiksolverpos_lma.cpp@231:6::231:52"
    ]
  },
  {
    "content": "dnorm < eps_joints",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainiksolverpos_lma.cpp@218:6::218:24"
    ]
  },
  {
    "content": "display_information",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainiksolverpos_lma.cpp@206:6::206:25"
    ]
  },
  {
    "content": "segment.getJoint().getType()!=Joint::None",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainiksolverpos_lma.cpp@120:6::120:47",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/chainiksolverpos_lma.cpp@136:6::136:47"
    ]
  },
  {
    "content": "x*y*data[1] < 0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@368:6::368:22"
    ]
  },
  {
    "content": "data[7] < 0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@367:6::367:18"
    ]
  },
  {
    "content": "data[2] < 0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@366:6::366:18"
    ]
  },
  {
    "content": "ca < -1+t",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@360:5::360:14"
    ]
  },
  {
    "content": "ca>1-t",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@355:5::355:11"
    ]
  },
  {
    "content": "data[8]>0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@273:16::273:25"
    ]
  },
  {
    "content": "fabs(data[8]) > 1-epsilon",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@271:12::271:39"
    ]
  },
  {
    "content": "fabs(pitch) > (M_PI/2.0-epsilon)",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@247:12::247:46"
    ]
  },
  {
    "content": "(*this)(0,0) > (*this)(1,1) && (*this)(0,0) > (*this)(2,2)",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@209:16::209:76"
    ]
  },
  {
    "content": "trace > epsilon",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@202:11::202:28"
    ]
  },
  {
    "content": "v < eps",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@100:12::100:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@143:12::143:19"
    ]
  },
  {
    "content": "tmp2 > tmp1",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@130:16::130:27"
    ]
  },
  {
    "content": "tmp1 == 0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@120:20::120:29"
    ]
  },
  {
    "content": "tmp1 >= tmp2",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@117:12::117:24",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@119:16::119:28"
    ]
  },
  {
    "content": "fabs(data[0]) > fabs(data[1])",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames.cpp@89:12::89:42"
    ]
  },
  {
    "content": "strcmp(storage,\"DH\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@263:8::263:31"
    ]
  },
  {
    "content": "strlen(storage)==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@133:8::133:26",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@194:8::194:26",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@255:8::255:26"
    ]
  },
  {
    "content": "i<2",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@95:12::95:15",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@202:16::202:19"
    ]
  },
  {
    "content": "strcmp(storage,\"IDENTITY\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@242:8::242:37"
    ]
  },
  {
    "content": "strcmp(storage,\"ROT\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@232:8::232:32"
    ]
  },
  {
    "content": "strcmp(storage,\"RPY\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@225:8::225:32"
    ]
  },
  {
    "content": "strcmp(storage,\"EULERZYZ\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@218:8::218:37"
    ]
  },
  {
    "content": "strcmp(storage,\"EULERZYX\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@211:8::211:37"
    ]
  },
  {
    "content": "strcmp(storage,\"ZERO\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/frames_io.cpp@144:8::144:33"
    ]
  },
  {
    "content": "q != q_previous",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/joint.cpp@81:16::81:31"
    ]
  },
  {
    "content": "type != RotAxis && type != TransAxis",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/joint.cpp@64:10::64:46",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/joint.cpp@50:10::50:46"
    ]
  },
  {
    "content": "type == RotAxis || type == TransAxis",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/joint.cpp@40:10::40:46",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/joint.cpp@31:10::31:46"
    ]
  },
  {
    "content": "strcmp(storage,\"CYCLIC_CLOSED\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path.cpp@152:12::152:46"
    ]
  },
  {
    "content": "strcmp(storage,\"COMPOSITE\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path.cpp@139:12::139:42"
    ]
  },
  {
    "content": "strcmp(storage,\"ROUNDEDCOMPOSITE\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path.cpp@116:12::116:49"
    ]
  },
  {
    "content": "strcmp(storage,\"CIRCLE\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path.cpp@88:12::88:39"
    ]
  },
  {
    "content": "strcmp(storage,\"LINE\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path.cpp@75:13::75:38"
    ]
  },
  {
    "content": "strcmp(storage,\"POINT\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path.cpp@67:5::67:31"
    ]
  },
  {
    "content": "aggregate",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_line.cpp@154:8::154:18",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_circle.cpp@149:8::149:17",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_line.cpp@149:8::149:17",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/trajectory_segment.cpp@94:8::94:17",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@190:8::190:17",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_cyclic_closed.cpp@74:8::74:17"
    ]
  },
  {
    "content": "oalpha*eqradius > dist",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_circle.cpp@80:9::80:31"
    ]
  },
  {
    "content": "n < epsilon",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_circle.cpp@73:12::73:23"
    ]
  },
  {
    "content": "radius < epsilon",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_circle.cpp@68:9::68:25"
    ]
  },
  {
    "content": "it->second",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_composite.cpp@155:6::155:16"
    ]
  },
  {
    "content": "(s <= dv[i])||(i == (dv.size()-1) )",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_composite.cpp@63:6::63:41"
    ]
  },
  {
    "content": "(cached_starts <=s) && ( s <= cached_ends)",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_composite.cpp@58:5::58:49"
    ]
  },
  {
    "content": "alpha != 0 && alpha*eqradius > dist",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_line.cpp@68:6::68:42",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_line.cpp@111:6::111:42"
    ]
  },
  {
    "content": "nrofpoints >= 1",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@138:5::138:20"
    ]
  },
  {
    "content": "d >= bcdist",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@104:7::104:18"
    ]
  },
  {
    "content": "d >= abdist",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@101:7::101:18"
    ]
  },
  {
    "content": "alpha < eps",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@92:6::92:17"
    ]
  },
  {
    "content": "(PI - alpha) < eps",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@89:6::89:24"
    ]
  },
  {
    "content": "bcdist < eps",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@85:6::85:18"
    ]
  },
  {
    "content": "abdist < eps",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@82:6::82:18"
    ]
  },
  {
    "content": "nrofpoints == 1",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@73:12::73:27"
    ]
  },
  {
    "content": "nrofpoints == 0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@71:5::71:20"
    ]
  },
  {
    "content": "eqradius<=0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/path_roundedcomposite.cpp@64:6::64:17"
    ]
  },
  {
    "content": "strcmp(storage,\"TWOAXIS\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/rotational_interpolation.cpp@72:12::72:40"
    ]
  },
  {
    "content": "strcmp(storage,\"THREEAXIS\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/rotational_interpolation.cpp@65:12::65:42"
    ]
  },
  {
    "content": "strcmp(storage,\"SINGLEAXIS\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/rotational_interpolation.cpp@59:5::59:36"
    ]
  },
  {
    "content": "strcmp(storage,\"SEGMENT\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/trajectory.cpp@63:5::63:33"
    ]
  },
  {
    "content": "time < vd[i]",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/trajectory_composite.cpp@82:6::82:18",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/trajectory_composite.cpp@63:16::63:28",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/trajectory_composite.cpp@43:16::43:28"
    ]
  },
  {
    "content": "time < 0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/trajectory_composite.cpp@77:12::77:20",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_rect.cpp@102:8::102:16",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/trajectory_composite.cpp@58:12::58:20",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@167:5::167:13",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@169:5::169:13",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@140:5::140:13",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/trajectory_composite.cpp@38:12::38:20",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@153:5::153:13",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@155:5::155:13",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_rect.cpp@112:8::112:16",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@142:5::142:13"
    ]
  },
  {
    "content": "jnt.getType() == Joint::RotX || jnt.getType() == Joint::RotY || jnt.getType() == Joint::RotZ || jnt.getType() == Joint::RotAxis",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@151:16::151:143"
    ]
  },
  {
    "content": "s->first == root_name",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@131:16::131:37",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@126:16::126:37"
    ]
  },
  {
    "content": "parents_chain_tip.empty() || parents_chain_tip.back()  != root_name",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@133:12::133:79"
    ]
  },
  {
    "content": "parents_chain_root.empty() || parents_chain_root.back() != root_name",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@128:12::128:80"
    ]
  },
  {
    "content": "!(this->addTreeRecursive(child, child->first))",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@107:16::107:62"
    ]
  },
  {
    "content": "this->addSegment(GetTreeElementSegment(child->second), hook_name)",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@105:12::105:77"
    ]
  },
  {
    "content": "this->addSegment(chain.getSegment(i), parent_name)",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@86:12::86:62"
    ]
  },
  {
    "content": "!retval.second",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@71:8::71:22"
    ]
  },
  {
    "content": "parent == segments.end()",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/tree.cpp@58:8::58:32"
    ]
  },
  {
    "content": "it == rootIterator",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/treefksolverpos_recursive.cpp@55:5::55:23"
    ]
  },
  {
    "content": "it == tree.getSegments().end()",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/treefksolverpos_recursive.cpp@40:16::40:46",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/treejnttojacsolver.cpp@30:8::30:38"
    ]
  },
  {
    "content": "q_in.rows() != tree.getNrOfJoints()",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/treefksolverpos_recursive.cpp@38:11::38:46"
    ]
  },
  {
    "content": "GetTreeElementSegment(it->second).getJoint().getType() != Joint::None",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/treejnttojacsolver.cpp@50:12::50:81"
    ]
  },
  {
    "content": "q_in.rows() != tree.getNrOfJoints() || jac.columns() != tree.getNrOfJoints()",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/treejnttojacsolver.cpp@23:8::23:84"
    ]
  },
  {
    "content": "strcmp(storage,\"TRAPEZOIDALHALF\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile.cpp@79:12::79:48"
    ]
  },
  {
    "content": "strcmp(storage,\"TRAPEZOIDAL\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile.cpp@70:12::70:44"
    ]
  },
  {
    "content": "strcmp(storage,\"CONSTVEL\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile.cpp@64:12::64:41"
    ]
  },
  {
    "content": "strcmp(storage,\"DIRACVEL\")==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile.cpp@60:5::60:34"
    ]
  },
  {
    "content": "0 < time && time < t",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_dirac.cpp@68:16::68:38"
    ]
  },
  {
    "content": "t == 0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_dirac.cpp@63:12::63:20",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_dirac.cpp@56:12::56:20"
    ]
  },
  {
    "content": "time>d",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_rect.cpp@114:15::114:21",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_rect.cpp@104:15::104:21"
    ]
  },
  {
    "content": "v > maxvel || duration==0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_rect.cpp@84:16::84:42"
    ]
  },
  {
    "content": "diff != 0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_rect.cpp@81:8::81:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_rect.cpp@56:8::56:19"
    ]
  },
  {
    "content": "duration <= std::numeric_limits<double>::epsilon()",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_spline.cpp@86:6::86:57",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_spline.cpp@112:6::112:57",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_spline.cpp@59:6::59:57"
    ]
  },
  {
    "content": "time<=duration",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@161:12::161:26",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@146:12::146:26",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@148:12::148:26",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@173:12::173:26",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@159:12::159:26",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@175:12::175:26"
    ]
  },
  {
    "content": "time<t2",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@146:12::146:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@171:12::171:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@159:12::159:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@157:12::157:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@173:12::173:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@144:12::144:19"
    ]
  },
  {
    "content": "time<t1",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@144:12::144:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@169:12::169:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@155:12::155:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@171:12::171:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@142:12::142:19",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@157:12::157:19"
    ]
  },
  {
    "content": "KDL::epsilon > factor",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@118:5::118:26"
    ]
  },
  {
    "content": "1.0 < factor",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@117:5::117:17"
    ]
  },
  {
    "content": "factor > 1",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@103:8::103:20",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@98:8::98:18"
    ]
  },
  {
    "content": "deltaT > 0.0",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_trap.cpp@68:5::68:17"
    ]
  },
  {
    "content": "tmp > duration",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@123:6::123:20",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@111:6::111:20"
    ]
  },
  {
    "content": "starting",
    "locations": [
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@86:5::86:13",
      "src/orocos_kinematics_dynamics/orocos_kdl/src/velocityprofile_traphalf.cpp@110:5::110:13"
    ]
  },
  {
    "content": "distance_ptr==NULL || !std::isfinite(*distance_ptr)",
    "locations": [
      "src/perception_pcl/pcl_ros/src/transforms.cpp@159:10::159:61"
    ]
  },
  {
    "content": "!std::isfinite (pt[0]) || !std::isfinite (pt[1]) || !std::isfinite (pt[2])",
    "locations": [
      "src/perception_pcl/pcl_ros/src/transforms.cpp@157:8::157:82"
    ]
  },
  {
    "content": "vp_idx != -1",
    "locations": [
      "src/perception_pcl/pcl_ros/src/transforms.cpp@193:6::193:18"
    ]
  },
  {
    "content": "&in != &out",
    "locations": [
      "src/perception_pcl/pcl_ros/src/transforms.cpp@132:6::132:17"
    ]
  },
  {
    "content": "x_idx == -1 || y_idx == -1 || z_idx == -1",
    "locations": [
      "src/perception_pcl/pcl_ros/src/transforms.cpp@114:6::114:47"
    ]
  },
  {
    "content": "in.header.frame_id == target_frame",
    "locations": [
      "src/perception_pcl/pcl_ros/src/transforms.cpp@51:6::51:40",
      "src/perception_pcl/pcl_ros/src/transforms.cpp@89:6::89:40"
    ]
  },
  {
    "content": "i->second->mimic",
    "locations": [
      "src/robot_state_publisher/src/joint_state_listener.cpp@165:7::165:23"
    ]
  },
  {
    "content": "!kdl_parser::treeFromUrdfModel(model, tree)",
    "locations": [
      "src/robot_state_publisher/src/joint_state_listener.cpp@157:6::157:49"
    ]
  },
  {
    "content": "exe_name == \"state_publisher\"",
    "locations": [
      "src/robot_state_publisher/src/joint_state_listener.cpp@149:6::149:35"
    ]
  },
  {
    "content": "joint_positions.find(i->second->joint_name) != joint_positions.end()",
    "locations": [
      "src/robot_state_publisher/src/joint_state_listener.cpp@121:9::121:77"
    ]
  },
  {
    "content": "state->header.stamp >= last_published + publish_interval_",
    "locations": [
      "src/robot_state_publisher/src/joint_state_listener.cpp@114:6::114:63"
    ]
  },
  {
    "content": "last_callback_time_ > now",
    "locations": [
      "src/robot_state_publisher/src/joint_state_listener.cpp@95:5::95:30"
    ]
  },
  {
    "content": "state->name.size() != state->position.size()",
    "locations": [
      "src/robot_state_publisher/src/joint_state_listener.cpp@88:6::88:50"
    ]
  },
  {
    "content": "!use_tf_static",
    "locations": [
      "src/robot_state_publisher/src/robot_state_publisher.cpp@116:10::116:24"
    ]
  },
  {
    "content": "use_tf_static",
    "locations": [
      "src/robot_state_publisher/src/robot_state_publisher.cpp@123:7::123:20"
    ]
  },
  {
    "content": "seg != segments_.end()",
    "locations": [
      "src/robot_state_publisher/src/robot_state_publisher.cpp@94:10::94:32"
    ]
  },
  {
    "content": "model_.getJoint(child.getJoint().getName()) && model_.getJoint(child.getJoint().getName())->type == urdf::Joint::FLOATING",
    "locations": [
      "src/robot_state_publisher/src/robot_state_publisher.cpp@68:12::68:133"
    ]
  },
  {
    "content": "child.getJoint().getType() == KDL::Joint::None",
    "locations": [
      "src/robot_state_publisher/src/robot_state_publisher.cpp@67:10::67:56"
    ]
  },
  {
    "content": "flatten_tree",
    "locations": [
      "src/robot_state_publisher/src/treefksolverposfull_recursive.cpp@80:8::80:20"
    ]
  },
  {
    "content": "jnt_pos == q_in.end()",
    "locations": [
      "src/robot_state_publisher/src/treefksolverposfull_recursive.cpp@66:8::66:29"
    ]
  },
  {
    "content": "this_segment->first != tree.getRootSegment()->first",
    "locations": [
      "src/robot_state_publisher/src/treefksolverposfull_recursive.cpp@74:6::74:57"
    ]
  },
  {
    "content": "GetTreeElementSegment(this_segment->second).getJoint().getType() != Joint::None",
    "locations": [
      "src/robot_state_publisher/src/treefksolverposfull_recursive.cpp@64:6::64:85"
    ]
  },
  {
    "content": "tokens.size() >= 2",
    "locations": [
      "src/ros/roslib/src/package.cpp@127:8::127:26"
    ]
  },
  {
    "content": "force_recrawl",
    "locations": [
      "src/ros/roslib/src/package.cpp@112:6::112:19"
    ]
  },
  {
    "content": "!it->empty()",
    "locations": [
      "src/ros/roslib/src/package.cpp@82:8::82:20"
    ]
  },
  {
    "content": "!rp.is_quiet()",
    "locations": [
      "src/ros/roslib/src/package.cpp@65:8::65:24",
      "src/ros/roslib/src/package.cpp@59:10::59:26"
    ]
  },
  {
    "content": "ret == 0",
    "locations": [
      "src/ros/roslib/src/package.cpp@56:7::56:15"
    ]
  },
  {
    "content": "connection_disconnect_",
    "locations": [
      "src/ros_comm/message_filters/src/connection.cpp@58:11::58:33"
    ]
  },
  {
    "content": "void_disconnect_",
    "locations": [
      "src/ros_comm/message_filters/src/connection.cpp@54:6::54:22"
    ]
  },
  {
    "content": "!readField(fields, field_name, required, &packed_time)",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@1096:8::1096:62"
    ]
  },
  {
    "content": "fitr == fields.end()",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@1087:8::1087:28",
      "src/ros_comm/rosbag_storage/src/bag.cpp@1071:8::1071:28"
    ]
  },
  {
    "content": "required",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@1072:12::1072:20"
    ]
  },
  {
    "content": "(fitr->second.size() < min_len) || (fitr->second.size() > max_len)",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@1075:13::1075:79"
    ]
  },
  {
    "content": "!parsed",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@1015:8::1015:15",
      "src/ros_comm/rosbag_storage/src/bag.cpp@1058:8::1058:15"
    ]
  },
  {
    "content": "op != OP_MSG_DATA",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@790:8::790:25",
      "src/ros_comm/rosbag_storage/src/bag.cpp@1042:8::1042:25"
    ]
  },
  {
    "content": "chunk_info_version != CHUNK_INFO_VERSION",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@927:8::927:48"
    ]
  },
  {
    "content": "!isOp(fields, OP_CHUNK_INFO)",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@921:8::921:36"
    ]
  },
  {
    "content": "!readHeader(header) || !readDataLength(data_size)",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@918:8::918:57",
      "src/ros_comm/rosbag_storage/src/bag.cpp@587:8::587:57",
      "src/ros_comm/rosbag_storage/src/bag.cpp@783:12::783:61",
      "src/ros_comm/rosbag_storage/src/bag.cpp@525:8::525:57",
      "src/ros_comm/rosbag_storage/src/bag.cpp@373:8::373:57",
      "src/ros_comm/rosbag_storage/src/bag.cpp@703:8::703:57"
    ]
  },
  {
    "content": "chunk_header.compression == COMPRESSION_LZ4",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@767:13::767:56"
    ]
  },
  {
    "content": "chunk_header.compression == COMPRESSION_BZ2",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@765:13::765:56"
    ]
  },
  {
    "content": "chunk_header.compression == COMPRESSION_NONE",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@763:8::763:52"
    ]
  },
  {
    "content": "decompressed_chunk_ == chunk_pos",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@752:8::752:40"
    ]
  },
  {
    "content": "curr_chunk_info_.pos == chunk_pos",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@745:8::745:41"
    ]
  },
  {
    "content": "topic_conn_id_iter == topic_connection_ids_.end()",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@546:8::546:57",
      "src/ros_comm/rosbag_storage/src/bag.cpp@719:8::719:57"
    ]
  },
  {
    "content": "!isOp(fields, OP_MSG_DEF)",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@707:8::707:33"
    ]
  },
  {
    "content": "key == connections_.end()",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@684:8::684:33"
    ]
  },
  {
    "content": "!readHeader(connection_header)",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@679:8::679:38"
    ]
  },
  {
    "content": "!isOp(fields, OP_CONNECTION)",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@670:8::670:36"
    ]
  },
  {
    "content": "!readHeader(header)",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@666:8::666:27"
    ]
  },
  {
    "content": "index_entry.time < ros::TIME_MIN || index_entry.time > ros::TIME_MAX",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@574:12::574:80",
      "src/ros_comm/rosbag_storage/src/bag.cpp@622:12::622:80"
    ]
  },
  {
    "content": "index_version != 1",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@603:8::603:26"
    ]
  },
  {
    "content": "!isOp(fields, OP_INDEX_DATA)",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@591:8::591:36",
      "src/ros_comm/rosbag_storage/src/bag.cpp@529:8::529:36"
    ]
  },
  {
    "content": "index_version != 0",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@541:8::541:26"
    ]
  },
  {
    "content": "!isOp(fields, OP_CHUNK)",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@482:8::482:31"
    ]
  },
  {
    "content": "!readHeader(header) || !readDataLength(chunk_header.compressed_size)",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@477:8::477:76"
    ]
  },
  {
    "content": "compression_ == compression::Uncompressed",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@401:8::401:49"
    ]
  },
  {
    "content": "version_ >= 200",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@388:8::388:23"
    ]
  },
  {
    "content": "index_data_pos_ == 0",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@384:8::384:28"
    ]
  },
  {
    "content": "!isOp(fields, OP_FILE_HEADER)",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@378:8::378:37"
    ]
  },
  {
    "content": "data_len > 0",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@363:8::363:20"
    ]
  },
  {
    "content": "header_len < FILE_HEADER_LENGTH",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@356:8::356:39"
    ]
  },
  {
    "content": "chunk_open_",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@254:8::254:19"
    ]
  },
  {
    "content": "sscanf(version_line.c_str(), \"#ROS%s V%d.%d\", logtypename, &version_major, &version_minor) != 3",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@233:8::233:103"
    ]
  },
  {
    "content": "sscanf_s(version_line.c_str(), \"#ROS%s V%d.%d\", logtypename, sizeof(logtypename), &version_major, &version_minor) != 3",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@231:8::231:126"
    ]
  },
  {
    "content": "!(compression == compression::Uncompressed ||\n          compression == compression::BZ2 ||\n          compression == compression::LZ4)",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@201:8::203:42"
    ]
  },
  {
    "content": "file_.isOpen() && chunk_open_",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@198:8::198:37",
      "src/ros_comm/rosbag_storage/src/bag.cpp@189:8::189:37"
    ]
  },
  {
    "content": "mode_ & bagmode::Write || mode_ & bagmode::Append",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@163:8::163:57"
    ]
  },
  {
    "content": "!file_.isOpen()",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@160:8::160:23"
    ]
  },
  {
    "content": "version_ != 200",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@142:8::142:23"
    ]
  },
  {
    "content": "mode_ & bagmode::Read",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@106:13::106:34"
    ]
  },
  {
    "content": "mode_ & bagmode::Write",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@104:13::104:35"
    ]
  },
  {
    "content": "mode_ & bagmode::Append",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag.cpp@102:8::102:31"
    ]
  },
  {
    "content": "cbs_.find(m.getTopic()) == cbs_.end()",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag_player.cpp@55:12::55:49"
    ]
  },
  {
    "content": "scale > 0.0",
    "locations": [
      "src/ros_comm/rosbag_storage/src/bag_player.cpp@35:6::35:17"
    ]
  },
  {
    "content": "getUnused() || getUnusedLength() > 0",
    "locations": [
      "src/ros_comm/rosbag_storage/src/lz4_stream.cpp@157:12::157:48",
      "src/ros_comm/rosbag_storage/src/bz2_stream.cpp@117:12::117:48"
    ]
  },
  {
    "content": "fgets(buffer, 1024, file_)",
    "locations": [
      "src/ros_comm/rosbag_storage/src/chunked_file.cpp@205:7::205:33"
    ]
  },
  {
    "content": "success != 0",
    "locations": [
      "src/ros_comm/rosbag_storage/src/chunked_file.cpp@184:8::184:20",
      "src/ros_comm/rosbag_storage/src/chunked_file.cpp@142:8::142:20"
    ]
  },
  {
    "content": "!file_",
    "locations": [
      "src/ros_comm/rosbag_storage/src/chunked_file.cpp@117:8::117:14",
      "src/ros_comm/rosbag_storage/src/chunked_file.cpp@166:8::166:14",
      "src/ros_comm/rosbag_storage/src/chunked_file.cpp@178:8::178:14",
      "src/ros_comm/rosbag_storage/src/chunked_file.cpp@134:8::134:14",
      "src/ros_comm/rosbag_storage/src/chunked_file.cpp@154:8::154:14"
    ]
  },
  {
    "content": "type != read_stream_->getCompressionType()",
    "locations": [
      "src/ros_comm/rosbag_storage/src/chunked_file.cpp@169:8::169:50"
    ]
  },
  {
    "content": "type != write_stream_->getCompressionType()",
    "locations": [
      "src/ros_comm/rosbag_storage/src/chunked_file.cpp@157:8::157:51"
    ]
  },
  {
    "content": "file_ == NULL",
    "locations": [
      "src/ros_comm/rosbag_storage/src/chunked_file.cpp@95:12::95:25"
    ]
  },
  {
    "content": "mode == \"r+b\"",
    "locations": [
      "src/ros_comm/rosbag_storage/src/chunked_file.cpp@88:8::88:21"
    ]
  },
  {
    "content": "file_",
    "locations": [
      "src/ros_comm/rosbag_storage/src/chunked_file.cpp@84:8::84:13"
    ]
  },
  {
    "content": "actual_dest_len != dest_len",
    "locations": [
      "src/ros_comm/rosbag_storage/src/lz4_stream.cpp@199:8::199:35"
    ]
  },
  {
    "content": "lz4s_.input_left > 0",
    "locations": [
      "src/ros_comm/rosbag_storage/src/lz4_stream.cpp@178:8::178:28"
    ]
  },
  {
    "content": "feof(getFilePointer())",
    "locations": [
      "src/ros_comm/rosbag_storage/src/lz4_stream.cpp@170:8::170:30"
    ]
  },
  {
    "content": "ferror(getFilePointer())",
    "locations": [
      "src/ros_comm/rosbag_storage/src/lz4_stream.cpp@144:8::144:32"
    ]
  },
  {
    "content": "getUnusedLength() > buff_size_",
    "locations": [
      "src/ros_comm/rosbag_storage/src/lz4_stream.cpp@128:8::128:38"
    ]
  },
  {
    "content": "fwrite(buff_, 1, to_write, getFilePointer()) != static_cast<size_t>(to_write)",
    "locations": [
      "src/ros_comm/rosbag_storage/src/lz4_stream.cpp@104:16::104:93"
    ]
  },
  {
    "content": "lz4s_.output_next - buff_ == buff_size_",
    "locations": [
      "src/ros_comm/rosbag_storage/src/lz4_stream.cpp@89:16::89:55"
    ]
  },
  {
    "content": "to_write > 0",
    "locations": [
      "src/ros_comm/rosbag_storage/src/lz4_stream.cpp@103:12::103:24"
    ]
  },
  {
    "content": "type == info->datatype",
    "locations": [
      "src/ros_comm/rosbag_storage/src/query.cpp@82:12::82:34"
    ]
  },
  {
    "content": "topic == info->topic",
    "locations": [
      "src/ros_comm/rosbag_storage/src/query.cpp@66:12::66:32"
    ]
  },
  {
    "content": "dest_len < source_len",
    "locations": [
      "src/ros_comm/rosbag_storage/src/uncompressed_stream.cpp@108:8::108:29"
    ]
  },
  {
    "content": "(size_t) result != size",
    "locations": [
      "src/ros_comm/rosbag_storage/src/uncompressed_stream.cpp@101:8::101:31",
      "src/ros_comm/rosbag_storage/src/uncompressed_stream.cpp@83:16::83:39"
    ]
  },
  {
    "content": "nUnused < size",
    "locations": [
      "src/ros_comm/rosbag_storage/src/uncompressed_stream.cpp@74:17::74:31"
    ]
  },
  {
    "content": "nUnused == size",
    "locations": [
      "src/ros_comm/rosbag_storage/src/uncompressed_stream.cpp@68:12::68:27"
    ]
  },
  {
    "content": "nUnused > 0",
    "locations": [
      "src/ros_comm/rosbag_storage/src/uncompressed_stream.cpp@66:8::66:19"
    ]
  },
  {
    "content": "result != size",
    "locations": [
      "src/ros_comm/rosbag_storage/src/uncompressed_stream.cpp@56:8::56:22"
    ]
  },
  {
    "content": "query->bag->bag_revision_ != query->bag_revision",
    "locations": [
      "src/ros_comm/rosbag_storage/src/view.cpp@311:12::311:60"
    ]
  },
  {
    "content": "r->bag_query == q && r->connection_info->id == connection->id",
    "locations": [
      "src/ros_comm/rosbag_storage/src/view.cpp@294:20::294:81"
    ]
  },
  {
    "content": "!found",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@266:10::266:16",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@190:8::190:14",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@303:8::303:14",
      "src/ros_comm/roscpp/src/libros/subscription.cpp@300:10::300:16",
      "src/ros_comm/rosbag_storage/src/view.cpp@301:16::301:22",
      "src/ros_comm/xmlrpcpp/src/XmlRpcSocket.cpp@252:6::252:12",
      "src/ros_comm/roscpp/src/libros/subscription.cpp@285:10::285:16"
    ]
  },
  {
    "content": "begin->time < q->query.getStartTime()",
    "locations": [
      "src/ros_comm/rosbag_storage/src/view.cpp@279:14::279:51"
    ]
  },
  {
    "content": "begin != end",
    "locations": [
      "src/ros_comm/rosbag_storage/src/view.cpp@286:12::286:24"
    ]
  },
  {
    "content": "j == q->bag->connection_indexes_.end()",
    "locations": [
      "src/ros_comm/rosbag_storage/src/view.cpp@266:12::266:50"
    ]
  },
  {
    "content": "!q->query.getQuery()(connection)",
    "locations": [
      "src/ros_comm/rosbag_storage/src/view.cpp@260:12::260:44"
    ]
  },
  {
    "content": "(bag.getMode() & bagmode::Read) != bagmode::Read",
    "locations": [
      "src/ros_comm/rosbag_storage/src/view.cpp@247:8::247:56",
      "src/ros_comm/rosbag_storage/src/view.cpp@236:8::236:56"
    ]
  },
  {
    "content": "size_revision_ != view_revision_",
    "locations": [
      "src/ros_comm/rosbag_storage/src/view.cpp@220:6::220:38"
    ]
  },
  {
    "content": "e->time > end",
    "locations": [
      "src/ros_comm/rosbag_storage/src/view.cpp@200:8::200:21"
    ]
  },
  {
    "content": "range->begin->time < begin",
    "locations": [
      "src/ros_comm/rosbag_storage/src/view.cpp@182:8::182:34"
    ]
  },
  {
    "content": "message_instance_ == NULL",
    "locations": [
      "src/ros_comm/rosbag_storage/src/view.cpp@148:8::148:33"
    ]
  },
  {
    "content": "iters_.back().iter == iters_.back().range->end",
    "locations": [
      "src/ros_comm/rosbag_storage/src/view.cpp@138:12::138:58",
      "src/ros_comm/rosbag_storage/src/view.cpp@129:16::129:62"
    ]
  },
  {
    "content": "view_->reduce_overlap_",
    "locations": [
      "src/ros_comm/rosbag_storage/src/view.cpp@122:8::122:30"
    ]
  },
  {
    "content": "view_revision_ != view_->view_revision_",
    "locations": [
      "src/ros_comm/rosbag_storage/src/view.cpp@119:8::119:47"
    ]
  },
  {
    "content": "message_instance_ != NULL",
    "locations": [
      "src/ros_comm/rosbag_storage/src/view.cpp@108:8::108:33",
      "src/ros_comm/rosbag_storage/src/view.cpp@51:6::51:31"
    ]
  },
  {
    "content": "other.iters_.empty()",
    "locations": [
      "src/ros_comm/rosbag_storage/src/view.cpp@98:8::98:28"
    ]
  },
  {
    "content": "iters_.empty()",
    "locations": [
      "src/ros_comm/rosbag_storage/src/view.cpp@96:8::96:22"
    ]
  },
  {
    "content": "start != range->end",
    "locations": [
      "src/ros_comm/rosbag_storage/src/view.cpp@80:12::80:31"
    ]
  },
  {
    "content": "range->begin != range->end",
    "locations": [
      "src/ros_comm/rosbag_storage/src/view.cpp@67:12::67:38"
    ]
  },
  {
    "content": "view != NULL && !end",
    "locations": [
      "src/ros_comm/rosbag_storage/src/view.cpp@56:8::56:28"
    ]
  },
  {
    "content": "event->getLevel() == log4cxx::Level::getDebug()",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/impl/rosconsole_log4cxx.cpp@88:8::88:55",
      "src/ros_comm/rosconsole/src/rosconsole/impl/rosconsole_log4cxx.cpp@326:13::326:60"
    ]
  },
  {
    "content": "event->getLevel() == log4cxx::Level::getWarn()",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/impl/rosconsole_log4cxx.cpp@318:13::318:59",
      "src/ros_comm/rosconsole/src/rosconsole/impl/rosconsole_log4cxx.cpp@96:13::96:59"
    ]
  },
  {
    "content": "event->getLevel() == log4cxx::Level::getFatal()",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/impl/rosconsole_log4cxx.cpp@310:8::310:55",
      "src/ros_comm/rosconsole/src/rosconsole/impl/rosconsole_log4cxx.cpp@104:13::104:60"
    ]
  },
  {
    "content": "level == levels::Fatal",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@349:6::349:28",
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@168:8::168:30",
      "src/ros_comm/rosconsole/src/rosconsole/impl/rosconsole_log4cxx.cpp@284:11::284:33"
    ]
  },
  {
    "content": "level == levels::Error",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@531:8::531:30",
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@587:8::587:30",
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@172:13::172:35",
      "src/ros_comm/rosconsole/src/rosconsole/impl/rosconsole_log4cxx.cpp@280:11::280:33",
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@354:11::354:33"
    ]
  },
  {
    "content": "level == levels::Warn",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@359:11::359:32",
      "src/ros_comm/rosconsole/src/rosconsole/impl/rosconsole_log4cxx.cpp@276:11::276:32",
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@176:13::176:34"
    ]
  },
  {
    "content": "level == levels::Info",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@363:11::363:32",
      "src/ros_comm/rosconsole/src/rosconsole/impl/rosconsole_log4cxx.cpp@272:11::272:32",
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@180:13::180:34"
    ]
  },
  {
    "content": "level == levels::Debug",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@367:11::367:33",
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@184:13::184:35",
      "src/ros_comm/rosconsole/src/rosconsole/impl/rosconsole_log4cxx.cpp@268:6::268:28"
    ]
  },
  {
    "content": "log4cxx_level == log4cxx::Level::getFatal()",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/impl/rosconsole_log4cxx.cpp@251:13::251:56"
    ]
  },
  {
    "content": "log4cxx_level == log4cxx::Level::getWarn()",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/impl/rosconsole_log4cxx.cpp@243:13::243:55"
    ]
  },
  {
    "content": "log4cxx_level == log4cxx::Level::getDebug()",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/impl/rosconsole_log4cxx.cpp@235:8::235:51"
    ]
  },
  {
    "content": "config_file_ptr",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/impl/rosconsole_log4cxx.cpp@147:7::147:24"
    ]
  },
  {
    "content": "format_string != NULL",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/impl/rosconsole_log4cxx.cpp@174:6::174:29"
    ]
  },
  {
    "content": "ros_root_cstr != NULL",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/impl/rosconsole_log4cxx.cpp@168:6::168:29"
    ]
  },
  {
    "content": "config_file_cstr",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/impl/rosconsole_log4cxx.cpp@159:6::159:24"
    ]
  },
  {
    "content": "ros_root_cstr",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/impl/rosconsole_log4cxx.cpp@143:6::143:19"
    ]
  },
  {
    "content": "loc->initialized_",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@623:6::623:23"
    ]
  },
  {
    "content": "!params.out_message.empty()",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@516:8::516:35",
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@579:8::579:35"
    ]
  },
  {
    "content": "enabled",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServer.cpp@258:6::258:13",
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@529:6::529:13",
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@585:6::585:13"
    ]
  },
  {
    "content": "filter",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@567:6::567:12",
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@504:6::504:12"
    ]
  },
  {
    "content": "g_printing_thread_id == boost::this_thread::get_id()",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@485:6::485:58",
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@554:6::554:58"
    ]
  },
  {
    "content": "g_shutting_down",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@551:6::551:21",
      "src/ros_comm/roscpp/src/libros/init.cpp@371:6::371:21",
      "src/ros_comm/roscpp/src/libros/init.cpp@577:6::577:21",
      "src/ros_comm/roscpp/src/libros/init.cpp@390:6::390:21",
      "src/ros_comm/roscpp/src/libros/init.cpp@362:6::362:21",
      "src/ros_comm/roscpp/src/libros/init.cpp@412:6::412:21",
      "src/ros_comm/roscpp/src/libros/init.cpp@380:6::380:21",
      "src/ros_comm/roscpp/src/libros/init.cpp@426:6::426:21",
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@482:6::482:21",
      "src/ros_comm/roscpp/src/libros/init.cpp@401:8::401:23"
    ]
  },
  {
    "content": "g_print_buffer_size <= msg_size",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@519:10::519:41"
    ]
  },
  {
    "content": "total >= buffer_size",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@435:6::435:26"
    ]
  },
  {
    "content": "format_string",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@408:8::408:21"
    ]
  },
  {
    "content": "!g_initialized",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@445:6::445:20",
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@399:6::399:20",
      "src/roscpp_core/rostime/src/time.cpp@245:8::245:22"
    ]
  },
  {
    "content": "matched_once",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@334:6::334:18"
    ]
  },
  {
    "content": "type == \"function\"",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@297:11::297:29"
    ]
  },
  {
    "content": "type == \"line\"",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@293:11::293:25"
    ]
  },
  {
    "content": "type == \"file\"",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@289:11::289:25"
    ]
  },
  {
    "content": "type == \"logger\"",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@285:11::285:27"
    ]
  },
  {
    "content": "type == \"thread\"",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@281:11::281:27"
    ]
  },
  {
    "content": "type == \"time\"",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@277:11::277:25"
    ]
  },
  {
    "content": "type == \"message\"",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@273:11::273:28"
    ]
  },
  {
    "content": "type == \"severity\"",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@269:6::269:24"
    ]
  },
  {
    "content": "ros::Time::isValid() && ros::Time::isSimTime()",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@206:8::206:54"
    ]
  },
  {
    "content": "it == g_extra_fixed_tokens.end()",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole.cpp@141:8::141:40"
    ]
  },
  {
    "content": "function_print",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole_backend.cpp@51:6::51:20"
    ]
  },
  {
    "content": "function_notifyLoggerLevelsChanged",
    "locations": [
      "src/ros_comm/rosconsole/src/rosconsole/rosconsole_backend.cpp@41:6::41:40"
    ]
  },
  {
    "content": "info.marked_for_removal",
    "locations": [
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@251:10::251:33",
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@386:10::386:33"
    ]
  },
  {
    "content": "result == CallbackInterface::TryAgain && !info.marked_for_removal",
    "locations": [
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@398:8::398:73"
    ]
  },
  {
    "content": "id_info",
    "locations": [
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@367:6::367:13"
    ]
  },
  {
    "content": "tls->cb_it == tls->callbacks.end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@355:6::355:40"
    ]
  },
  {
    "content": "tls->calling_in_this_thread == 0xffffffffffffffffULL",
    "locations": [
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@350:6::350:58"
    ]
  },
  {
    "content": "callOneCB(tls) != Empty",
    "locations": [
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@334:8::334:31"
    ]
  },
  {
    "content": "callbacks_.empty() || !enabled_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@311:10::311:41"
    ]
  },
  {
    "content": "!timeout.isZero()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@306:10::306:27",
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@230:10::230:27"
    ]
  },
  {
    "content": "was_empty",
    "locations": [
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@324:8::324:17",
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@277:6::277:15"
    ]
  },
  {
    "content": "callbacks_.empty()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@304:8::304:26",
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@228:8::228:26",
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@235:10::235:28"
    ]
  },
  {
    "content": "info.callback->ready()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@257:10::257:32"
    ]
  },
  {
    "content": "!cb_info.callback",
    "locations": [
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@267:8::267:25"
    ]
  },
  {
    "content": "res != Empty",
    "locations": [
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@283:6::283:18"
    ]
  },
  {
    "content": "info.removal_id == removal_id",
    "locations": [
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@175:12::175:41",
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@200:10::200:39"
    ]
  },
  {
    "content": "it != id_info_.end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@151:10::151:30",
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@134:6::134:26"
    ]
  },
  {
    "content": "tls_->calling_in_this_thread == id_info->id",
    "locations": [
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@186:8::186:51",
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@163:8::163:51"
    ]
  },
  {
    "content": "it == id_info_.end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@119:8::119:28"
    ]
  },
  {
    "content": "!tls_.get()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/callback_queue.cpp@92:6::92:17"
    ]
  },
  {
    "content": "header_.getValue(\"callerid\", callerid)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection.cpp@460:6::460:44"
    ]
  },
  {
    "content": "transport_->requiresHeader()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection.cpp@453:6::453:34"
    ]
  },
  {
    "content": "header_.getValue(\"error\", error_val)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection.cpp@417:8::417:44"
    ]
  },
  {
    "content": "!header_.parse(buffer, size, error_msg)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection.cpp@410:6::410:45"
    ]
  },
  {
    "content": "len > 1000000000",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_publisher_link.cpp@167:6::167:22",
      "src/ros_comm/roscpp/src/libros/connection.cpp@390:6::390:22",
      "src/ros_comm/roscpp/src/libros/service_server_link.cpp@198:6::198:22",
      "src/ros_comm/roscpp/src/libros/service_client_link.cpp@189:6::189:22"
    ]
  },
  {
    "content": "!transport_->requiresHeader()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection.cpp@353:6::353:35"
    ]
  },
  {
    "content": "!dropped_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection.cpp@328:8::328:17",
      "src/ros_comm/roscpp/src/libros/subscription.cpp@150:6::150:15"
    ]
  },
  {
    "content": "did_drop",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection.cpp@335:6::335:14"
    ]
  },
  {
    "content": "immediate",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_server_link.cpp@358:6::358:15",
      "src/ros_comm/roscpp/src/libros/connection.cpp@308:6::308:15"
    ]
  },
  {
    "content": "dropped_ || sending_header_error_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection.cpp@264:6::264:39",
      "src/ros_comm/roscpp/src/libros/connection.cpp@289:6::289:39"
    ]
  },
  {
    "content": "!has_write_callback_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection.cpp@246:8::246:28"
    ]
  },
  {
    "content": "bytes_sent < (int)write_size_ - (int)write_sent_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection.cpp@218:8::218:56"
    ]
  },
  {
    "content": "bytes_sent < 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection.cpp@210:8::210:22"
    ]
  },
  {
    "content": "!lock.owns_lock() || dropped_ || writing_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection.cpp@195:6::195:47"
    ]
  },
  {
    "content": "callback",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection.cpp@141:12::141:20"
    ]
  },
  {
    "content": "bytes_read < 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection.cpp@129:15::129:29"
    ]
  },
  {
    "content": "dropped_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/intraprocess_subscriber_link.cpp@101:8::101:16",
      "src/ros_comm/roscpp/src/libros/intraprocess_publisher_link.cpp@109:6::109:14",
      "src/ros_comm/roscpp/src/libros/intraprocess_subscriber_link.cpp@126:6::126:14",
      "src/ros_comm/roscpp/src/libros/subscription.cpp@181:6::181:14",
      "src/ros_comm/roscpp/src/libros/publication.cpp@201:8::201:16",
      "src/ros_comm/roscpp/src/libros/connection.cpp@125:10::125:18",
      "src/ros_comm/roscpp/src/libros/publication.cpp@160:6::160:14",
      "src/ros_comm/roscpp/src/libros/publication.cpp@435:8::435:16",
      "src/ros_comm/roscpp/src/libros/intraprocess_publisher_link.cpp@84:8::84:16",
      "src/ros_comm/roscpp/src/libros/intraprocess_subscriber_link.cpp@77:6::77:14",
      "src/ros_comm/roscpp/src/libros/intraprocess_publisher_link.cpp@139:6::139:14",
      "src/ros_comm/roscpp/src/libros/publication.cpp@231:8::231:16",
      "src/ros_comm/roscpp/src/libros/publication.cpp@146:8::146:16"
    ]
  },
  {
    "content": "read_filled_ == read_size_ && !dropped_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection.cpp@156:8::156:47"
    ]
  },
  {
    "content": "to_read > 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection.cpp@121:8::121:19"
    ]
  },
  {
    "content": "!has_read_callback_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection.cpp@183:6::183:25"
    ]
  },
  {
    "content": "!lock.owns_lock() || dropped_ || reading_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection.cpp@110:6::110:47"
    ]
  },
  {
    "content": "header_func",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection.cpp@81:6::81:17"
    ]
  },
  {
    "content": "header.getValue(\"service\", val)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection_manager.cpp@219:11::219:42"
    ]
  },
  {
    "content": "header.getValue(\"topic\", val)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection_manager.cpp@210:6::210:35"
    ]
  },
  {
    "content": "tcpserver_transport_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection_manager.cpp@102:6::102:26"
    ]
  },
  {
    "content": "udpserver_transport_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection_manager.cpp@96:6::96:26"
    ]
  },
  {
    "content": "!udpserver_transport_->createIncoming(0, true)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection_manager.cpp@87:6::87:52"
    ]
  },
  {
    "content": "!tcpserver_transport_->listen(network::getTCPROSPort(), \n\t\t\t\t    MAX_TCPROS_CONN_QUEUE, \n\t\t\t\t    boost::bind(&ConnectionManager::tcprosAcceptConnection, this, _1))",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection_manager.cpp@77:6::79:74"
    ]
  },
  {
    "content": "!g_connection_manager",
    "locations": [
      "src/ros_comm/roscpp/src/libros/connection_manager.cpp@47:6::47:27",
      "src/ros_comm/roscpp/src/libros/connection_manager.cpp@50:8::50:29"
    ]
  },
  {
    "content": "!isalnum(this_node::getName()[i])",
    "locations": [
      "src/ros_comm/roscpp/src/libros/file_log.cpp@104:12::104:45"
    ]
  },
  {
    "content": "get_environment_variable(ros_log_env, \"HOME\")",
    "locations": [
      "src/ros_comm/roscpp/src/libros/file_log.cpp@91:13::91:60"
    ]
  },
  {
    "content": "get_environment_variable(ros_log_env, \"ROS_HOME\")",
    "locations": [
      "src/ros_comm/roscpp/src/libros/file_log.cpp@84:12::84:62"
    ]
  },
  {
    "content": "get_environment_variable(ros_log_env, \"ROS_LOG_DIR\")",
    "locations": [
      "src/ros_comm/roscpp/src/libros/file_log.cpp@78:10::78:63"
    ]
  },
  {
    "content": "log_file_name.empty()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/file_log.cpp@72:8::72:29"
    ]
  },
  {
    "content": "it != remappings.end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/this_node.cpp@103:6::103:28",
      "src/ros_comm/roscpp/src/libros/this_node.cpp@96:6::96:28",
      "src/ros_comm/roscpp/src/libros/network.cpp@196:8::196:30",
      "src/ros_comm/roscpp/src/libros/network.cpp@189:6::189:28",
      "src/ros_comm/roscpp/src/libros/file_log.cpp@64:6::64:28",
      "src/ros_comm/roscpp/src/libros/master.cpp@53:6::53:28",
      "src/ros_comm/roscpp/src/libros/network.cpp@203:6::203:28"
    ]
  },
  {
    "content": "g_started",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@594:6::594:15",
      "src/ros_comm/roscpp/src/libros/init.cpp@295:6::295:15"
    ]
  },
  {
    "content": "g_internal_queue_thread.get_id() != boost::this_thread::get_id()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@587:6::587:70"
    ]
  },
  {
    "content": "pos == std::string::npos",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@533:8::533:32"
    ]
  },
  {
    "content": "str_arg.substr(0,pos) == arg",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@519:8::519:36"
    ]
  },
  {
    "content": "pos != std::string::npos",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@476:8::476:32"
    ]
  },
  {
    "content": "!g_global_queue",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@440:6::440:21"
    ]
  },
  {
    "content": "!g_atexit_registered",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@434:6::434:26"
    ]
  },
  {
    "content": "use_sim_time",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@403:8::403:20",
      "src/ros_comm/roscpp/src/libros/init.cpp@396:8::396:20"
    ]
  },
  {
    "content": "enable_debug",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@382:6::382:18"
    ]
  },
  {
    "content": "!(g_init_options & init_options::NoRosout)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@356:6::356:48"
    ]
  },
  {
    "content": "!(g_init_options & init_options::NoSigintHandler)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@349:6::349:55"
    ]
  },
  {
    "content": "env_ipv6",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@330:6::330:14"
    ]
  },
  {
    "content": "get_environment_variable(enable_debug_env,\"ROSCPP_ENABLE_DEBUG\")",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@307:6::307:72"
    ]
  },
  {
    "content": "!g_internal_callback_queue",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@261:6::261:32"
    ]
  },
  {
    "content": "success",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@858:10::858:17",
      "src/ros_comm/roscpp/src/libros/param.cpp@842:10::842:17",
      "src/ros_comm/roscpp/src/libros/transport_publisher_link.cpp@187:6::187:13",
      "src/ros_comm/roscpp/src/libros/init.cpp@239:6::239:13",
      "src/ros_comm/roscpp/src/libros/init.cpp@175:6::175:13"
    ]
  },
  {
    "content": "req.level == \"FATAL\"",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@229:11::229:31"
    ]
  },
  {
    "content": "req.level == \"ERROR\"",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@225:11::225:31"
    ]
  },
  {
    "content": "req.level == \"WARN\"",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@221:11::221:30"
    ]
  },
  {
    "content": "req.level == \"INFO\"",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@217:11::217:30"
    ]
  },
  {
    "content": "req.level == \"DEBUG\"",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@213:6::213:26"
    ]
  },
  {
    "content": "level == ros::console::levels::Fatal",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@198:15::198:51",
      "src/ros_comm/roscpp/src/libros/rosout_appender.cpp@96:11::96:47"
    ]
  },
  {
    "content": "level == ros::console::levels::Warn",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@190:15::190:50",
      "src/ros_comm/roscpp/src/libros/rosout_appender.cpp@88:11::88:46"
    ]
  },
  {
    "content": "level == ros::console::levels::Debug",
    "locations": [
      "src/ros_comm/roscpp/src/libros/rosout_appender.cpp@80:6::80:42",
      "src/ros_comm/roscpp/src/libros/init.cpp@182:10::182:46"
    ]
  },
  {
    "content": "ok() && !isShuttingDown()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@148:6::148:31"
    ]
  },
  {
    "content": "!g_shutting_down",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@132:8::132:24"
    ]
  },
  {
    "content": "g_shutdown_requested",
    "locations": [
      "src/ros_comm/roscpp/src/libros/init.cpp@122:6::122:26"
    ]
  },
  {
    "content": "!g_timer_manager",
    "locations": [
      "src/ros_comm/roscpp/src/libros/internal_timer_manager.cpp@43:6::43:22"
    ]
  },
  {
    "content": "parent",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_subscriber_link.cpp@128:6::128:12",
      "src/ros_comm/roscpp/src/libros/intraprocess_publisher_link.cpp@119:6::119:12",
      "src/ros_comm/roscpp/src/libros/intraprocess_publisher_link.cpp@147:6::147:12",
      "src/ros_comm/roscpp/src/libros/transport_publisher_link.cpp@297:6::297:12"
    ]
  },
  {
    "content": "SubscriptionPtr parent = parent_.lock()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_publisher_link.cpp@114:6::114:45",
      "src/ros_comm/roscpp/src/libros/intraprocess_publisher_link.cpp@98:6::98:45",
      "src/ros_comm/roscpp/src/libros/publisher_link.cpp@94:6::94:45"
    ]
  },
  {
    "content": "publisher_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/intraprocess_publisher_link.cpp@92:6::92:16"
    ]
  },
  {
    "content": "PublicationPtr parent = parent_.lock()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/intraprocess_subscriber_link.cpp@66:6::66:44",
      "src/ros_comm/roscpp/src/libros/transport_subscriber_link.cpp@188:8::188:46",
      "src/ros_comm/roscpp/src/libros/intraprocess_subscriber_link.cpp@115:6::115:44"
    ]
  },
  {
    "content": "subscriber_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/intraprocess_subscriber_link.cpp@109:6::109:17"
    ]
  },
  {
    "content": "fcntl(signal_pair[1], F_SETFL, O_NONBLOCK) == -1",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@387:4::387:52"
    ]
  },
  {
    "content": "pipe(signal_pair) != 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@379:4::379:26"
    ]
  },
  {
    "content": "(set_non_blocking(signal_pair[0]) != 0) || (set_non_blocking(signal_pair[1]) != 0)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@363:8::363:93"
    ]
  },
  {
    "content": "signal_pair[1] == INVALID_SOCKET",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@353:8::353:40"
    ]
  },
  {
    "content": "connect(signal_pair[0], &a.addr, sizeof(a.inaddr)) == SOCKET_ERROR",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@344:8::344:74"
    ]
  },
  {
    "content": "signal_pair[0] == INVALID_SOCKET",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@338:8::338:40"
    ]
  },
  {
    "content": "listen(listen_socket, 1) == SOCKET_ERROR",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@326:8::326:48"
    ]
  },
  {
    "content": "getsockname(listen_socket, &a.addr, &addrlen) == SOCKET_ERROR",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@321:9::321:70"
    ]
  },
  {
    "content": "bind(listen_socket, &a.addr, sizeof(a.inaddr)) == SOCKET_ERROR",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@316:9::316:71"
    ]
  },
  {
    "content": "setsockopt(listen_socket, SOL_SOCKET, SO_REUSEADDR, (char*) &reuse, (socklen_t) sizeof(reuse)) == SOCKET_ERROR",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@304:8::304:119"
    ]
  },
  {
    "content": "listen_socket == INVALID_SOCKET",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@298:5::298:36"
    ]
  },
  {
    "content": "::close(socket) < 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@266:5::266:24"
    ]
  },
  {
    "content": "::closesocket(socket) == SOCKET_ERROR",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@260:4::260:42"
    ]
  },
  {
    "content": "fcntl(socket, F_SETFL, O_NONBLOCK) == -1",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@245:7::245:47"
    ]
  },
  {
    "content": "ioctlsocket( socket, FIONBIO, &non_blocking ) != 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@240:4::240:55"
    ]
  },
  {
    "content": "errno == EINTR",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@223:5::223:19"
    ]
  },
  {
    "content": "(ret == -1) &&\n\t\t\t\t\t\t(errno == ESHUTDOWN || errno == ECONNRESET ||\n\t\t\t\t\t\t(errno == ECONNABORTED) || errno == ENETRESET)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@191:8::193:52"
    ]
  },
  {
    "content": "(ret == -1) &&\n\t\t\t\t\t\t(errno == WSAESHUTDOWN || errno == WSAECONNRESET ||\n\t\t\t\t\t\t(errno == WSAECONNABORTED) || errno == WSAENETRESET)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@187:8::189:58"
    ]
  },
  {
    "content": "fds[i].revents & ~POLLHUP",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@210:7::210:32"
    ]
  },
  {
    "content": "FD_ISSET(fds[i].fd, &exceptfds)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@206:7::206:38"
    ]
  },
  {
    "content": "FD_ISSET(fds[i].fd, &writefds)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@202:7::202:37"
    ]
  },
  {
    "content": "FD_ISSET(fds[i].fd, &readfds)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@178:7::178:36"
    ]
  },
  {
    "content": "fds[i].fd != INVALID_SOCKET",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@175:6::175:33"
    ]
  },
  {
    "content": "timeout == 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@158:6::158:18"
    ]
  },
  {
    "content": "fds[i].fd > max_fd &&\n\t\t\t  (fds[i].events & (POLLIN | POLLOUT | POLLPRI |\n\t\t\t\t\t\t\t\tPOLLRDNORM | POLLRDBAND |\n\t\t\t\t\t\t\t\tPOLLWRNORM | POLLWRBAND))",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@138:6::141:33"
    ]
  },
  {
    "content": "fds[i].events & (POLLOUT | POLLWRNORM | POLLWRBAND)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@132:6::132:57"
    ]
  },
  {
    "content": "fds[i].fd == INVALID_SOCKET",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@126:6::126:33"
    ]
  },
  {
    "content": "result < 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@221:5::221:17",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@165:6::165:16"
    ]
  },
  {
    "content": "rc == 0",
    "locations": [
      "src/ros_comm/rosout/rosout.cpp@193:16::193:23",
      "src/ros_comm/roscpp/src/libros/io.cpp@170:12::170:21"
    ]
  },
  {
    "content": "rc < 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@168:5::168:11"
    ]
  },
  {
    "content": "timeout < 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@154:5::154:16"
    ]
  },
  {
    "content": "rc == -1",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@147:5::147:13"
    ]
  },
  {
    "content": "fds == NULL",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@112:5::112:16"
    ]
  },
  {
    "content": "( errno == EAGAIN  ) || ( errno == EWOULDBLOCK )",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@82:5::82:55"
    ]
  },
  {
    "content": "WSAGetLastError() == WSAEWOULDBLOCK",
    "locations": [
      "src/ros_comm/roscpp/src/libros/io.cpp@76:5::76:42"
    ]
  },
  {
    "content": "!XMLRPCManager::instance()->validateXmlrpcResponse(method, response, payload)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/master.cpp@228:10::228:87"
    ]
  },
  {
    "content": "!g_retry_timeout.isZero() && (ros::WallTime::now() - start_time) >= g_retry_timeout",
    "locations": [
      "src/ros_comm/roscpp/src/libros/master.cpp@216:10::216:93"
    ]
  },
  {
    "content": "!wait_for_master",
    "locations": [
      "src/ros_comm/roscpp/src/libros/master.cpp@210:10::210:26"
    ]
  },
  {
    "content": "!printed && wait_for_master",
    "locations": [
      "src/ros_comm/roscpp/src/libros/master.cpp@204:10::204:37"
    ]
  },
  {
    "content": "!b && ok",
    "locations": [
      "src/ros_comm/roscpp/src/libros/master.cpp@202:8::202:16"
    ]
  },
  {
    "content": "ok && slept",
    "locations": [
      "src/ros_comm/roscpp/src/libros/master.cpp@241:6::241:17"
    ]
  },
  {
    "content": "!execute(\"getSystemState\", args, result, payload, true)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/master.cpp@151:6::151:61"
    ]
  },
  {
    "content": "!execute(\"getPublishedTopics\", args, result, payload, true)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/master.cpp@132:6::132:65"
    ]
  },
  {
    "content": "timeout < ros::WallDuration(0)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/master.cpp@111:6::111:36"
    ]
  },
  {
    "content": "!master_uri_env",
    "locations": [
      "src/ros_comm/roscpp/src/libros/master.cpp@66:8::66:23"
    ]
  },
  {
    "content": "!network::splitURI(g_uri, g_host, g_port)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/master.cpp@87:6::87:47"
    ]
  },
  {
    "content": "g_uri.empty()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/master.cpp@58:6::58:19"
    ]
  },
  {
    "content": "!serialized_message_.buf && serialized_message_.num_bytes > 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/message_deserializer.cpp@62:6::62:67"
    ]
  },
  {
    "content": "serialized_message_.message",
    "locations": [
      "src/ros_comm/roscpp/src/libros/message_deserializer.cpp@56:6::56:33"
    ]
  },
  {
    "content": "msg_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/message_deserializer.cpp@51:6::51:10"
    ]
  },
  {
    "content": "serialized_message_.message && *serialized_message_.type_info != helper->getTypeInfo()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/message_deserializer.cpp@41:6::41:92"
    ]
  },
  {
    "content": "last_pos == std::string::npos",
    "locations": [
      "src/ros_comm/roscpp/src/libros/names.cpp@227:6::227:35"
    ]
  },
  {
    "content": "name.find_last_of('/') == name.size()-1",
    "locations": [
      "src/ros_comm/roscpp/src/libros/names.cpp@220:6::220:45"
    ]
  },
  {
    "content": "!name.compare(\"/\")",
    "locations": [
      "src/ros_comm/roscpp/src/libros/names.cpp@215:6::215:24"
    ]
  },
  {
    "content": "!name.compare(\"\")",
    "locations": [
      "src/ros_comm/roscpp/src/libros/names.cpp@214:6::214:23"
    ]
  },
  {
    "content": "!validate(name, error)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/names.cpp@145:6::145:28",
      "src/ros_comm/roscpp/src/libros/names.cpp@209:6::209:28"
    ]
  },
  {
    "content": "!left.empty() && left[0] != '_' && left != this_node::getName()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/names.cpp@196:8::196:71"
    ]
  },
  {
    "content": "ns[0] == '/'",
    "locations": [
      "src/ros_comm/roscpp/src/libros/names.cpp@157:8::157:20"
    ]
  },
  {
    "content": "ns.empty()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/names.cpp@152:8::152:18"
    ]
  },
  {
    "content": "_remap",
    "locations": [
      "src/ros_comm/roscpp/src/libros/names.cpp@179:6::179:12"
    ]
  },
  {
    "content": "copy[0] != '/'",
    "locations": [
      "src/ros_comm/roscpp/src/libros/names.cpp@172:6::172:20"
    ]
  },
  {
    "content": "copy[0] == '~'",
    "locations": [
      "src/ros_comm/roscpp/src/libros/names.cpp@167:6::167:20"
    ]
  },
  {
    "content": "name.empty()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@243:6::243:18",
      "src/ros_comm/roscpp/src/libros/names.cpp@150:6::150:18",
      "src/ros_comm/roscpp/src/libros/names.cpp@68:6::68:18"
    ]
  },
  {
    "content": "it != g_remappings.end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/names.cpp@128:6::128:30"
    ]
  },
  {
    "content": "*clean.rbegin() == '/'",
    "locations": [
      "src/ros_comm/roscpp/src/libros/names.cpp@110:6::110:28"
    ]
  },
  {
    "content": "!isValidCharInName(c)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/names.cpp@86:8::86:29"
    ]
  },
  {
    "content": "!isalpha(c) && c != '/' && c != '~'",
    "locations": [
      "src/ros_comm/roscpp/src/libros/names.cpp@75:6::75:41"
    ]
  },
  {
    "content": "isalnum(c) || c == '/' || c == '_'",
    "locations": [
      "src/ros_comm/roscpp/src/libros/names.cpp@58:6::58:40"
    ]
  },
  {
    "content": "g_host.empty()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/network.cpp@215:6::215:20"
    ]
  },
  {
    "content": "!isPrivateIP(ip_) &&\n             (isPrivateIP(preferred_ip) || !preferred_ip[0])",
    "locations": [
      "src/ros_comm/roscpp/src/libros/network.cpp@160:13::161:60"
    ]
  },
  {
    "content": "ifa->ifa_addr->sa_family == AF_INET6 && !preferred_ip[0]",
    "locations": [
      "src/ros_comm/roscpp/src/libros/network.cpp@156:8::156:64"
    ]
  },
  {
    "content": "!strcmp(\"127.0.0.1\", ip_) || strchr(ip_,':')",
    "locations": [
      "src/ros_comm/roscpp/src/libros/network.cpp@154:8::154:52"
    ]
  },
  {
    "content": "getnameinfo(ifa->ifa_addr, salen, ip_, sizeof(ip_), NULL, 0,\n                    NI_NUMERICHOST) < 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/network.cpp@146:8::147:39"
    ]
  },
  {
    "content": "ifa->ifa_addr->sa_family == AF_INET6",
    "locations": [
      "src/ros_comm/roscpp/src/libros/network.cpp@142:13::142:49"
    ]
  },
  {
    "content": "ifa->ifa_addr->sa_family == AF_INET",
    "locations": [
      "src/ros_comm/roscpp/src/libros/network.cpp@140:8::140:43"
    ]
  },
  {
    "content": "!ifa->ifa_addr",
    "locations": [
      "src/ros_comm/roscpp/src/libros/network.cpp@138:8::138:22"
    ]
  },
  {
    "content": "ip_env.size() == 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/network.cpp@93:8::93:26",
      "src/ros_comm/roscpp/src/libros/network.cpp@103:8::103:26"
    ]
  },
  {
    "content": "!preferred_ip[0]",
    "locations": [
      "src/ros_comm/roscpp/src/libros/network.cpp@165:6::165:22"
    ]
  },
  {
    "content": "(rc = getifaddrs(&ifp)) < 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/network.cpp@128:6::128:33"
    ]
  },
  {
    "content": "strlen(host) && strcmp(\"localhost\", host)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/network.cpp@118:10::118:51"
    ]
  },
  {
    "content": "gethostname(host,sizeof(host)-1) != 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/network.cpp@113:5::113:42"
    ]
  },
  {
    "content": "get_environment_variable(ip_env, \"ROS_IP\")",
    "locations": [
      "src/ros_comm/roscpp/src/libros/network.cpp@101:6::101:49"
    ]
  },
  {
    "content": "get_environment_variable(ip_env, \"ROS_HOSTNAME\")",
    "locations": [
      "src/ros_comm/roscpp/src/libros/network.cpp@91:6::91:55"
    ]
  },
  {
    "content": "slash_pos != std::string::npos",
    "locations": [
      "src/ros_comm/roscpp/src/libros/network.cpp@68:6::68:36"
    ]
  },
  {
    "content": "colon_pos == std::string::npos",
    "locations": [
      "src/ros_comm/roscpp/src/libros/network.cpp@64:6::64:36"
    ]
  },
  {
    "content": "uri.substr(0, 9) == std::string(\"rosrpc://\")",
    "locations": [
      "src/ros_comm/roscpp/src/libros/network.cpp@60:11::60:55"
    ]
  },
  {
    "content": "uri.substr(0, 7) == std::string(\"http://\")",
    "locations": [
      "src/ros_comm/roscpp/src/libros/network.cpp@58:6::58:48"
    ]
  },
  {
    "content": "it != unresolved_remappings_.end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@753:6::753:40"
    ]
  },
  {
    "content": "impl",
    "locations": [
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@489:10::489:14",
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@503:10::503:14",
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@475:10::475:14",
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@461:10::461:14"
    ]
  },
  {
    "content": "callback_queue_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@288:8::288:23",
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@321:8::321:23",
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@351:8::351:23",
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@405:8::405:23",
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@436:8::436:23"
    ]
  },
  {
    "content": "ops.autostart",
    "locations": [
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@416:6::416:19",
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@447:6::447:19"
    ]
  },
  {
    "content": "ops.callback_queue == 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@286:6::286:29",
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@319:6::319:29",
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@403:6::403:29",
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@434:6::434:29",
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@349:6::349:29"
    ]
  },
  {
    "content": "client",
    "locations": [
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@381:6::381:12"
    ]
  },
  {
    "content": "ServiceManager::instance()->advertiseService(ops)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@361:6::361:55"
    ]
  },
  {
    "content": "TopicManager::instance()->subscribe(ops)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@331:6::331:46"
    ]
  },
  {
    "content": "TopicManager::instance()->advertise(ops, callbacks)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@301:6::301:57"
    ]
  },
  {
    "content": "remap",
    "locations": [
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@274:6::274:11"
    ]
  },
  {
    "content": "!namespace_.empty()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@264:11::264:30"
    ]
  },
  {
    "content": "final[0] == '/'",
    "locations": [
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@260:11::260:26"
    ]
  },
  {
    "content": "final[0] == '~'",
    "locations": [
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@250:6::250:21"
    ]
  },
  {
    "content": "!names::validate(name, error)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@233:6::233:35"
    ]
  },
  {
    "content": "it != remappings_.end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@219:6::219:29"
    ]
  },
  {
    "content": "g_nh_refcount == 0 && g_node_started_by_nh",
    "locations": [
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@186:6::186:48"
    ]
  },
  {
    "content": "g_nh_refcount == 0 && !ros::isStarted()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@169:6::169:45"
    ]
  },
  {
    "content": "validate_name",
    "locations": [
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@158:6::158:19"
    ]
  },
  {
    "content": "!ros::isInitialized()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@148:6::148:27"
    ]
  },
  {
    "content": "!ns.empty() && ns[0] == '~'",
    "locations": [
      "src/ros_comm/roscpp/src/libros/node_handle.cpp@77:6::77:33"
    ]
  },
  {
    "content": "param == \"true\" || param == \"True\" || param == \"TRUE\"",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@863:10::863:63"
    ]
  },
  {
    "content": "name[0] == '_' && name[1] != '_'",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@825:8::825:40"
    ]
  },
  {
    "content": "name.size() < 2",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@820:8::820:23"
    ]
  },
  {
    "content": "g_subscribed_params.find(clean_key) != g_subscribed_params.end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@795:6::795:70"
    ]
  },
  {
    "content": "!master::execute(\"searchParam\", params, result, payload, false)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@778:6::778:69"
    ]
  },
  {
    "content": "it != names::getUnresolvedRemappings().end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@769:6::769:50"
    ]
  },
  {
    "content": "parameters[i].getType() != XmlRpc::XmlRpcValue::TypeString",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@746:8::746:66"
    ]
  },
  {
    "content": "result.getType() != XmlRpc::XmlRpcValue::TypeArray",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@732:6::732:56"
    ]
  },
  {
    "content": "!master::execute(\"getParamNames\", params, result, payload, false)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@728:6::728:71"
    ]
  },
  {
    "content": "!xml_castable<T>(it->second.getType())",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@672:7::672:45"
    ]
  },
  {
    "content": "xml_value.getType() != XmlRpc::XmlRpcValue::TypeStruct",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@662:5::662:59"
    ]
  },
  {
    "content": "!getImpl(key, xml_value, cached)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@657:5::657:37"
    ]
  },
  {
    "content": "!xml_castable<T>(xml_array[i].getType())",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@601:7::601:47"
    ]
  },
  {
    "content": "xml_array.getType() != XmlRpc::XmlRpcValue::TypeArray",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@592:5::592:58"
    ]
  },
  {
    "content": "!getImpl(key, xml_array, cached)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@587:5::587:37"
    ]
  },
  {
    "content": "v.getType() != XmlRpc::XmlRpcValue::TypeBoolean",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@410:6::410:53"
    ]
  },
  {
    "content": "!getImpl(key, v, use_cache)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@408:6::408:33",
      "src/ros_comm/roscpp/src/libros/param.cpp@373:6::373:33",
      "src/ros_comm/roscpp/src/libros/param.cpp@329:6::329:33",
      "src/ros_comm/roscpp/src/libros/param.cpp@340:6::340:33"
    ]
  },
  {
    "content": "fmod(d, 1.0) < 0.5",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@382:8::382:26"
    ]
  },
  {
    "content": "v.getType() == XmlRpc::XmlRpcValue::TypeDouble",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@378:6::378:52"
    ]
  },
  {
    "content": "result",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@250:8::250:14",
      "src/ros_comm/roscpp/src/libros/param.cpp@365:6::365:12"
    ]
  },
  {
    "content": "v.getType() == XmlRpc::XmlRpcValue::TypeInt",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@345:6::345:49"
    ]
  },
  {
    "content": "v.getType() != XmlRpc::XmlRpcValue::TypeString",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@331:6::331:52"
    ]
  },
  {
    "content": "!master::execute(\"subscribeParam\", params, result, payload, false)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@292:12::292:78"
    ]
  },
  {
    "content": "g_subscribed_params.insert(mapped_key).second",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@285:10::285:55"
    ]
  },
  {
    "content": "it->second.valid()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@268:12::268:30"
    ]
  },
  {
    "content": "it != g_params.end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@266:10::266:30"
    ]
  },
  {
    "content": "g_subscribed_params.find(mapped_key) != g_subscribed_params.end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@263:8::263:73",
      "src/ros_comm/roscpp/src/libros/param.cpp@85:10::85:75"
    ]
  },
  {
    "content": "use_cache",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@315:6::315:15",
      "src/ros_comm/roscpp/src/libros/param.cpp@259:6::259:15"
    ]
  },
  {
    "content": "mapped_key.empty()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@257:6::257:24"
    ]
  },
  {
    "content": "!master::execute(\"deleteParam\", params, result, payload, false)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@246:6::246:69"
    ]
  },
  {
    "content": "!master::execute(\"hasParam\", params, result, payload, false)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@221:6::221:66"
    ]
  },
  {
    "content": "master::execute(\"setParam\", params, result, payload, true)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@81:8::81:66"
    ]
  },
  {
    "content": "g_subscribed_params.find(ns_key) != g_subscribed_params.end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/param.cpp@58:8::58:69"
    ]
  },
  {
    "content": "shutting_down_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/xmlrpc_manager.cpp@276:8::276:22",
      "src/ros_comm/roscpp/src/libros/poll_manager.cpp@93:8::93:22",
      "src/ros_comm/roscpp/src/libros/rosout_appender.cpp@126:10::126:24",
      "src/ros_comm/roscpp/src/libros/rosout_appender.cpp@133:10::133:24",
      "src/ros_comm/roscpp/src/libros/service_manager.cpp@137:6::137:20",
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@104:6::104:20",
      "src/ros_comm/roscpp/src/libros/xmlrpc_manager.cpp@147:6::147:20",
      "src/ros_comm/roscpp/src/libros/poll_manager.cpp@70:6::70:20",
      "src/ros_comm/roscpp/src/libros/service_manager.cpp@302:6::302:20",
      "src/ros_comm/roscpp/src/libros/service_manager.cpp@295:6::295:20",
      "src/ros_comm/roscpp/src/libros/service_manager.cpp@253:6::253:20",
      "src/ros_comm/roscpp/src/libros/service_manager.cpp@94:6::94:20",
      "src/ros_comm/roscpp/src/libros/service_manager.cpp@171:6::171:20"
    ]
  },
  {
    "content": "thread_.get_id() != boost::this_thread::get_id()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/poll_manager.cpp@73:6::73:54"
    ]
  },
  {
    "content": "!g_poll_manager",
    "locations": [
      "src/ros_comm/roscpp/src/libros/poll_manager.cpp@40:6::40:21",
      "src/ros_comm/roscpp/src/libros/poll_manager.cpp@43:8::43:23"
    ]
  },
  {
    "content": "events & POLLIN",
    "locations": [
      "src/ros_comm/roscpp/src/libros/poll_set.cpp@279:5::279:20"
    ]
  },
  {
    "content": "!sockets_changed_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/poll_set.cpp@258:6::258:23"
    ]
  },
  {
    "content": "std::find(just_deleted_.begin(), just_deleted_.end(), ufds_[i].fd) != just_deleted_.end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/poll_set.cpp@234:14::234:103"
    ]
  },
  {
    "content": "!skip",
    "locations": [
      "src/ros_comm/roscpp/src/libros/poll_set.cpp@240:12::240:17"
    ]
  },
  {
    "content": "revents & (POLLNVAL|POLLERR|POLLHUP)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/poll_set.cpp@226:12::226:48"
    ]
  },
  {
    "content": "it == socket_info_.end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/poll_set.cpp@127:6::127:30",
      "src/ros_comm/roscpp/src/libros/poll_set.cpp@203:12::203:36"
    ]
  },
  {
    "content": "func\n          && ((events & revents)\n              || (revents & POLLERR)\n              || (revents & POLLHUP)\n              || (revents & POLLNVAL))",
    "locations": [
      "src/ros_comm/roscpp/src/libros/poll_set.cpp@219:10::223:38"
    ]
  },
  {
    "content": "ufds_[i].revents == 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/poll_set.cpp@191:10::191:31"
    ]
  },
  {
    "content": "ret > 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/poll_set.cpp@186:11::186:18"
    ]
  },
  {
    "content": "(ret = poll_sockets(&ufds_.front(), ufds_count, poll_timeout)) < 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/poll_set.cpp@182:5::182:71"
    ]
  },
  {
    "content": "write_signal(signal_pipe_[1], &b, 1) < 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/poll_set.cpp@167:8::167:48"
    ]
  },
  {
    "content": "lock.owns_lock()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/poll_set.cpp@164:6::164:22"
    ]
  },
  {
    "content": "it != socket_info_.end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/poll_set.cpp@100:6::100:30",
      "src/ros_comm/roscpp/src/libros/poll_set.cpp@145:6::145:30"
    ]
  },
  {
    "content": "fd < 0",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServer.cpp@77:6::77:12",
      "src/ros_comm/roscpp/src/libros/poll_set.cpp@93:5::93:11",
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@221:6::221:12"
    ]
  },
  {
    "content": "!b",
    "locations": [
      "src/ros_comm/roscpp/src/libros/poll_set.cpp@77:8::77:10"
    ]
  },
  {
    "content": "create_signal_pair(signal_pipe_) != 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/poll_set.cpp@52:5::52:44"
    ]
  },
  {
    "content": "getMD5Sum() != md5sum &&\n      (md5sum != std::string(\"*\") && getMD5Sum() != std::string(\"*\"))",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publication.cpp@487:6::488:69"
    ]
  },
  {
    "content": "isDropped()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publication.cpp@476:5::476:16"
    ]
  },
  {
    "content": "!header.getValue(\"md5sum\", md5sum)\n   || !header.getValue(\"topic\", topic)\n   || !header.getValue(\"callerid\", client_callerid)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publication.cpp@460:6::462:51"
    ]
  },
  {
    "content": "queue.empty()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publication.cpp@444:6::444:19"
    ]
  },
  {
    "content": "sub->isIntraprocess()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publication.cpp@413:10::413:31"
    ]
  },
  {
    "content": "m.buf",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publication.cpp@422:6::422:11"
    ]
  },
  {
    "content": "m.message",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publication.cpp@405:6::405:15"
    ]
  },
  {
    "content": "serialize && nocopy",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publication.cpp@390:8::390:27"
    ]
  },
  {
    "content": "cbs->disconnect_ && cbs->callback_queue_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publication.cpp@347:8::347:48"
    ]
  },
  {
    "content": "cbs->connect_ && cbs->callback_queue_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publication.cpp@332:8::332:45"
    ]
  },
  {
    "content": "it != subscriber_links_.end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publication.cpp@242:8::242:37"
    ]
  },
  {
    "content": "sub_link->isIntraprocess()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publication.cpp@208:8::208:34",
      "src/ros_comm/roscpp/src/libros/publication.cpp@236:8::236:34"
    ]
  },
  {
    "content": "link",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publication.cpp@249:6::249:10"
    ]
  },
  {
    "content": "latch_ && last_message_.buf",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publication.cpp@214:6::214:33"
    ]
  },
  {
    "content": "latch_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publication.cpp@188:6::188:12"
    ]
  },
  {
    "content": "has_header_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publication.cpp@168:6::168:17"
    ]
  },
  {
    "content": "cb->callback_queue_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publication.cpp@130:8::130:27"
    ]
  },
  {
    "content": "it != callbacks_.end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publication.cpp@127:6::127:28"
    ]
  },
  {
    "content": "callbacks->connect_ && callbacks->callback_queue_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publication.cpp@108:6::108:55"
    ]
  },
  {
    "content": "use_tracked_object_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publication.cpp@53:8::53:27"
    ]
  },
  {
    "content": "publication_ptr",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publisher.cpp@141:6::141:21"
    ]
  },
  {
    "content": "impl_ && impl_->isValid()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publisher.cpp@97:6::97:31",
      "src/ros_comm/roscpp/src/libros/publisher.cpp@124:6::124:31",
      "src/ros_comm/roscpp/src/libros/service_server.cpp@84:6::84:31",
      "src/ros_comm/roscpp/src/libros/subscriber.cpp@99:8::99:33",
      "src/ros_comm/roscpp/src/libros/publisher.cpp@134:6::134:31"
    ]
  },
  {
    "content": "impl_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscriber.cpp@81:8::81:13",
      "src/ros_comm/roscpp/src/libros/wall_timer.cpp@113:6::113:11",
      "src/ros_comm/roscpp/src/libros/service_client.cpp@177:6::177:11",
      "src/ros_comm/roscpp/src/libros/wall_timer.cpp@139:6::139:11",
      "src/ros_comm/roscpp/src/libros/publisher.cpp@114:6::114:11",
      "src/ros_comm/roscpp/src/libros/service_client.cpp@185:6::185:11",
      "src/ros_comm/roscpp/src/libros/timer.cpp@129:6::129:11",
      "src/ros_comm/roscpp/src/libros/timer.cpp@121:6::121:11",
      "src/ros_comm/roscpp/src/libros/timer.cpp@113:6::113:11",
      "src/ros_comm/roscpp/src/libros/service_server.cpp@76:6::76:11",
      "src/ros_comm/roscpp/src/libros/wall_timer.cpp@129:6::129:11",
      "src/ros_comm/roscpp/src/libros/subscriber.cpp@89:8::89:13",
      "src/ros_comm/roscpp/src/libros/wall_timer.cpp@121:6::121:11",
      "src/ros_comm/roscpp/src/libros/timer.cpp@139:6::139:11",
      "src/ros_comm/roscpp/src/libros/service_client.cpp@167:6::167:11",
      "src/ros_comm/roscpp/src/libros/service_client.cpp@205:6::205:11",
      "src/ros_comm/roscpp/src/libros/publisher.cpp@105:6::105:11",
      "src/ros_comm/roscpp/src/libros/service_client.cpp@195:6::195:11"
    ]
  },
  {
    "content": "!impl_->isValid()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publisher.cpp@86:6::86:23"
    ]
  },
  {
    "content": "!impl_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_client.cpp@157:6::157:12",
      "src/ros_comm/roscpp/src/libros/publisher.cpp@80:6::80:12"
    ]
  },
  {
    "content": "!unadvertised_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_server.cpp@50:6::50:20",
      "src/ros_comm/roscpp/src/libros/publisher.cpp@51:6::51:20"
    ]
  },
  {
    "content": "latched_str == \"1\"",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publisher_link.cpp@85:8::85:26"
    ]
  },
  {
    "content": "header.getValue(\"latching\", latched_str)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publisher_link.cpp@83:6::83:46"
    ]
  },
  {
    "content": "!header.getValue(\"type\", type)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publisher_link.cpp@76:6::76:36"
    ]
  },
  {
    "content": "!header.getValue(\"md5sum\", md5sum)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/publisher_link.cpp@68:6::68:40",
      "src/ros_comm/roscpp/src/libros/service_server_link.cpp@142:6::142:40"
    ]
  },
  {
    "content": "level == ::ros::console::levels::Fatal || level == ::ros::console::levels::Error",
    "locations": [
      "src/ros_comm/roscpp/src/libros/rosout_appender.cpp@107:6::107:86"
    ]
  },
  {
    "content": "(current_time - start_time) >= timeout",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service.cpp@110:12::110:50"
    ]
  },
  {
    "content": "timeout >= Duration(0)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service.cpp@106:10::106:32"
    ]
  },
  {
    "content": "exists(service_name, !printed)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service.cpp@97:8::97:38"
    ]
  },
  {
    "content": "printed && ros::ok()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service.cpp@120:6::120:26"
    ]
  },
  {
    "content": "print_failure_reason",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service.cpp@78:8::78:28",
      "src/ros_comm/roscpp/src/libros/service.cpp@70:10::70:30"
    ]
  },
  {
    "content": "transport->connect(host, port)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service.cpp@52:8::52:38",
      "src/ros_comm/roscpp/src/libros/transport_publisher_link.cpp@226:10::226:40"
    ]
  },
  {
    "content": "ServiceManager::instance()->lookupService(mapped_name, host, port)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service.cpp@48:6::48:72"
    ]
  },
  {
    "content": "!link",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_client.cpp@137:8::137:13"
    ]
  },
  {
    "content": "!impl_->server_link_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_client.cpp@125:10::125:30",
      "src/ros_comm/roscpp/src/libros/service_client.cpp@121:8::121:28"
    ]
  },
  {
    "content": "impl_->persistent_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_client.cpp@119:6::119:24"
    ]
  },
  {
    "content": "service_md5sum != impl_->service_md5sum_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_client.cpp@110:6::110:46"
    ]
  },
  {
    "content": "persistent",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_client.cpp@92:6::92:16"
    ]
  },
  {
    "content": "!server_link_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_client.cpp@76:6::76:19"
    ]
  },
  {
    "content": "is_shutdown_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_client.cpp@71:6::71:18"
    ]
  },
  {
    "content": "!persistent_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_client.cpp@66:6::66:18",
      "src/ros_comm/roscpp/src/libros/service_client.cpp@50:8::50:20",
      "src/ros_comm/roscpp/src/libros/service_server_link.cpp@304:8::304:20"
    ]
  },
  {
    "content": "server_link_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_client.cpp@55:8::55:20"
    ]
  },
  {
    "content": "!is_shutdown_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_client.cpp@48:6::48:19"
    ]
  },
  {
    "content": "persistent_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_client_link.cpp@223:6::223:17"
    ]
  },
  {
    "content": "ServicePublicationPtr parent = parent_.lock()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_client_link.cpp@209:6::209:51",
      "src/ros_comm/roscpp/src/libros/service_client_link.cpp@167:6::167:51"
    ]
  },
  {
    "content": "persistent == \"1\" || persistent == \"true\"",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_client_link.cpp@96:8::96:49"
    ]
  },
  {
    "content": "ss->isDropped()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_client_link.cpp@133:5::133:20"
    ]
  },
  {
    "content": "ss->getMD5Sum() != md5sum &&\n      (md5sum != std::string(\"*\") && ss->getMD5Sum() != std::string(\"*\"))",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_client_link.cpp@115:6::116:73"
    ]
  },
  {
    "content": "!ss",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_client_link.cpp@104:6::104:9"
    ]
  },
  {
    "content": "!header.getValue(\"md5sum\", md5sum)\n   || !header.getValue(\"service\", service)\n   || !header.getValue(\"callerid\", client_callerid)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_client_link.cpp@80:6::82:51"
    ]
  },
  {
    "content": "connection_->isSendingHeaderError()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_client_link.cpp@58:8::58:43",
      "src/ros_comm/roscpp/src/libros/transport_subscriber_link.cpp@236:6::236:41"
    ]
  },
  {
    "content": "connection_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_publisher_link.cpp@157:8::157:19",
      "src/ros_comm/roscpp/src/libros/service_client_link.cpp@56:6::56:17"
    ]
  },
  {
    "content": "!network::splitURI(serv_uri, serv_host, serv_port)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_manager.cpp@332:6::332:56"
    ]
  },
  {
    "content": "!serv_uri.length()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_manager.cpp@325:6::325:24"
    ]
  },
  {
    "content": "!master::execute(\"lookupService\", args, result, payload, false)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_manager.cpp@321:6::321:69"
    ]
  },
  {
    "content": "it != service_server_links_.end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_manager.cpp@310:6::310:39"
    ]
  },
  {
    "content": "transport->connect(serv_host, serv_port)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_manager.cpp@273:6::273:46"
    ]
  },
  {
    "content": "!lookupService(service, serv_host, serv_port)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_manager.cpp@260:6::260:51"
    ]
  },
  {
    "content": "(*t)->getName() == service",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_manager.cpp@238:8::238:34"
    ]
  },
  {
    "content": "((*s)->getName() == serv_name) && !(*s)->isDropped()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_manager.cpp@222:8::222:60"
    ]
  },
  {
    "content": "(*i)->getName() == serv_name && !(*i)->isDropped()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_manager.cpp@183:9::183:59"
    ]
  },
  {
    "content": "pub",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@780:6::780:9",
      "src/ros_comm/roscpp/src/libros/service_manager.cpp@192:6::192:9",
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@771:6::771:9"
    ]
  },
  {
    "content": "isServiceAdvertised(ops.service)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_manager.cpp@145:8::145:40"
    ]
  },
  {
    "content": "!g_service_manager",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_manager.cpp@59:6::59:24",
      "src/ros_comm/roscpp/src/libros/service_manager.cpp@62:8::62:26"
    ]
  },
  {
    "content": "it != client_links_.end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_publication.cpp@176:6::176:31"
    ]
  },
  {
    "content": "ok != 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_publication.cpp@126:10::126:17",
      "src/ros_comm/roscpp/src/libros/service_server_link.cpp@211:8::211:17"
    ]
  },
  {
    "content": "link_->getConnection()->isDropped()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_publication.cpp@101:8::101:43"
    ]
  },
  {
    "content": "tracked_object",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@709:8::709:22",
      "src/ros_comm/roscpp/src/libros/service_publication.cpp@61:6::61:20"
    ]
  },
  {
    "content": "call_queue_.empty() && header_written_ && header_read_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_server_link.cpp@350:8::350:62"
    ]
  },
  {
    "content": "connection_->isDropped()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_server_link.cpp@343:8::343:32"
    ]
  },
  {
    "content": "info->exception_string_.length() > 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_server_link.cpp@374:6::374:42"
    ]
  },
  {
    "content": "!call_queue_.empty()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_server_link.cpp@289:8::289:28"
    ]
  },
  {
    "content": "current_call_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_server_link.cpp@284:8::284:21"
    ]
  },
  {
    "content": "empty",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_server_link.cpp@302:6::302:11",
      "src/ros_comm/roscpp/src/libros/service_server_link.cpp@153:8::153:13"
    ]
  },
  {
    "content": "current_call_->success_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_server_link.cpp@238:8::238:31"
    ]
  },
  {
    "content": "!empty",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_server_link.cpp@159:6::159:12"
    ]
  },
  {
    "content": "local_current",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_server_link.cpp@97:6::97:19"
    ]
  },
  {
    "content": "boost::this_thread::get_id() != info->caller_thread_id_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/service_server_link.cpp@79:6::79:61"
    ]
  },
  {
    "content": "use_call_available",
    "locations": [
      "src/ros_comm/roscpp/src/libros/spinner.cpp@195:8::195:26"
    ]
  },
  {
    "content": "!continue_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/spinner.cpp@172:6::172:16"
    ]
  },
  {
    "content": "!spinlock.owns_lock()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/spinner.cpp@46:5::46:26",
      "src/ros_comm/roscpp/src/libros/spinner.cpp@74:6::74:27",
      "src/ros_comm/roscpp/src/libros/spinner.cpp@151:6::151:27"
    ]
  },
  {
    "content": "continue_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/spinner.cpp@147:6::147:15"
    ]
  },
  {
    "content": "thread_count_ == 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/spinner.cpp@120:8::120:26"
    ]
  },
  {
    "content": "!queue",
    "locations": [
      "src/ros_comm/roscpp/src/libros/spinner.cpp@54:6::54:12",
      "src/ros_comm/roscpp/src/libros/spinner.cpp@126:6::126:12"
    ]
  },
  {
    "content": "thread_count == 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/spinner.cpp@116:6::116:23"
    ]
  },
  {
    "content": "it == stats.arrival_time_list.begin()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/statistics.cpp@188:12::188:49",
      "src/ros_comm/roscpp/src/libros/statistics.cpp@205:12::205:49"
    ]
  },
  {
    "content": "period > msg.period_max",
    "locations": [
      "src/ros_comm/roscpp/src/libros/statistics.cpp@195:12::195:35"
    ]
  },
  {
    "content": "age > msg.stamp_age_max",
    "locations": [
      "src/ros_comm/roscpp/src/libros/statistics.cpp@140:12::140:35"
    ]
  },
  {
    "content": "stats.arrival_time_list.size() > static_cast<size_t>(max_elements) && pub_frequency_ * 2 <= max_window",
    "locations": [
      "src/ros_comm/roscpp/src/libros/statistics.cpp@236:8::236:110"
    ]
  },
  {
    "content": "!pub_.getTopic().length()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/statistics.cpp@226:8::226:33"
    ]
  },
  {
    "content": "stats.arrival_time_list.size() > 1",
    "locations": [
      "src/ros_comm/roscpp/src/libros/statistics.cpp@180:8::180:42"
    ]
  },
  {
    "content": "stats.age_list.size() > 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/statistics.cpp@130:8::130:33"
    ]
  },
  {
    "content": "stats.last_publish + ros::Duration(pub_frequency_) < received_time",
    "locations": [
      "src/ros_comm/roscpp/src/libros/statistics.cpp@113:6::113:72"
    ]
  },
  {
    "content": "hasHeader_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/statistics.cpp@96:6::96:16"
    ]
  },
  {
    "content": "dropped",
    "locations": [
      "src/ros_comm/roscpp/src/libros/statistics.cpp@89:6::89:13"
    ]
  },
  {
    "content": "stats_it == map_.end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/statistics.cpp@73:6::73:28"
    ]
  },
  {
    "content": "topic == \"/statistics\" || topic == \"/clock\"",
    "locations": [
      "src/ros_comm/roscpp/src/libros/statistics.cpp@66:6::66:49"
    ]
  },
  {
    "content": "!enable_statistics",
    "locations": [
      "src/ros_comm/roscpp/src/libros/statistics.cpp@60:6::60:24"
    ]
  },
  {
    "content": "!unsubscribed_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscriber.cpp@52:8::52:22"
    ]
  },
  {
    "content": "datatype != parent->getDataType()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscriber_link.cpp@58:6::58:39"
    ]
  },
  {
    "content": "!parent",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscriber_link.cpp@50:6::50:13"
    ]
  },
  {
    "content": "nocopy && ser",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@832:8::832:21"
    ]
  },
  {
    "content": "info->helper_->getTypeInfo() == ti",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@823:8::823:42"
    ]
  },
  {
    "content": "pub_link->isLatched()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@810:6::810:27"
    ]
  },
  {
    "content": "it != publisher_links_.end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@805:6::805:34"
    ]
  },
  {
    "content": "md5sum_ == \"*\"",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@789:6::789:20"
    ]
  },
  {
    "content": "!helper->isConst()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@768:12::768:30",
      "src/ros_comm/roscpp/src/libros/subscription.cpp@714:8::714:26"
    ]
  },
  {
    "content": "(*it)->helper_ == helper",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@763:10::763:34"
    ]
  },
  {
    "content": "info",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@778:6::778:10"
    ]
  },
  {
    "content": "!was_full",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@742:16::742:25"
    ]
  },
  {
    "content": "des_it != latched_messages_.end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@735:14::735:47"
    ]
  },
  {
    "content": "link->isLatched()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@663:6::663:23",
      "src/ros_comm/roscpp/src/libros/subscription.cpp@732:12::732:29"
    ]
  },
  {
    "content": "!latched_messages_.empty()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@723:8::723:34"
    ]
  },
  {
    "content": "md5sum_ == \"*\" && md5sum != \"*\"",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@688:8::688:39"
    ]
  },
  {
    "content": "md5sum != \"*\" && md5sum != this->md5sum()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@695:6::695:47"
    ]
  },
  {
    "content": "*des_it->first == *ti",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@626:12::626:33"
    ]
  },
  {
    "content": "was_full",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription_queue.cpp@55:6::55:14",
      "src/ros_comm/roscpp/src/libros/subscription_queue.cpp@72:8::72:16",
      "src/ros_comm/roscpp/src/libros/subscription.cpp@648:10::648:18"
    ]
  },
  {
    "content": "callbacks_.size() > 1",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@641:10::641:31"
    ]
  },
  {
    "content": "!deserializer",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@633:10::633:23"
    ]
  },
  {
    "content": "(nocopy && m.type_info && *ti == *m.type_info) || (ser && (!m.type_info || *ti != *m.type_info))",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@618:8::618:104"
    ]
  },
  {
    "content": "pub_link->setHeader(h)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@569:8::569:30"
    ]
  },
  {
    "content": "h.getValue(\"error\", error_msg)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@561:8::561:38"
    ]
  },
  {
    "content": "!h.parse(buffer, header_bytes.size(), err)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@552:8::552:50"
    ]
  },
  {
    "content": "proto.size() != 6 ||\n        proto[1].getType() != XmlRpcValue::TypeString ||\n        proto[2].getType() != XmlRpcValue::TypeInt ||\n        proto[3].getType() != XmlRpcValue::TypeInt ||\n        proto[4].getType() != XmlRpcValue::TypeInt ||\n        proto[5].getType() != XmlRpcValue::TypeBase64",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@531:8::536:53"
    ]
  },
  {
    "content": "transport->connect(pub_host, pub_port)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@509:8::509:46"
    ]
  },
  {
    "content": "proto.size() != 3 ||\n        proto[1].getType() != XmlRpcValue::TypeString ||\n        proto[2].getType() != XmlRpcValue::TypeInt",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@496:8::498:50"
    ]
  },
  {
    "content": "proto_name == \"UDPROS\"",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@529:11::529:33"
    ]
  },
  {
    "content": "proto_name == \"TCPROS\"",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@494:6::494:28"
    ]
  },
  {
    "content": "proto.getType() != XmlRpcValue::TypeArray",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@480:6::480:47",
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@601:8::601:49"
    ]
  },
  {
    "content": "!XMLRPCManager::instance()->validateXmlrpcResponse(\"requestTopic\", result, proto)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@465:5::465:86"
    ]
  },
  {
    "content": "shutting_down_ || dropped_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@445:6::445:32",
      "src/ros_comm/roscpp/src/libros/subscription.cpp@210:6::210:32"
    ]
  },
  {
    "content": "trans",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@436:6::436:11"
    ]
  },
  {
    "content": "udp_transport",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@410:8::410:21"
    ]
  },
  {
    "content": "!max_datagram_size",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@359:10::359:28"
    ]
  },
  {
    "content": "*it == \"TCP\"",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@379:13::379:25"
    ]
  },
  {
    "content": "*it == \"UDP\"",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@355:8::355:20"
    ]
  },
  {
    "content": "!c->executeNonBlock(\"requestTopic\", params)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@405:6::405:49"
    ]
  },
  {
    "content": "!network::splitURI(xmlrpc_uri, peer_host, peer_port)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@394:6::394:58"
    ]
  },
  {
    "content": "transports.empty()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@346:6::346:24"
    ]
  },
  {
    "content": "XMLRPCManager::instance()->getServerURI() != *i",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@326:8::326:55"
    ]
  },
  {
    "content": "link->getPublisherXMLRPCURI() != XMLRPCManager::instance()->getServerURI()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@310:8::310:82"
    ]
  },
  {
    "content": "urisEqual(*up_i, (*it)->getRemoteURI())",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@292:14::292:53"
    ]
  },
  {
    "content": "urisEqual(*up_i, (*spc)->getPublisherXMLRPCURI())",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@278:12::278:61"
    ]
  },
  {
    "content": "urisEqual((*spc)->getPublisherXMLRPCURI(), *up_i)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription.cpp@259:12::259:61"
    ]
  },
  {
    "content": "i.has_tracked_object",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription_queue.cpp@136:8::136:28"
    ]
  },
  {
    "content": "queue_.empty()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription_queue.cpp@131:8::131:22",
      "src/ros_comm/roscpp/src/libros/subscription_queue.cpp@124:8::124:22"
    ]
  },
  {
    "content": "!lock.owns_lock()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription_queue.cpp@112:8::112:25"
    ]
  },
  {
    "content": "msg",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription_queue.cpp@153:6::153:9"
    ]
  },
  {
    "content": "!allow_concurrent_callbacks_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription_queue.cpp@109:6::109:34"
    ]
  },
  {
    "content": "!full_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription_queue.cpp@65:8::65:14"
    ]
  },
  {
    "content": "fullNoLock()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/subscription_queue.cpp@60:5::60:17"
    ]
  },
  {
    "content": "options & init_options::AnonymousName && !disable_anon",
    "locations": [
      "src/ros_comm/roscpp/src/libros/this_node.cpp@142:6::142:60"
    ]
  },
  {
    "content": "g_name.find(\"/\") != std::string::npos",
    "locations": [
      "src/ros_comm/roscpp/src/libros/this_node.cpp@131:6::131:43"
    ]
  },
  {
    "content": "!names::validate(g_namespace, error)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/this_node.cpp@120:6::120:42"
    ]
  },
  {
    "content": "g_namespace.empty()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/this_node.cpp@108:6::108:25"
    ]
  },
  {
    "content": "ns_env",
    "locations": [
      "src/ros_comm/roscpp/src/libros/this_node.cpp@84:6::84:12"
    ]
  },
  {
    "content": "!isValid() || timer_handle_ == -1",
    "locations": [
      "src/ros_comm/roscpp/src/libros/timer.cpp@77:6::77:39",
      "src/ros_comm/roscpp/src/libros/wall_timer.cpp@76:6::76:39"
    ]
  },
  {
    "content": "!timeout.isZero() && ros::Time::now() >= end",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic.cpp@57:8::57:52"
    ]
  },
  {
    "content": "!requestTopic(params[1], params[2], result)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@1031:6::1031:49"
    ]
  },
  {
    "content": "pubUpdate(params[1], pubs)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@1019:6::1019:32"
    ]
  },
  {
    "content": "!(*t)->isDropped() && (*t)->getName() == topic",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@901:8::901:54"
    ]
  },
  {
    "content": "isShuttingDown()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@893:6::893:22",
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@562:8::562:24",
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@714:6::714:22",
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@213:8::213:24",
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@869:6::869:22",
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@811:8::811:24",
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@415:8::415:24",
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@335:8::335:24",
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@261:6::261:22"
    ]
  },
  {
    "content": "p",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@875:6::875:7"
    ]
  },
  {
    "content": "(*it)->getName() == topic",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@820:10::820:35",
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@845:12::845:37"
    ]
  },
  {
    "content": "!unregisterSubscriber(topic)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@852:10::852:38"
    ]
  },
  {
    "content": "sub->getNumCallbacks() == 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@835:6::835:33"
    ]
  },
  {
    "content": "!sub",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@828:6::828:10"
    ]
  },
  {
    "content": "((*i)->getName() == topic) && (!(*i)->isDropped())",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@794:8::794:58",
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@423:9::423:59"
    ]
  },
  {
    "content": "serialize",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@757:8::757:17"
    ]
  },
  {
    "content": "serialize || p->isLatching()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@745:8::745:36"
    ]
  },
  {
    "content": "!nocopy",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@739:8::739:15"
    ]
  },
  {
    "content": "m.type_info && m.message",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@730:8::730:32"
    ]
  },
  {
    "content": "p->hasSubscribers() || p->isLatching()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@720:6::720:44"
    ]
  },
  {
    "content": "!transport",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@669:10::669:20"
    ]
  },
  {
    "content": "!pub_ptr->validateHeader(h, error_msg)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@660:10::660:48"
    ]
  },
  {
    "content": "proto.size() != 5 ||\n          proto[1].getType() != XmlRpcValue::TypeBase64 ||\n          proto[2].getType() != XmlRpcValue::TypeString ||\n          proto[3].getType() != XmlRpcValue::TypeInt ||\n          proto[4].getType() != XmlRpcValue::TypeInt",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@628:10::632:52"
    ]
  },
  {
    "content": "proto_name == string(\"UDPROS\")",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@626:13::626:43"
    ]
  },
  {
    "content": "proto_name == string(\"TCPROS\")",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@615:8::615:38"
    ]
  },
  {
    "content": "(*s)->getName() != topic || (*s)->isDropped()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@572:10::572:55"
    ]
  },
  {
    "content": "sub",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@581:6::581:9"
    ]
  },
  {
    "content": "!md5sumsMatch(pub_md5sum, sub_md5sum)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@518:7::518:44"
    ]
  },
  {
    "content": "pub->getName() == s->getName() && !pub->isDropped()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@516:10::516:61"
    ]
  },
  {
    "content": "payload[i] != xmlrpc_manager_->getServerURI()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@497:8::497:53"
    ]
  },
  {
    "content": "self_subscribed",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@536:6::536:21"
    ]
  },
  {
    "content": "!master::execute(\"registerSubscriber\", args, result, payload, true)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@489:6::489:73"
    ]
  },
  {
    "content": "((*t)->getName() == topic) && (!(*t)->isDropped())",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@472:8::472:58"
    ]
  },
  {
    "content": "pub->getNumCallbacks() == 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@440:8::440:35"
    ]
  },
  {
    "content": "!pub",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@431:6::431:10"
    ]
  },
  {
    "content": "(*s)->getName() == ops.topic && md5sumsMatch((*s)->md5sum(), ops.md5sum) && !(*s)->isDropped()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@384:10::384:104"
    ]
  },
  {
    "content": "pub->getMD5Sum() != ops.md5sum",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@348:10::348:40"
    ]
  },
  {
    "content": "pub && pub->getNumCallbacks() == 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@341:8::341:42"
    ]
  },
  {
    "content": "found",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@393:5::393:10",
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@240:11::240:16"
    ]
  },
  {
    "content": "ops.message_definition.empty()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@325:6::325:36"
    ]
  },
  {
    "content": "ops.datatype.empty()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@320:6::320:26",
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@271:6::271:26"
    ]
  },
  {
    "content": "ops.md5sum.empty()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@266:6::266:24",
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@315:6::315:24"
    ]
  },
  {
    "content": "ops.md5sum == \"*\"",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@308:6::308:23"
    ]
  },
  {
    "content": "ops.datatype == \"*\"",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@301:6::301:25"
    ]
  },
  {
    "content": "!registerSubscriber(s, ops.datatype)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@287:6::287:42"
    ]
  },
  {
    "content": "!ops.helper",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@276:6::276:17"
    ]
  },
  {
    "content": "addSubCallback(ops)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@256:6::256:25"
    ]
  },
  {
    "content": "!sub->addCallback(ops.helper, ops.md5sum, ops.callback_queue, ops.queue_size, ops.tracked_object, ops.allow_concurrent_callbacks)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@242:8::242:137"
    ]
  },
  {
    "content": "md5sumsMatch(ops.md5sum, sub->md5sum())",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@225:12::225:51"
    ]
  },
  {
    "content": "!sub->isDropped() && sub->getName() == ops.topic",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@222:10::222:58"
    ]
  },
  {
    "content": "found_topic && !found",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@234:6::234:27"
    ]
  },
  {
    "content": "!(*i)->isDropped()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@130:9::130:27"
    ]
  },
  {
    "content": "!g_topic_manager",
    "locations": [
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@63:8::63:24",
      "src/ros_comm/roscpp/src/libros/topic_manager.cpp@60:6::60:22"
    ]
  },
  {
    "content": "host == *it",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport.cpp@118:8::118:19"
    ]
  },
  {
    "content": "host.length() >= 4 && host.substr(0, 4) == std::string(\"127.\")",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport.cpp@112:6::112:68"
    ]
  },
  {
    "content": "!only_localhost_allowed_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport.cpp@109:6::109:30"
    ]
  },
  {
    "content": "getnameinfo(ifa->ifa_addr,\n                    (family == AF_INET) ? sizeof(sockaddr_in)\n                                        : sizeof(sockaddr_in6),\n                    addr, NI_MAXHOST,\n                    NULL, 0, NI_NUMERICHOST)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport.cpp@92:8::96:44"
    ]
  },
  {
    "content": "family != AF_INET && family != AF_INET6",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport.cpp@89:8::89:47"
    ]
  },
  {
    "content": "NULL == ifa->ifa_addr",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport.cpp@86:7::86:28"
    ]
  },
  {
    "content": "-1 == getifaddrs(&ifaddr)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport.cpp@79:6::79:31"
    ]
  },
  {
    "content": "ros_ip_env && !strcmp(ros_ip_env, \"::1\")",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport.cpp@67:11::67:51"
    ]
  },
  {
    "content": "ros_ip_env && !strncmp(ros_ip_env, \"127.\", 4)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport.cpp@65:11::65:56"
    ]
  },
  {
    "content": "ros_hostname_env && !strcmp(ros_hostname_env, \"localhost\")",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport.cpp@63:6::63:64"
    ]
  },
  {
    "content": "getsockopt(sock_, SOL_SOCKET, SO_ERROR, reinterpret_cast<char*>(&error), &len) < 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@692:8::692:90"
    ]
  },
  {
    "content": "write_cb_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@679:10::679:19",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@127:10::127:19"
    ]
  },
  {
    "content": "read_cb_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@119:10::119:18",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@670:12::670:20"
    ]
  },
  {
    "content": "transport",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@662:12::662:21"
    ]
  },
  {
    "content": "is_server_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@105:8::105:18",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@657:10::657:20"
    ]
  },
  {
    "content": "(events & POLLOUT) && expecting_write_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@125:8::125:46",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@677:8::677:46"
    ]
  },
  {
    "content": "(events & POLLIN) && expecting_read_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@655:8::655:44",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@117:8::117:44"
    ]
  },
  {
    "content": "closed_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@637:8::637:15",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@617:8::617:15",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@527:8::527:15",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@605:8::605:15",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@565:8::565:15",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@510:8::510:15",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@102:8::102:15",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@673:8::673:15",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@585:8::585:15",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@545:8::545:15",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@649:8::649:15",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@347:8::347:15",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@471:8::471:15",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@655:8::655:15"
    ]
  },
  {
    "content": "(events & POLLERR) ||\n     (events & POLLHUP) ||\n     (events & POLLNVAL)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@686:5::688:24",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@108:5::110:24"
    ]
  },
  {
    "content": "!transport->setSocket(new_sock)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@630:8::630:39"
    ]
  },
  {
    "content": "new_sock >= 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@625:6::625:19"
    ]
  },
  {
    "content": "expecting_write_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@679:6::679:22",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@611:6::611:22"
    ]
  },
  {
    "content": "!expecting_write_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@591:6::591:23",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@661:6::661:23"
    ]
  },
  {
    "content": "expecting_read_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@571:6::571:21",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@643:6::643:21"
    ]
  },
  {
    "content": "!expecting_read_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@623:6::623:22",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@551:6::551:22"
    ]
  },
  {
    "content": "!last_socket_error_is_would_block()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@584:9::584:46",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@524:8::524:45",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@485:5::485:42"
    ]
  },
  {
    "content": "num_bytes < 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@409:12::409:25",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@522:6::522:19",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@582:8::582:21",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@483:6::483:19"
    ]
  },
  {
    "content": "num_bytes == 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@495:11::495:25",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@423:17::423:31"
    ]
  },
  {
    "content": "close_socket(sock_) != 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@441:12::441:38",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@321:12::321:38"
    ]
  },
  {
    "content": "poll_set_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@137:6::137:15",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@435:12::435:21",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@291:6::291:15",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@316:12::316:21"
    ]
  },
  {
    "content": "!closed_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@424:6::424:14",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@308:10::308:18",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@303:6::303:14",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@429:10::429:18"
    ]
  },
  {
    "content": "disconnect_cb",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@460:6::460:19",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@337:6::337:19"
    ]
  },
  {
    "content": "!(flags_ & SYNCHRONOUS)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@143:6::143:29",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@412:6::412:29",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@276:6::276:29",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@78:6::78:29"
    ]
  },
  {
    "content": "!initializeSocket()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@224:6::224:25",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@262:6::262:25",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@336:6::336:25",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@407:6::407:25"
    ]
  },
  {
    "content": "bind(sock_, (sockaddr *)&server_address_, sa_len_) < 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@388:6::388:60"
    ]
  },
  {
    "content": "sock_ <= 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@240:6::240:16",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@381:6::381:16"
    ]
  },
  {
    "content": "s_use_ipv6_",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcSocket.cpp@149:6::149:17",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@358:6::358:17"
    ]
  },
  {
    "content": "!s_use_ipv6_ && it->ai_family == AF_INET",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@272:10::272:50",
      "src/ros_comm/xmlrpcpp/src/XmlRpcSocket.cpp@221:8::221:48"
    ]
  },
  {
    "content": "getaddrinfo(host.c_str(), NULL, &hints, &addr) != 0",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcSocket.cpp@210:6::210:57",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@166:8::166:59",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@260:8::260:59"
    ]
  },
  {
    "content": "flags_ & SYNCHRONOUS",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@341:6::341:26"
    ]
  },
  {
    "content": "((flags_ & SYNCHRONOUS) && ret != 0) || // synchronous, connect() should return 0\n      (!(flags_ & SYNCHRONOUS) && last_socket_error() != ROS_SOCKETS_ASYNCHRONOUS_CONNECT_RETURN)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@315:6::316:97"
    ]
  },
  {
    "content": "inet_pton(AF_INET6, host.c_str(), &in6a) == 1",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@244:11::244:56"
    ]
  },
  {
    "content": "inet_pton(AF_INET, host.c_str(), &ina) == 1",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@234:6::234:49"
    ]
  },
  {
    "content": "sock_ == ROS_INVALID_SOCKET",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@221:6::221:33",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@151:6::151:33"
    ]
  },
  {
    "content": "!isHostAllowed(host)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@145:6::145:26",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@214:6::214:26"
    ]
  },
  {
    "content": "setsockopt(sock_, SOL_SOCKET, SO_KEEPALIVE, reinterpret_cast<const char*>(&val), sizeof(val)) != 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@205:8::205:106",
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@176:8::176:106"
    ]
  },
  {
    "content": "setsockopt(sock_, SOL_TCP, TCP_KEEPCNT, &val, sizeof(val)) != 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@196:8::196:71"
    ]
  },
  {
    "content": "setsockopt(sock_, SOL_TCP, TCP_KEEPINTVL, &val, sizeof(val)) != 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@190:8::190:73"
    ]
  },
  {
    "content": "setsockopt(sock_, SOL_TCP, TCP_KEEPIDLE, &val, sizeof(val)) != 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@184:8::184:72"
    ]
  },
  {
    "content": "use",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@173:6::173:9"
    ]
  },
  {
    "content": "header.getValue(\"tcp_nodelay\", nodelay) && nodelay == \"1\"",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@154:6::154:63"
    ]
  },
  {
    "content": "local_port_ < 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@117:6::117:21"
    ]
  },
  {
    "content": "cached_remote_host_.empty()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@103:6::103:33"
    ]
  },
  {
    "content": "!setNonBlocking()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_tcp.cpp@95:6::95:23"
    ]
  },
  {
    "content": "!transport->connect(host, port, connection_id)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@691:6::691:52"
    ]
  },
  {
    "content": "num_bytes < (unsigned) sizeof(header)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@429:17::429:54",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@596:13::596:50"
    ]
  },
  {
    "content": "rc == SOCKET_ERROR",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@570:5::570:23",
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@394:6::394:25"
    ]
  },
  {
    "content": "this_block == 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@547:8::547:23"
    ]
  },
  {
    "content": "++current_message_id_ == 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@540:6::540:32"
    ]
  },
  {
    "content": "header.block_ != last_block_ + 1",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@495:14::495:46"
    ]
  },
  {
    "content": "header.message_id_ != current_message_id_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@489:14::489:55"
    ]
  },
  {
    "content": "current_message_id_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@466:14::466:33"
    ]
  },
  {
    "content": "last_block_ == (total_blocks_ - 1)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@511:10::511:44"
    ]
  },
  {
    "content": "last_socket_error_is_would_block()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@411:14::411:50"
    ]
  },
  {
    "content": "data_filled_ == 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@382:10::382:27"
    ]
  },
  {
    "content": "reorder_start_ != reorder_buffer_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@369:10::369:43"
    ]
  },
  {
    "content": "from_previous",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@454:8::454:21"
    ]
  },
  {
    "content": "reorder_bytes_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@367:8::367:22"
    ]
  },
  {
    "content": "bind(sock_, (sockaddr *)&server_address_, sizeof(server_address_)) < 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@251:6::251:76"
    ]
  },
  {
    "content": "it->ai_family == AF_INET",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@177:10::177:34"
    ]
  },
  {
    "content": "::connect(sock_, (sockaddr *)&sin, sizeof(sin))",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@205:6::205:53"
    ]
  },
  {
    "content": "inet_addr(host.c_str()) == INADDR_NONE",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@159:6::159:44"
    ]
  },
  {
    "content": "max_datagram_size_ == 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport/transport_udp.cpp@76:6::76:29"
    ]
  },
  {
    "content": "retry_timer_handle_ == -1",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_publisher_link.cpp@269:8::269:33"
    ]
  },
  {
    "content": "reason == Connection::TransportDisconnect",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_publisher_link.cpp@259:6::259:47"
    ]
  },
  {
    "content": "dropping_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_publisher_link.cpp@200:6::200:15",
      "src/ros_comm/roscpp/src/libros/transport_publisher_link.cpp@250:6::250:15"
    ]
  },
  {
    "content": "connection_->getTransport()->getType() == std::string(\"TCPROS\")",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_publisher_link.cpp@214:8::214:71"
    ]
  },
  {
    "content": "needs_retry_ && WallTime::now() > next_retry_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_publisher_link.cpp@205:6::205:51"
    ]
  },
  {
    "content": "success || !connection_->getTransport()->requiresHeader()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_publisher_link.cpp@192:6::192:63"
    ]
  },
  {
    "content": "!success && !conn",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_publisher_link.cpp@182:6::182:23"
    ]
  },
  {
    "content": "retry_timer_handle_ != -1",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_publisher_link.cpp@136:6::136:31",
      "src/ros_comm/roscpp/src/libros/transport_publisher_link.cpp@149:6::149:31",
      "src/ros_comm/roscpp/src/libros/transport_publisher_link.cpp@70:6::70:31"
    ]
  },
  {
    "content": "!setHeader(header)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_publisher_link.cpp@130:6::130:24"
    ]
  },
  {
    "content": "connection_->getTransport()->requiresHeader()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_publisher_link.cpp@87:6::87:51"
    ]
  },
  {
    "content": "!queue_full_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_subscriber_link.cpp@197:10::197:22"
    ]
  },
  {
    "content": "max_queue > 0 && (int)outbox_.size() >= max_queue",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_subscriber_link.cpp@195:8::195:57"
    ]
  },
  {
    "content": "!ser",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_subscriber_link.cpp@179:6::179:10"
    ]
  },
  {
    "content": "!outbox_.empty()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_subscriber_link.cpp@162:8::162:24"
    ]
  },
  {
    "content": "writing_message_ || !header_written_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_subscriber_link.cpp@157:8::157:44"
    ]
  },
  {
    "content": "m.num_bytes > 0",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_subscriber_link.cpp@170:6::170:21"
    ]
  },
  {
    "content": "!pt->validateHeader(header, error_msg)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_subscriber_link.cpp@94:6::94:44"
    ]
  },
  {
    "content": "!pt",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_subscriber_link.cpp@82:6::82:9"
    ]
  },
  {
    "content": "!header.getValue(\"topic\", topic)",
    "locations": [
      "src/ros_comm/roscpp/src/libros/transport_subscriber_link.cpp@68:6::68:38"
    ]
  },
  {
    "content": "functions_.find(function_name) != functions_.end()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/xmlrpc_manager.cpp@393:6::393:56"
    ]
  },
  {
    "content": "c == i->client_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/xmlrpc_manager.cpp@370:8::370:23"
    ]
  },
  {
    "content": "i->client_->getHost() == host &&\n          i->client_->getPort() == port &&\n          i->client_->getUri()  == uri",
    "locations": [
      "src/ros_comm/roscpp/src/libros/xmlrpc_manager.cpp@321:10::323:38"
    ]
  },
  {
    "content": "!i->in_use_",
    "locations": [
      "src/ros_comm/roscpp/src/libros/xmlrpc_manager.cpp@318:8::318:19"
    ]
  },
  {
    "content": "!c",
    "locations": [
      "src/ros_comm/roscpp/src/libros/xmlrpc_manager.cpp@348:6::348:8"
    ]
  },
  {
    "content": "(*it)->check()",
    "locations": [
      "src/ros_comm/roscpp/src/libros/xmlrpc_manager.cpp@286:12::286:26"
    ]
  },
  {
    "content": "response.size() > 2",
    "locations": [
      "src/ros_comm/roscpp/src/libros/xmlrpc_manager.cpp@233:6::233:25"
    ]
  },
  {
    "content": "status_code != 1",
    "locations": [
      "src/ros_comm/roscpp/src/libros/xmlrpc_manager.cpp@227:6::227:22"
    ]
  },
  {
    "content": "response[1].getType() != XmlRpcValue::TypeString",
    "locations": [
      "src/ros_comm/roscpp/src/libros/xmlrpc_manager.cpp@220:6::220:54"
    ]
  },
  {
    "content": "response[0].getType() != XmlRpcValue::TypeInt",
    "locations": [
      "src/ros_comm/roscpp/src/libros/xmlrpc_manager.cpp@213:6::213:51"
    ]
  },
  {
    "content": "response.getType() != XmlRpcValue::TypeArray",
    "locations": [
      "src/ros_comm/roscpp/src/libros/xmlrpc_manager.cpp@201:6::201:50"
    ]
  },
  {
    "content": "!g_xmlrpc_manager",
    "locations": [
      "src/ros_comm/roscpp/src/libros/xmlrpc_manager.cpp@102:6::102:23",
      "src/ros_comm/roscpp/src/libros/xmlrpc_manager.cpp@105:8::105:25"
    ]
  },
  {
    "content": "rc",
    "locations": [
      "src/ros_comm/rosout/rosout.cpp@202:14::202:16",
      "src/ros_comm/rosout/rosout.cpp@196:18::196:20"
    ]
  },
  {
    "content": "current_backup_index_ == max_backup_index_",
    "locations": [
      "src/ros_comm/rosout/rosout.cpp@210:14::210:56"
    ]
  },
  {
    "content": "rc != 0",
    "locations": [
      "src/ros_comm/rosout/rosout.cpp@190:14::190:21"
    ]
  },
  {
    "content": "handle_ == 0",
    "locations": [
      "src/ros_comm/rosout/rosout.cpp@85:8::85:20",
      "src/ros_comm/rosout/rosout.cpp@216:12::216:24"
    ]
  },
  {
    "content": "current_backup_index_ <= max_backup_index_",
    "locations": [
      "src/ros_comm/rosout/rosout.cpp@185:12::185:54"
    ]
  },
  {
    "content": "fclose(handle_)",
    "locations": [
      "src/ros_comm/rosout/rosout.cpp@180:12::180:27"
    ]
  },
  {
    "content": "current_file_size_ > max_file_size_",
    "locations": [
      "src/ros_comm/rosout/rosout.cpp@178:10::178:45"
    ]
  },
  {
    "content": "fflush(handle_)",
    "locations": [
      "src/ros_comm/rosout/rosout.cpp@172:10::172:25",
      "src/ros_comm/rosout/rosout.cpp@103:12::103:27"
    ]
  },
  {
    "content": "it != msg->topics.begin()",
    "locations": [
      "src/ros_comm/rosout/rosout.cpp@153:10::153:37"
    ]
  },
  {
    "content": "written > 0",
    "locations": [
      "src/ros_comm/rosout/rosout.cpp@169:13::169:24",
      "src/ros_comm/rosout/rosout.cpp@100:15::100:26"
    ]
  },
  {
    "content": "written < 0",
    "locations": [
      "src/ros_comm/rosout/rosout.cpp@165:8::165:19",
      "src/ros_comm/rosout/rosout.cpp@96:10::96:21"
    ]
  },
  {
    "content": "! result.fromXml(_response, &offset)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@458:8::458:45"
    ]
  },
  {
    "content": "(XmlRpcUtil::nextTagIs(PARAMS_TAG,_response,&offset) &&\n       XmlRpcUtil::nextTagIs(PARAM_TAG,_response,&offset)) ||\n      (XmlRpcUtil::nextTagIs(FAULT_TAG,_response,&offset) && (_isFault = true))",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@454:6::456:79"
    ]
  },
  {
    "content": "! XmlRpcUtil::findTag(METHODRESPONSE_TAG,_response,&offset)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@448:6::448:66"
    ]
  },
  {
    "content": "_eof",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@424:10::424:14",
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@381:8::381:12"
    ]
  },
  {
    "content": "int(_response.length()) < _contentLength",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@423:8::423:48",
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@416:6::416:46"
    ]
  },
  {
    "content": "! XmlRpcSocket::nbRead(this->getfd(), _response, &_eof)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@417:8::417:64"
    ]
  },
  {
    "content": "(ep - cp > 2) && (strncmp(cp, \"\\n\\n\", 2) == 0)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@375:13::375:59",
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@99:10::99:56"
    ]
  },
  {
    "content": "(ep - cp > 4) && (strncmp(cp, \"\\r\\n\\r\\n\", 4) == 0)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@97:10::97:60",
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@373:13::373:63"
    ]
  },
  {
    "content": "(ep - cp > 16) && (strncasecmp(cp, \"Content-length: \", 16) == 0)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@371:8::371:72",
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@93:5::93:69"
    ]
  },
  {
    "content": "getKeepOpen() && _header.length() == 0 && _sendAttempts++ == 0",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@350:8::350:70"
    ]
  },
  {
    "content": "_contentLength <= 0",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@123:6::123:25",
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@397:6::397:25"
    ]
  },
  {
    "content": "lp == 0",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@117:6::117:13",
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@391:6::391:13"
    ]
  },
  {
    "content": "bp == 0",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@104:6::104:13",
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@380:6::380:13"
    ]
  },
  {
    "content": "! XmlRpcSocket::nbRead(this->getfd(), _header, &_eof) ||\n       (_eof && _header.length() == 0)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@345:6::346:38"
    ]
  },
  {
    "content": "_bytesWritten == int(_request.length())",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@331:6::331:45"
    ]
  },
  {
    "content": "! XmlRpcSocket::nbWrite(this->getfd(), _request, &_bytesWritten)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@323:6::323:71"
    ]
  },
  {
    "content": "_bytesWritten == 0",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@319:6::319:24"
    ]
  },
  {
    "content": "params.getType() == XmlRpcValue::TypeArray",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@259:8::259:50"
    ]
  },
  {
    "content": "params.valid()",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@257:6::257:20"
    ]
  },
  {
    "content": "! XmlRpcSocket::connect(fd, _host, _port)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@238:6::238:48"
    ]
  },
  {
    "content": "! XmlRpcSocket::setNonBlocking(fd)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@231:6::231:41",
      "src/ros_comm/xmlrpcpp/src/XmlRpcServer.cpp@86:6::86:41"
    ]
  },
  {
    "content": "_connectionState == NO_CONNECTION",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@200:6::200:39"
    ]
  },
  {
    "content": "(_connectionState != NO_CONNECTION && _connectionState != IDLE) || _eof",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@196:6::196:77"
    ]
  },
  {
    "content": "_connectionState == WRITE_REQUEST && _bytesWritten == 0",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@167:8::167:63"
    ]
  },
  {
    "content": "_connectionState == READ_RESPONSE",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@182:6::182:39"
    ]
  },
  {
    "content": "_connectionState == READ_HEADER",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@59:6::59:37",
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@179:6::179:37"
    ]
  },
  {
    "content": "_connectionState == WRITE_REQUEST",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@176:6::176:39"
    ]
  },
  {
    "content": "eventType == XmlRpcDispatch::Exception",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@165:6::165:44"
    ]
  },
  {
    "content": "! parseResponse(result)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@151:6::151:29"
    ]
  },
  {
    "content": "_connectionState != IDLE",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@149:6::149:30"
    ]
  },
  {
    "content": "! generateRequest(method, params)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@138:6::138:40",
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@99:6::99:40"
    ]
  },
  {
    "content": "! setupConnection()",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@96:6::96:26",
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@135:6::135:26"
    ]
  },
  {
    "content": "_executing",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@126:6::126:16",
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@87:6::87:16"
    ]
  },
  {
    "content": "_connectionState != IDLE || ! parseResponse(result)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@106:6::106:57"
    ]
  },
  {
    "content": "uri",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcClient.cpp@38:6::38:9"
    ]
  },
  {
    "content": "_inWork",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcDispatch.cpp@198:6::198:13"
    ]
  },
  {
    "content": "! src->getKeepOpen()",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcDispatch.cpp@156:14::156:35"
    ]
  },
  {
    "content": "thisIt->getSource() == src",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcDispatch.cpp@145:13::145:39"
    ]
  },
  {
    "content": "newMask != (unsigned) -1",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcDispatch.cpp@158:19::158:43"
    ]
  },
  {
    "content": "thisIt == _sources.end()",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcDispatch.cpp@148:11::148:35"
    ]
  },
  {
    "content": "FD_ISSET(fd, &excFd)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcDispatch.cpp@137:12::137:32"
    ]
  },
  {
    "content": "FD_ISSET(fd, &outFd)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcDispatch.cpp@135:12::135:32"
    ]
  },
  {
    "content": "FD_ISSET(fd, &inFd)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcDispatch.cpp@133:12::133:31"
    ]
  },
  {
    "content": "fd <= maxFd",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcDispatch.cpp@131:10::131:21"
    ]
  },
  {
    "content": "errno != EINTR",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcDispatch.cpp@118:9::118:23"
    ]
  },
  {
    "content": "it->getMask() && fd > maxFd",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcDispatch.cpp@101:10::101:37"
    ]
  },
  {
    "content": "it->getMask() & Exception",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcDispatch.cpp@100:10::100:35"
    ]
  },
  {
    "content": "it->getMask() & WritableEvent",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcDispatch.cpp@99:10::99:39"
    ]
  },
  {
    "content": "it->getMask() & ReadableEvent",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcDispatch.cpp@98:10::98:39"
    ]
  },
  {
    "content": "0 <= _endTime && getTime() > _endTime",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcDispatch.cpp@178:8::178:45"
    ]
  },
  {
    "content": "_doClear",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcDispatch.cpp@165:8::165:16"
    ]
  },
  {
    "content": "nEvents < 0",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcDispatch.cpp@116:8::116:19"
    ]
  },
  {
    "content": "timeout < 0.0",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcDispatch.cpp@106:8::106:21"
    ]
  },
  {
    "content": "it->getSource() == source",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcDispatch.cpp@54:8::54:33",
      "src/ros_comm/xmlrpcpp/src/XmlRpcDispatch.cpp@67:8::67:33"
    ]
  },
  {
    "content": "! _listMethods",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServer.cpp@260:8::260:23"
    ]
  },
  {
    "content": "_introspectionEnabled == enabled",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServer.cpp@253:6::253:38"
    ]
  },
  {
    "content": "! m",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServer.cpp@239:8::239:12"
    ]
  },
  {
    "content": "params[0].getType() != XmlRpcValue::TypeString",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServer.cpp@235:8::235:54"
    ]
  },
  {
    "content": "! XmlRpcSocket::setNonBlocking(s)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServer.cpp@160:11::160:45"
    ]
  },
  {
    "content": "s < 0",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServer.cpp@155:6::155:11"
    ]
  },
  {
    "content": "! XmlRpcSocket::listen(fd, backlog)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServer.cpp@110:6::110:42"
    ]
  },
  {
    "content": "! XmlRpcSocket::bind(fd, port)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServer.cpp@102:6::102:37"
    ]
  },
  {
    "content": "! XmlRpcSocket::setReuseAddr(fd)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServer.cpp@94:6::94:39"
    ]
  },
  {
    "content": "i == _methods.end()",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServer.cpp@65:6::65:25"
    ]
  },
  {
    "content": "i != _methods.end()",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServer.cpp@46:6::46:25",
      "src/ros_comm/xmlrpcpp/src/XmlRpcServer.cpp@55:6::55:25"
    ]
  },
  {
    "content": "! executeMethod(methodName, methodParams, resultValue[0]) &&\n           ! executeMulticall(methodName, params, resultValue[0])",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@305:10::306:65"
    ]
  },
  {
    "content": "! params[0][i].hasMember(METHODNAME) ||\n         ! params[0][i].hasMember(PARAMS)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@291:8::292:41"
    ]
  },
  {
    "content": "params.size() != 1 || params[0].getType() != XmlRpcValue::TypeArray",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@283:6::283:73"
    ]
  },
  {
    "content": "methodName != SYSTEM_MULTICALL",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@280:6::280:36"
    ]
  },
  {
    "content": "! result.valid()",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@269:6::269:23"
    ]
  },
  {
    "content": "! method",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@264:6::264:15"
    ]
  },
  {
    "content": "methodName.size() > 0 && XmlRpcUtil::findTag(PARAMS_TAG, _request, &offset)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@243:6::243:81"
    ]
  },
  {
    "content": "! executeMethod(methodName, params, resultValue) &&\n         ! executeMulticall(methodName, params, resultValue)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@222:8::223:60"
    ]
  },
  {
    "content": "_response.length() == 0",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@187:8::187:31",
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@184:6::184:29"
    ]
  },
  {
    "content": "_bytesWritten == int(_response.length())",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@201:6::201:46"
    ]
  },
  {
    "content": "! XmlRpcSocket::nbWrite(this->getfd(), _response, &_bytesWritten)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@194:6::194:72"
    ]
  },
  {
    "content": "eof",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@163:10::163:13",
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@106:8::106:11"
    ]
  },
  {
    "content": "int(_request.length()) < _contentLength",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@162:8::162:47",
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@154:6::154:45"
    ]
  },
  {
    "content": "! XmlRpcSocket::nbRead(this->getfd(), _request, &eof)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@156:8::156:62"
    ]
  },
  {
    "content": "kp != 0 && strncasecmp(kp, \"close\", 5) == 0",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@139:8::139:51"
    ]
  },
  {
    "content": "kp == 0 || strncasecmp(kp, \"keep-alive\", 10) != 0",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@136:8::136:57"
    ]
  },
  {
    "content": "_header.length() > 0",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@108:10::108:30",
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@80:8::80:28"
    ]
  },
  {
    "content": "(ep - cp > 12) && (strncasecmp(cp, \"Connection: \", 12) == 0)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@95:10::95:70"
    ]
  },
  {
    "content": "_header.find(\"HTTP/1.0\") != std::string::npos",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@135:6::135:51"
    ]
  },
  {
    "content": "! XmlRpcSocket::nbRead(this->getfd(), _header, &eof)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@78:6::78:59"
    ]
  },
  {
    "content": "_connectionState == WRITE_RESPONSE",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@65:6::65:40"
    ]
  },
  {
    "content": "_connectionState == READ_REQUEST",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerConnection.cpp@62:6::62:38"
    ]
  },
  {
    "content": "_server",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerMethod.cpp@12:8::12:15",
      "src/ros_comm/xmlrpcpp/src/XmlRpcServerMethod.cpp@17:8::17:15"
    ]
  },
  {
    "content": "nonFatalError()",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcSocket.cpp@329:15::329:30",
      "src/ros_comm/xmlrpcpp/src/XmlRpcSocket.cpp@299:15::299:30"
    ]
  },
  {
    "content": "n == 0",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcSocket.cpp@297:15::297:21"
    ]
  },
  {
    "content": "(error != EINPROGRESS) && error != EWOULDBLOCK",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcSocket.cpp@264:7::264:54"
    ]
  },
  {
    "content": "! wsInit",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcSocket.cpp@74:6::74:14"
    ]
  },
  {
    "content": "_deleteOnClose",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcSource.cpp@28:8::28:22"
    ]
  },
  {
    "content": "_fd != -1",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcSource.cpp@22:8::22:17"
    ]
  },
  {
    "content": "it!=_value.asStruct->begin()",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@613:16::613:44"
    ]
  },
  {
    "content": "! val.valid()",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@532:10::532:24"
    ]
  },
  {
    "content": "! XmlRpcUtil::nextTagIs(DATA_TAG, valueXml, offset)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@487:8::487:60"
    ]
  },
  {
    "content": "valueEnd == std::string::npos",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@446:8::446:37",
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@382:8::382:37",
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@405:8::405:37"
    ]
  },
  {
    "content": "sscanf(stime.c_str(),\"%4d%2d%2dT%2d:%2d:%2d\",&t.tm_year,&t.tm_mon,&t.tm_mday,&t.tm_hour,&t.tm_min,&t.tm_sec) != 6",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@414:8::414:121"
    ]
  },
  {
    "content": "sscanf_s(stime.c_str(),\"%4d%2d%2dT%2d:%2d:%2d\",&t.tm_year,&t.tm_mon,&t.tm_mday,&t.tm_hour,&t.tm_min,&t.tm_sec) != 6",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@412:8::412:123"
    ]
  },
  {
    "content": "tmplocale.size() > 0",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@349:8::349:28"
    ]
  },
  {
    "content": "locale_cstr",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@341:8::341:19"
    ]
  },
  {
    "content": "valueEnd == valueStart",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@307:8::307:30"
    ]
  },
  {
    "content": "valueEnd == valueStart || (ivalue != 0 && ivalue != 1)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@282:8::282:62"
    ]
  },
  {
    "content": "typeTag == VALUE_ETAG",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@244:13::244:34"
    ]
  },
  {
    "content": "typeTag == STRUCT_TAG",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@241:13::241:34"
    ]
  },
  {
    "content": "typeTag == ARRAY_TAG",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@239:13::239:33"
    ]
  },
  {
    "content": "typeTag == BASE64_TAG",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@237:13::237:34"
    ]
  },
  {
    "content": "typeTag == DATETIME_TAG",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@235:13::235:36"
    ]
  },
  {
    "content": "typeTag.empty() || typeTag == STRING_TAG",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@233:13::233:53"
    ]
  },
  {
    "content": "typeTag == DOUBLE_TAG",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@231:13::231:34"
    ]
  },
  {
    "content": "typeTag == I4_TAG || typeTag == INT_TAG",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@229:13::229:52"
    ]
  },
  {
    "content": "typeTag == BOOLEAN_TAG",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@227:8::227:30"
    ]
  },
  {
    "content": "! XmlRpcUtil::nextTagIs(VALUE_TAG, valueXml, offset)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@221:8::221:61"
    ]
  },
  {
    "content": "! (v1 == v2)",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@176:16::176:29"
    ]
  },
  {
    "content": "_value.asStruct->size() != other._value.asStruct->size()",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@168:14::168:70"
    ]
  },
  {
    "content": "_type != other._type",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@152:8::152:28"
    ]
  },
  {
    "content": "this != &rhs",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@123:8::123:20"
    ]
  },
  {
    "content": "_type != TypeStruct",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@115:15::115:34"
    ]
  },
  {
    "content": "_type == TypeInvalid",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@73:8::73:28",
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@100:8::100:28",
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@112:8::112:28"
    ]
  },
  {
    "content": "int(_value.asArray->size()) < size",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@93:13::93:47",
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@104:10::104:44"
    ]
  },
  {
    "content": "_type == TypeArray",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@103:15::103:33"
    ]
  },
  {
    "content": "_type != TypeArray",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@91:8::91:26"
    ]
  },
  {
    "content": "_type != t",
    "locations": [
      "src/ros_comm/xmlrpcpp/src/XmlRpcValue.cpp@85:13::85:23"
    ]
  },
  {
    "content": "ROS_UNLIKELY(__rosconsole_define_location__enabled)",
    "locations": [
      "src/rosconsole_bridge/src/bridge.cpp@93:10::93:61",
      "src/rosconsole_bridge/src/bridge.cpp@103:10::103:61",
      "src/rosconsole_bridge/src/bridge.cpp@114:10::114:61",
      "src/rosconsole_bridge/src/bridge.cpp@83:10::83:61"
    ]
  },
  {
    "content": "sub_index != std::string::npos && // needle is found\n      sub_index > 0 && // does not start with needle\n      space_index > sub_index && // no spaces before needle (\": \")\n      text.length() > space_index + 1",
    "locations": [
      "src/rosconsole_bridge/src/bridge.cpp@62:6::65:37"
    ]
  },
  {
    "content": "it == read_map_->end()",
    "locations": [
      "src/roscpp_core/cpp_common/src/header.cpp@112:6::112:28"
    ]
  },
  {
    "content": "eqpos == string::npos",
    "locations": [
      "src/roscpp_core/cpp_common/src/header.cpp@93:8::93:29"
    ]
  },
  {
    "content": "len > 1000000",
    "locations": [
      "src/roscpp_core/cpp_common/src/header.cpp@79:8::79:21"
    ]
  },
  {
    "content": "data_size > 0",
    "locations": [
      "src/roscpp_core/cpp_common/src/header.cpp@45:58::45:71",
      "src/roscpp_core/cpp_common/src/header.cpp@47:60::47:73"
    ]
  },
  {
    "content": "sec_part < INT_MIN || sec_part > INT_MAX",
    "locations": [
      "src/roscpp_core/rostime/src/duration.cpp@57:8::57:48"
    ]
  },
  {
    "content": "nsec_part < 0",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@491:8::491:21",
      "src/roscpp_core/rostime/src/duration.cpp@51:8::51:21"
    ]
  },
  {
    "content": "actual_end > expected_end + expected_cycle_time_",
    "locations": [
      "src/roscpp_core/rostime/src/rate.cpp@82:8::82:56",
      "src/roscpp_core/rostime/src/rate.cpp@141:8::141:56"
    ]
  },
  {
    "content": "sleep_time <= WallDuration(0.0)",
    "locations": [
      "src/roscpp_core/rostime/src/rate.cpp@137:5::137:36"
    ]
  },
  {
    "content": "actual_end < start_",
    "locations": [
      "src/roscpp_core/rostime/src/rate.cpp@122:6::122:25",
      "src/roscpp_core/rostime/src/rate.cpp@63:6::63:25"
    ]
  },
  {
    "content": "sleep_time <= Duration(0.0)",
    "locations": [
      "src/roscpp_core/rostime/src/rate.cpp@78:5::78:32"
    ]
  },
  {
    "content": "sec_part < 0 || sec_part > UINT_MAX",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@497:8::497:43"
    ]
  },
  {
    "content": "sec + sec_part > UINT_MAX",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@469:8::469:33"
    ]
  },
  {
    "content": "rhs.sec >= 0 || rhs.nsec == 0",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@342:8::342:37",
      "src/roscpp_core/rostime/src/time.cpp@448:8::448:37"
    ]
  },
  {
    "content": "Time::now() < start",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@420:16::420:35",
      "src/roscpp_core/rostime/src/time.cpp@371:16::371:35"
    ]
  },
  {
    "content": "start.isZero()",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@402:12::402:26",
      "src/roscpp_core/rostime/src/time.cpp@413:16::413:30"
    ]
  },
  {
    "content": "Time::useSystemTime()",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@394:8::394:29",
      "src/roscpp_core/rostime/src/time.cpp@355:8::355:29"
    ]
  },
  {
    "content": "d > WallDuration(0)",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@384:8::384:27"
    ]
  },
  {
    "content": "d > Duration(0)",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@358:12::358:27"
    ]
  },
  {
    "content": "timeout > ros::WallDuration(0, 0) && (ros::WallTime::now() - start > timeout)",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@300:12::300:89"
    ]
  },
  {
    "content": "g_stopped",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@306:8::306:17"
    ]
  },
  {
    "content": "g_use_sim_time",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@250:8::250:22"
    ]
  },
  {
    "content": "WaitForSingleObject (timer, INFINITE) != WAIT_OBJECT_0",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@193:8::193:62"
    ]
  },
  {
    "content": "!SetWaitableTimer (timer, &sleepTime, 0, NULL, NULL, 0)",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@188:8::188:63"
    ]
  },
  {
    "content": "timer == NULL",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@183:8::183:21"
    ]
  },
  {
    "content": "cpu_freq.QuadPart == 0",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@130:12::130:34"
    ]
  },
  {
    "content": "( start_sec == 0 ) && ( start_nsec == 0 )",
    "locations": [
      "src/roscpp_core/rostime/src/time.cpp@127:8::127:51"
    ]
  },
  {
    "content": "target.size() || top.size() || length_str.size() ||\n       zombie_only || deps_only || lang.size() || attrib.size()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@783:7::784:63",
      "src/rospack/src/rospack_cmdline.cpp@511:7::512:63",
      "src/rospack/src/rospack_cmdline.cpp@807:7::808:63",
      "src/rospack/src/rospack_cmdline.cpp@535:7::536:63",
      "src/rospack/src/rospack_cmdline.cpp@412:7::413:63",
      "src/rospack/src/rospack_cmdline.cpp@383:7::384:63",
      "src/rospack/src/rospack_cmdline.cpp@440:7::441:63",
      "src/rospack/src/rospack_cmdline.cpp@360:7::361:63",
      "src/rospack/src/rospack_cmdline.cpp@228:7::229:63",
      "src/rospack/src/rospack_cmdline.cpp@486:7::487:63"
    ]
  },
  {
    "content": "!package.size()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@481:7::481:22",
      "src/rospack/src/rospack_cmdline.cpp@407:7::407:22",
      "src/rospack/src/rospack_cmdline.cpp@355:7::355:22",
      "src/rospack/src/rospack_cmdline.cpp@746:7::746:22",
      "src/rospack/src/rospack_cmdline.cpp@674:7::674:22",
      "src/rospack/src/rospack_cmdline.cpp@778:7::778:22",
      "src/rospack/src/rospack_cmdline.cpp@802:7::802:22",
      "src/rospack/src/rospack_cmdline.cpp@716:7::716:22",
      "src/rospack/src/rospack_cmdline.cpp@644:7::644:22",
      "src/rospack/src/rospack_cmdline.cpp@602:7::602:22",
      "src/rospack/src/rospack_cmdline.cpp@530:7::530:22",
      "src/rospack/src/rospack_cmdline.cpp@506:7::506:22",
      "src/rospack/src/rospack_cmdline.cpp@378:7::378:22",
      "src/rospack/src/rospack_cmdline.cpp@223:7::223:22",
      "src/rospack/src/rospack_cmdline.cpp@435:7::435:22"
    ]
  },
  {
    "content": "it != flags.begin()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@570:9::570:28",
      "src/rospack/src/rospack_cmdline.cpp@764:9::764:28",
      "src/rospack/src/rospack_cmdline.cpp@662:9::662:28",
      "src/rospack/src/rospack_cmdline.cpp@734:9::734:28"
    ]
  },
  {
    "content": "!rp.cpp_exports(package, \"--libs-only-other\", \"lflags\", deps_only, flags)",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@757:7::757:80"
    ]
  },
  {
    "content": "target.size() || top.size() || length_str.size() || zombie_only",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@649:7::649:70",
      "src/rospack/src/rospack_cmdline.cpp@679:7::679:70",
      "src/rospack/src/rospack_cmdline.cpp@721:7::721:70",
      "src/rospack/src/rospack_cmdline.cpp@751:7::751:70",
      "src/rospack/src/rospack_cmdline.cpp@607:7::607:70"
    ]
  },
  {
    "content": "!rp.cpp_exports(package, \"--libs-only-l\", \"lflags\", deps_only, flags)",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@727:7::727:76"
    ]
  },
  {
    "content": "!combined.empty()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@623:9::623:26",
      "src/rospack/src/rospack_cmdline.cpp@695:9::695:26"
    ]
  },
  {
    "content": "!dry_result.empty() && !wet_result.empty()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@706:7::706:49",
      "src/rospack/src/rospack_cmdline.cpp@634:7::634:49"
    ]
  },
  {
    "content": "!rp.cpp_exports(package, \"--libs-only-L\", \"lflags\", deps_only, flags)",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@685:7::685:76"
    ]
  },
  {
    "content": "!rp.cpp_exports(package, \"--cflags-only-other\", \"cflags\", deps_only, flags)",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@655:7::655:82"
    ]
  },
  {
    "content": "!rp.cpp_exports(package, \"--cflags-only-I\", \"cflags\", deps_only, flags)",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@613:7::613:78"
    ]
  },
  {
    "content": "!rp.plugins(package, attrib, top, flags)",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@591:7::591:47"
    ]
  },
  {
    "content": "!package.size() || !attrib.size()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@580:7::580:40"
    ]
  },
  {
    "content": "!rp.exports(package, lang, attrib, deps_only, flags)",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@564:7::564:59"
    ]
  },
  {
    "content": "!package.size() || !lang.size() || !attrib.size()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@553:7::553:56"
    ]
  },
  {
    "content": "!rp.depsWhy(package, target, why_output)",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@470:7::470:47"
    ]
  },
  {
    "content": "!package.size() || !target.size()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@458:7::458:40"
    ]
  },
  {
    "content": "it != gens.begin()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@425:9::425:27"
    ]
  },
  {
    "content": "it != manifests.begin()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@396:9::396:32"
    ]
  },
  {
    "content": "it != deps.begin()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@344:9::344:27"
    ]
  },
  {
    "content": "std::find(disable_langs.begin(), disable_langs.end(), *it) !=\n           disable_langs.end()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@333:11::334:30"
    ]
  },
  {
    "content": "package_given || target.size() || top.size() || length_str.size() ||\n       zombie_only || deps_only || lang.size() || attrib.size()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@243:7::244:63",
      "src/rospack/src/rospack_cmdline.cpp@307:7::308:63",
      "src/rospack/src/rospack_cmdline.cpp@262:7::263:63",
      "src/rospack/src/rospack_cmdline.cpp@281:7::282:63"
    ]
  },
  {
    "content": "package_given || target.size() || top.size() ||\n       deps_only || lang.size() || attrib.size()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@201:7::202:48"
    ]
  },
  {
    "content": "command == \"profile\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@185:14::185:34",
      "src/rospack/src/rospack_cmdline.cpp@199:5::199:25"
    ]
  },
  {
    "content": "command == \"libs-only-other\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@183:14::183:42"
    ]
  },
  {
    "content": "command == \"libs-only-l\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@181:14::181:38"
    ]
  },
  {
    "content": "command == \"libs-only-L\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@179:14::179:38"
    ]
  },
  {
    "content": "command == \"cflags-only-other\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@177:14::177:44"
    ]
  },
  {
    "content": "command == \"cflags-only-I\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@175:14::175:40"
    ]
  },
  {
    "content": "command == \"plugins\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@173:14::173:34"
    ]
  },
  {
    "content": "command == \"export\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@171:14::171:33"
    ]
  },
  {
    "content": "command == \"depends-on1\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@169:14::169:38"
    ]
  },
  {
    "content": "command == \"depends-on\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@167:14::167:37"
    ]
  },
  {
    "content": "command == \"vcs0\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@165:14::165:31"
    ]
  },
  {
    "content": "command == \"vcs\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@163:14::163:30"
    ]
  },
  {
    "content": "command == \"rosdep\" || command == \"rosdeps\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@159:14::159:57"
    ]
  },
  {
    "content": "command == \"depends-why\" || command == \"deps-why\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@155:14::155:63"
    ]
  },
  {
    "content": "command == \"depends-manifest\" || command == \"deps-manifest\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@151:14::151:73"
    ]
  },
  {
    "content": "command == \"depends\" || command == \"deps\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@147:14::147:55"
    ]
  },
  {
    "content": "command == \"langs\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@145:14::145:32"
    ]
  },
  {
    "content": "command == \"list-duplicates\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@143:14::143:42",
      "src/rospack/src/rospack_cmdline.cpp@279:10::279:38"
    ]
  },
  {
    "content": "command == \"list-names\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@260:10::260:33",
      "src/rospack/src/rospack_cmdline.cpp@141:14::141:37"
    ]
  },
  {
    "content": "command == \"list\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@139:14::139:31",
      "src/rospack/src/rospack_cmdline.cpp@241:10::241:27"
    ]
  },
  {
    "content": "command == \"find\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@221:5::221:22",
      "src/rospack/src/rospack_cmdline.cpp@137:14::137:31"
    ]
  },
  {
    "content": "command == \"help\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@130:10::130:27",
      "src/rospack/src/rospack_cmdline.cpp@135:9::135:26"
    ]
  },
  {
    "content": "package_given || (command != \"help\" && vm.count(\"help\"))",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@129:7::129:63"
    ]
  },
  {
    "content": "zombie_only",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@120:7::120:18"
    ]
  },
  {
    "content": "rp.getName() == ROSSTACK_NAME && command == \"contents\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@776:10::776:64"
    ]
  },
  {
    "content": "rp.getName() == ROSPACK_NAME && command == \"libs-only-l\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@714:10::714:66"
    ]
  },
  {
    "content": "rp.getName() == ROSPACK_NAME && command == \"cflags-only-other\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@642:10::642:72"
    ]
  },
  {
    "content": "rp.getName() == ROSPACK_NAME && command == \"plugins\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@578:10::578:62"
    ]
  },
  {
    "content": "command == \"depends-on\" || command == \"depends-on1\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@528:10::528:61"
    ]
  },
  {
    "content": "rp.getName() == ROSPACK_NAME &&\n          (command == \"vcs\" || command == \"vcs0\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@503:10::504:49"
    ]
  },
  {
    "content": "rp.getName() == ROSPACK_NAME &&\n          (command == \"rosdep\" || command == \"rosdeps\" ||\n           command == \"rosdep0\" || command == \"rosdeps0\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@477:10::479:57"
    ]
  },
  {
    "content": "command == \"depends-indent\" || command == \"deps-indent\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@433:10::433:65"
    ]
  },
  {
    "content": "command == \"depends-manifests\" || command == \"deps-manifests\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@376:10::376:71"
    ]
  },
  {
    "content": "rp.getName() == ROSPACK_NAME && command == \"langs\"",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@305:10::305:60"
    ]
  },
  {
    "content": "!rp.getSearchPathFromEnv(search_path)",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@195:5::195:42"
    ]
  },
  {
    "content": "command == \"help\" || vm.count(\"help\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@127:5::127:42"
    ]
  },
  {
    "content": "vm.count(\"length\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@113:5::113:23"
    ]
  },
  {
    "content": "vm.count(\"zombie-only\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@111:5::111:28"
    ]
  },
  {
    "content": "vm.count(\"target\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@109:5::109:23"
    ]
  },
  {
    "content": "vm.count(\"top\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@107:5::107:20"
    ]
  },
  {
    "content": "vm.count(\"attrib\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@105:5::105:23"
    ]
  },
  {
    "content": "vm.count(\"lang\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@103:5::103:21"
    ]
  },
  {
    "content": "vm.count(\"deps-only\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@101:5::101:26"
    ]
  },
  {
    "content": "(command == \"profile\") ||\n     (command == \"depends-on\") ||\n     (command == \"depends-on1\") ||\n     (command == \"langs\") ||\n     (command == \"list-duplicates\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@84:5::88:35"
    ]
  },
  {
    "content": "!command.size()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@76:5::76:20"
    ]
  },
  {
    "content": "vm.count(\"-h\") && command.empty()",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@73:5::73:38"
    ]
  },
  {
    "content": "vm.count(\"command\")",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@70:5::70:24"
    ]
  },
  {
    "content": "!parse_args(argc, argv, rp, vm)",
    "locations": [
      "src/rospack/src/rospack_cmdline.cpp@53:5::53:36"
    ]
  },
  {
    "content": "!rospack::rospack_run(argc, argv, rp, output)",
    "locations": [
      "src/rospack/src/rospack_main.cpp@36:5::36:50"
    ]
  },
  {
    "content": "intermediate.size()",
    "locations": [
      "src/rospack/src/utils.cpp@136:9::136:28",
      "src/rospack/src/utils.cpp@95:11::95:30",
      "src/rospack/src/utils.cpp@129:11::129:30",
      "src/rospack/src/utils.cpp@114:15::114:34"
    ]
  },
  {
    "content": "select",
    "locations": [
      "src/rospack/src/utils.cpp@112:13::112:19",
      "src/rospack/src/utils.cpp@141:5::141:11",
      "src/rospack/src/utils.cpp@127:9::127:15",
      "src/rospack/src/utils.cpp@93:9::93:15"
    ]
  },
  {
    "content": "it->size() >= token.size() && it->substr(0,token.size()) == token",
    "locations": [
      "src/rospack/src/utils.cpp@106:11::106:76"
    ]
  },
  {
    "content": "++iit != result_vec.end()",
    "locations": [
      "src/rospack/src/utils.cpp@104:9::104:34"
    ]
  },
  {
    "content": "it->size() > 2 &&\n            (*it)[0] == '/' &&\n            it->substr(it->size()-2) == \".a\"",
    "locations": [
      "src/rospack/src/utils.cpp@123:12::125:44"
    ]
  },
  {
    "content": "it->size() > token.size() && it->substr(0,token.size()) == token",
    "locations": [
      "src/rospack/src/utils.cpp@91:7::91:71"
    ]
  },
  {
    "content": "it == vec_out.begin()",
    "locations": [
      "src/rospack/src/utils.cpp@67:7::67:28"
    ]
  },
  {
    "content": "set.find(*it) == set.end()",
    "locations": [
      "src/rospack/src/utils.cpp@55:7::55:33"
    ]
  },
  {
    "content": "last",
    "locations": [
      "src/rospack/src/utils.cpp@48:5::48:9",
      "src/rospack/src/utils.cpp@61:5::61:9"
    ]
  },
  {
    "content": "gui",
    "locations": [
      "src/stage_ros/src/stageros.cpp@770:11::770:14",
      "src/stage_ros/src/stageros.cpp@297:7::297:10"
    ]
  },
  {
    "content": "!strcmp(argv[i], \"-u\")",
    "locations": [
      "src/stage_ros/src/stageros.cpp@751:11::751:33"
    ]
  },
  {
    "content": "!strcmp(argv[i], \"-g\")",
    "locations": [
      "src/stage_ros/src/stageros.cpp@749:11::749:33"
    ]
  },
  {
    "content": "sn.SubscribeModels() != 0",
    "locations": [
      "src/stage_ros/src/stageros.cpp@757:7::757:32"
    ]
  },
  {
    "content": "argc < 2",
    "locations": [
      "src/stage_ros/src/stageros.cpp@737:7::737:17"
    ]
  },
  {
    "content": "robotmodel->cameramodels.size() > 1",
    "locations": [
      "src/stage_ros/src/stageros.cpp@650:20::650:55",
      "src/stage_ros/src/stageros.cpp@682:20::682:55",
      "src/stage_ros/src/stageros.cpp@592:20::592:55",
      "src/stage_ros/src/stageros.cpp@672:20::672:55"
    ]
  },
  {
    "content": "v<=nearClip || v>=farClip",
    "locations": [
      "src/stage_ros/src/stageros.cpp@633:28::633:53"
    ]
  },
  {
    "content": "data[i]>=farClip",
    "locations": [
      "src/stage_ros/src/stageros.cpp@625:32::625:48"
    ]
  },
  {
    "content": "data[i]<=nearClip",
    "locations": [
      "src/stage_ros/src/stageros.cpp@623:27::623:44"
    ]
  },
  {
    "content": "this->isDepthCanonical",
    "locations": [
      "src/stage_ros/src/stageros.cpp@617:20::617:42"
    ]
  },
  {
    "content": "(robotmodel->image_pubs[s].getNumSubscribers()>0 && cameramodel->FrameColor())\n                    || (robotmodel->depth_pubs[s].getNumSubscribers()>0 && cameramodel->FrameDepth())",
    "locations": [
      "src/stage_ros/src/stageros.cpp@659:16::660:101"
    ]
  },
  {
    "content": "robotmodel->image_pubs[s].getNumSubscribers() > 0 && cameramodel->FrameColor()",
    "locations": [
      "src/stage_ros/src/stageros.cpp@567:16::567:94"
    ]
  },
  {
    "content": "dT>0",
    "locations": [
      "src/stage_ros/src/stageros.cpp@532:16::532:20"
    ]
  },
  {
    "content": "robotmodel->lasermodels.size() > 1",
    "locations": [
      "src/stage_ros/src/stageros.cpp@479:16::479:50",
      "src/stage_ros/src/stageros.cpp@463:20::463:54"
    ]
  },
  {
    "content": "sensor.ranges.size()",
    "locations": [
      "src/stage_ros/src/stageros.cpp@445:15::445:37"
    ]
  },
  {
    "content": "sensors.size() > 1",
    "locations": [
      "src/stage_ros/src/stageros.cpp@438:15::438:35"
    ]
  },
  {
    "content": "this->base_last_globalpos.size()>r",
    "locations": [
      "src/stage_ros/src/stageros.cpp@529:12::529:46"
    ]
  },
  {
    "content": "this->sim_time.sec == 0 && this->sim_time.nsec == 0",
    "locations": [
      "src/stage_ros/src/stageros.cpp@413:7::413:58"
    ]
  },
  {
    "content": "new_robot->cameramodels.size() == 1",
    "locations": [
      "src/stage_ros/src/stageros.cpp@369:16::369:51"
    ]
  },
  {
    "content": "new_robot->lasermodels.size() == 1",
    "locations": [
      "src/stage_ros/src/stageros.cpp@360:16::360:50"
    ]
  },
  {
    "content": "this->cameramodels[s] and this->cameramodels[s]->Parent() == new_robot->positionmodel",
    "locations": [
      "src/stage_ros/src/stageros.cpp@345:16::345:101"
    ]
  },
  {
    "content": "this->lasermodels[s] and this->lasermodels[s]->Parent() == new_robot->positionmodel",
    "locations": [
      "src/stage_ros/src/stageros.cpp@336:16::336:99"
    ]
  },
  {
    "content": "stat(fname, &s) != 0",
    "locations": [
      "src/stage_ros/src/stageros.cpp@288:7::288:27"
    ]
  },
  {
    "content": "!localn.getParam(\"is_depth_canonical\", isDepthCanonical)",
    "locations": [
      "src/stage_ros/src/stageros.cpp@280:7::280:63"
    ]
  },
  {
    "content": "!localn.getParam(\"base_watchdog_timeout\", t)",
    "locations": [
      "src/stage_ros/src/stageros.cpp@276:7::276:51"
    ]
  },
  {
    "content": "dynamic_cast<Stg::ModelPosition *>(mod)",
    "locations": [
      "src/stage_ros/src/stageros.cpp@233:8::233:47"
    ]
  },
  {
    "content": "dynamic_cast<Stg::ModelRanger *>(mod)",
    "locations": [
      "src/stage_ros/src/stageros.cpp@231:8::231:45"
    ]
  },
  {
    "content": "(found==std::string::npos) && umn",
    "locations": [
      "src/stage_ros/src/stageros.cpp@209:12::209:45",
      "src/stage_ros/src/stageros.cpp@183:12::183:45"
    ]
  },
  {
    "content": "(positionmodels.size() > 1 ) || umn",
    "locations": [
      "src/stage_ros/src/stageros.cpp@178:8::178:43",
      "src/stage_ros/src/stageros.cpp@204:8::204:43"
    ]
  },
  {
    "content": "instance",
    "locations": [
      "src/urdf/urdf/src/model.cpp@163:7::163:15"
    ]
  },
  {
    "content": "classes[i].find(\"urdf/ColladaURDFParser\") != std::string::npos",
    "locations": [
      "src/urdf/urdf/src/model.cpp@160:5::160:67"
    ]
  },
  {
    "content": "!PARSER_PLUGIN_LOADER",
    "locations": [
      "src/urdf/urdf/src/model.cpp@155:10::155:31"
    ]
  },
  {
    "content": "model",
    "locations": [
      "src/urdf/urdf/src/model.cpp@182:6::182:11"
    ]
  },
  {
    "content": "IsColladaData(xml_string)",
    "locations": [
      "src/urdf/urdf/src/model.cpp@146:5::146:32"
    ]
  },
  {
    "content": "!robot_xml",
    "locations": [
      "src/urdf/urdf/src/model.cpp@129:6::129:16"
    ]
  },
  {
    "content": "!xml_doc",
    "locations": [
      "src/urdf/urdf/src/model.cpp@115:6::115:14"
    ]
  },
  {
    "content": "!nh.getParam(full_param, xml_string)",
    "locations": [
      "src/urdf/urdf/src/model.cpp@106:6::106:42"
    ]
  },
  {
    "content": "!nh.searchParam(param, full_param)",
    "locations": [
      "src/urdf/urdf/src/model.cpp@100:6::100:40"
    ]
  },
  {
    "content": "xml_file.is_open()",
    "locations": [
      "src/urdf/urdf/src/model.cpp@69:6::69:24"
    ]
  },
  {
    "content": "node != NULL",
    "locations": [
      "src/yujin_ocs/yocs_cmd_vel_mux/src/cmd_vel_mux_nodelet.cpp@139:6::139:20"
    ]
  },
  {
    "content": "doc[\"publisher\"]",
    "locations": [
      "src/yujin_ocs/yocs_cmd_vel_mux/src/cmd_vel_mux_nodelet.cpp@134:6::134:24"
    ]
  },
  {
    "content": "ifs.good() == false",
    "locations": [
      "src/yujin_ocs/yocs_cmd_vel_mux/src/cmd_vel_mux_nodelet.cpp@115:6::115:25"
    ]
  },
  {
    "content": "config.yaml_cfg_file == \"\"",
    "locations": [
      "src/yujin_ocs/yocs_cmd_vel_mux/src/cmd_vel_mux_nodelet.cpp@101:5::101:33"
    ]
  },
  {
    "content": "cmd_vel_sub.allowed == idx",
    "locations": [
      "src/yujin_ocs/yocs_cmd_vel_mux/src/cmd_vel_mux_nodelet.cpp@60:6::60:32"
    ]
  },
  {
    "content": "cmd_vel_sub.allowed != idx",
    "locations": [
      "src/yujin_ocs/yocs_cmd_vel_mux/src/cmd_vel_mux_nodelet.cpp@44:8::44:34"
    ]
  },
  {
    "content": "(cmd_vel_sub.allowed == VACANT) ||\n      (cmd_vel_sub.allowed == idx)    ||\n      (cmd_vel_sub[idx].priority > cmd_vel_sub[cmd_vel_sub.allowed].priority)",
    "locations": [
      "src/yujin_ocs/yocs_cmd_vel_mux/src/cmd_vel_mux_nodelet.cpp@40:6::42:77"
    ]
  },
  {
    "content": "vel_smoother_->init(ph)",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@319:8::319:31"
    ]
  },
  {
    "content": "(nh.getParam(\"accel_lim_v\", accel_lim_v) == false) ||\n      (nh.getParam(\"accel_lim_w\", accel_lim_w) == false)",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@270:6::271:56"
    ]
  },
  {
    "content": "(nh.getParam(\"speed_lim_v\", speed_lim_v) == false) ||\n      (nh.getParam(\"speed_lim_w\", speed_lim_w) == false)",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@263:6::264:56"
    ]
  },
  {
    "content": "(int(feedback) < NONE) || (int(feedback) > COMMANDS)",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@253:6::253:58"
    ]
  },
  {
    "content": "std::abs(v_inc) > max_v_inc",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@208:10::208:37"
    ]
  },
  {
    "content": "theta < 0",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@197:10::197:19"
    ]
  },
  {
    "content": "(robot_feedback == ODOMETRY) && (current_vel.angular.z*target_vel.angular.z < 0.0)",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@175:10::175:92"
    ]
  },
  {
    "content": "(robot_feedback == ODOMETRY) && (current_vel.linear.x*target_vel.linear.x < 0.0)",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@164:10::164:90"
    ]
  },
  {
    "content": "IS_ZERO_VEOCITY(target_vel) == false",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@125:10::125:46"
    ]
  },
  {
    "content": "input_active == true",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@223:13::223:33"
    ]
  },
  {
    "content": "(target_vel.linear.x  != last_cmd_vel.linear.x) ||\n        (target_vel.angular.z != last_cmd_vel.angular.z)",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@155:8::156:56"
    ]
  },
  {
    "content": "(input_active == true) && (cb_avg_time > 0.0) &&\n        ((ros::Time::now() - last_cb_time).toSec() > std::min(3.0*cb_avg_time, 0.5))",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@116:8::117:84"
    ]
  },
  {
    "content": "robot_feedback == COMMANDS",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@103:6::103:32"
    ]
  },
  {
    "content": "robot_feedback == ODOMETRY",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@95:6::95:32"
    ]
  },
  {
    "content": "period_record.size() <= PERIOD_RECORD_SIZE/2",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@73:6::73:50"
    ]
  },
  {
    "content": "period_record.size() < PERIOD_RECORD_SIZE",
    "locations": [
      "src/yujin_ocs/yocs_velocity_smoother/src/velocity_smoother_nodelet.cpp@60:6::60:47"
    ]
  }
]